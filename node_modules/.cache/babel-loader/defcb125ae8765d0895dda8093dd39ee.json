{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/DadosUsuario/index.js\";\nimport React from 'react';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { API, Auth } from \"aws-amplify\";\nimport iconFacebook from \"../img/facebook.svg\";\nimport iconGoogle from \"../img/google_plus.svg\";\nimport * as PropTypes from \"prop-types\";\nimport config from \"../../../config/constants.js\";\nimport { withRouter } from \"react-router-dom\";\nimport './styles.scss'; // const schema = Yup.object().shape({\n//     nome: Yup.string().required('Digite seu nome completo!'),\n//     nascimento: Yup.date().required('Digite sua data de nascimento!'),\n//     cpf: Yup.string().required('Digite seu CPF'),\n//     email: Yup.string().required('Digite seu E-mail!'),\n//     nickname: Yup.string().required('Digite seu nickname!'),\n//     uf: Yup.string().required('Digite seu estado de origem!'),\n//     cidade: Yup.string().required('Digite sua cidade!'),\n//     bairro: Yup.string().required('Digite seu bairro!'),\n//     rua: Yup.string().required('Digite sua rua!'),\n//     numero: Yup.string().required('Digite o número da sua casa!'),\n//     cep: Yup.string().length(8).required(\"Campo obrigatório\")\n// })\n// const enhanceWithFormik = withFormik({\n//     mapPropsToValues: () => ({ \n//         nome: '',\n//         nascimento: '',\n//         cpf: '', \n//         email: '',\n//         nickname: '',\n//         uf: '\u001d',\n//         cidade: '',\n//         bairro: '',\n//         rua: '',\n//         numero: '',\n//         cep: '',\n//         complemento: '',\n//         codigo: '',\n//     }),\n//   handleSubmit: values => {\n//     console.log(values)\n//   },\n//     isInitialValid: false,\n//     validateOnChange: true,\n//     validateOnBlur: true,\n//     displayName: 'dadosUser',\n//     validationSchema: schema\n// })\n\nconst estados = [\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MT\", \"MS\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SP\", \"SE\", \"TO\"];\n\nfunction CadastroForm(props) {\n  const values = props.values,\n        errors = props.errors;\n  return (// state = {\n    //     btn_disabled: true,\n    //     btn_color: '#BBB',\n    //     required: true\n    // };\n    // on_input (i) {\n    //     const target = i.target;\n    //     const habilitar = target.value.length;\n    //     if (habilitar >= 8) {\n    //         this.setState({ btn_disabled: false});\n    //         this.setState({ btn_color: '#000'});\n    //         this.setState({ required: false})\n    //     } else {\n    //         this.setState({ btn_disabled: true});\n    //         this.setState({ btn_color: '#BBB'});\n    //         this.setState({ required: true})\n    //     }\n    // }  \n    // render() {\n    //     return (\n    React.createElement(\"section\", {\n      className: \"telaCompleteCadastro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"completeCadastro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"titleH3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Complete seu cadastro\"), React.createElement(\"div\", {\n      className: \"redes-sociais\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"facebook-icon\",\n      src: iconFacebook,\n      alt: \"Icone Facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      href: \"#.com\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"google-icon\",\n      src: iconGoogle,\n      alt: \"Icone Google plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(Form, {\n      className: \"dadosPessoais\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"blocoDadosPessoais\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"titleH3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Dados pessoais\"), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"nome\",\n      type: \"text\",\n      name: \"nome\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Nome Completo\")), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"nascimento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"doisCampos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"nascimento\",\n      type: \"text\",\n      name: \"nascimento\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"nascimento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Nascimento\")), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"cpf\",\n      type: \"text\",\n      name: \"cpf\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"CPF\"))), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"email\",\n      type: \"text\",\n      name: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"E-mail\")), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"nickname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"nickname\",\n      type: \"text\",\n      name: \"nickname\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"nickname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"nickname\"))), React.createElement(\"div\", {\n      className: \"blocoEnderecoCompleto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"titleH3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Endere\\xE7o completo\"), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"uf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"cidade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"doisCampos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"uf\",\n      name: \"uf\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"UF\"), estados.map((estado, index) => React.createElement(\"option\", {\n      value: estado,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, estado))), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"uf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"cidade\",\n      type: \"text\",\n      name: \"cidade\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"cidade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Cidade\"))), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"bairro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"bairro\",\n      type: \"text\",\n      name: \"bairro\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"bairro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Bairro\")), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"rua\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"rua\",\n      type: \"text\",\n      name: \"rua\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"rua\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Rua\")), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"numero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      className: \"error\",\n      component: \"span\",\n      name: \"cep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"doisCampos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"numero\",\n      type: \"text\",\n      name: \"numero\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"numero\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Numero\")), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"cep\",\n      type: \"text\",\n      name: \"cep\",\n      onInput: this.on_input.bind(this),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"cep\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"CEP\"))), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"complemento\",\n      type: \"text\",\n      name: \"complemento\",\n      required: this.state.required,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"complemento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Complemento - \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"opcional\")))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"titleH3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"C\\xF3digo Promocional\"), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Field, {\n      id: \"codigo\",\n      type: \"text\",\n      name: \"codigo\",\n      required: this.state.required,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"complemento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"C\\xF3digo - \", React.createElement(\"i\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"opcional\")))), React.createElement(\"button\", {\n      className: \"continuar\",\n      type: \"submit\",\n      disabled: this.state.btn_disabled,\n      style: {\n        background: \"\".concat(this.state.btn_color)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Continuar\")))) //         )\n    //     }\n    // }\n\n  );\n}\n\nCadastroForm.propTypes = {\n  values: PropTypes.any,\n  errors: PropTypes.any\n};\nconst FormikForm = withRouter(withFormik({\n  mapPropsToValues({\n    nome,\n    nascimento,\n    cpf,\n    telefone,\n    nickname,\n    genero,\n    estado,\n    cidade,\n    cep,\n    bairro,\n    endereco,\n    numero,\n    complemento // const enhanceWithFormik = withFormik({\n    //     mapPropsToValues: () => ({ \n    //         nome: '',\n    //         nascimento: '',\n    //         cpf: '', \n    //         email: '',\n    //         nickname: '',\n    //         uf: '\u001d',\n    //         cidade: '',\n    //         bairro: '',\n    //         rua: '',\n    //         numero: '',\n    //         cep: '',\n    //         complemento: '',\n    //         codigo: '',\n\n  }) {\n    return {\n      nome: nome || '',\n      nascimento: nascimento || '',\n      cpf: cpf || '',\n      telefone: telefone || '',\n      nickname: nickname || '',\n      genero: genero || '',\n      estado: estado || '',\n      cidade: cidade || '',\n      cep: cep || '',\n      bairro: bairro || '',\n      endereco: endereco || '',\n      numero: numero || '',\n      complemento: complemento || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    nome: Yup.string().required(\"Campo obrigatório\"),\n    nascimento: Yup.date().required(\"Campo obrigatório\"),\n    cpf: Yup.string().cpf('CPF inválido').required(\"Campo obrigatório\"),\n    telefone: Yup.number().positive().min(8, 'Digite um número de telefone válido').required(\"Campo obrigatório\"),\n    nickname: Yup.string().required(\"Campo obrigatório\"),\n    genero: Yup.string().required(\"Campo obrigatório\"),\n    estado: Yup.string().required(\"Campo obrigatório\"),\n    cidade: Yup.string().required(\"Campo obrigatório\"),\n    cep: Yup.string().length(8).required(\"Campo obrigatório\"),\n    bairro: Yup.string().required(\"Campo obrigatório\"),\n    endereco: Yup.string().required(\"Campo obrigatório\"),\n    numero: Yup.string().required(\"Campo obrigatório\"),\n    complemento: Yup.string().default('N/A')\n  }),\n\n  handleSubmit(values, {\n    props\n  }) {\n    Auth.currentAuthenticatedUser().then(response => {\n      console.log('Current authenticated user: ', response);\n      const options = {\n        body: {\n          userdata: values,\n          email: response.attributes.email\n        }\n      };\n      API.post(config.APIS.BOLAOABBR, '/user', options).then(response => {\n        console.log('Post bem sucedido. response: ', response);\n        props.history.push('/', {\n          user_id: response.data\n        });\n      }).catch(error => {\n        console.log('Erro postando dados do usuário: ', error);\n        window.alert('Erro fazendo post dos dados do usuário.');\n      });\n    });\n  }\n\n})(CadastroForm));\nexport default FormikForm; // export default enhanceWithFormik(dadosUser);","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/DadosUsuario/index.js"],"names":["React","withFormik","Form","Field","ErrorMessage","Yup","API","Auth","PropTypes","config","withRouter","estados","CadastroForm","props","values","errors","iconFacebook","iconGoogle","map","estado","index","on_input","bind","state","required","btn_disabled","background","btn_color","propTypes","any","FormikForm","mapPropsToValues","nome","nascimento","cpf","telefone","nickname","genero","cidade","cep","bairro","endereco","numero","complemento","validationSchema","object","shape","string","date","number","positive","min","length","default","handleSubmit","currentAuthenticatedUser","then","response","console","log","options","body","userdata","email","attributes","post","APIS","BOLAOABBR","history","push","user_id","data","catch","error","window","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { API, Auth } from \"aws-amplify\"\n\nimport iconFacebook from '../img/facebook.svg';\nimport iconGoogle from '../img/google_plus.svg';\nimport * as PropTypes from \"prop-types\"\nimport config from \"../../../config/constants.js\"\nimport {withRouter} from \"react-router-dom\"\n\nimport './styles.scss';\n\n  \n// const schema = Yup.object().shape({\n//     nome: Yup.string().required('Digite seu nome completo!'),\n//     nascimento: Yup.date().required('Digite sua data de nascimento!'),\n//     cpf: Yup.string().required('Digite seu CPF'),\n//     email: Yup.string().required('Digite seu E-mail!'),\n//     nickname: Yup.string().required('Digite seu nickname!'),\n//     uf: Yup.string().required('Digite seu estado de origem!'),\n//     cidade: Yup.string().required('Digite sua cidade!'),\n//     bairro: Yup.string().required('Digite seu bairro!'),\n//     rua: Yup.string().required('Digite sua rua!'),\n//     numero: Yup.string().required('Digite o número da sua casa!'),\n//     cep: Yup.string().length(8).required(\"Campo obrigatório\")\n\n// })\n\n// const enhanceWithFormik = withFormik({\n//     mapPropsToValues: () => ({ \n//         nome: '',\n//         nascimento: '',\n//         cpf: '', \n//         email: '',\n//         nickname: '',\n//         uf: '\u001d',\n//         cidade: '',\n//         bairro: '',\n//         rua: '',\n//         numero: '',\n//         cep: '',\n//         complemento: '',\n//         codigo: '',\n//     }),\n//   handleSubmit: values => {\n//     console.log(values)\n//   },\n//     isInitialValid: false,\n//     validateOnChange: true,\n//     validateOnBlur: true,\n//     displayName: 'dadosUser',\n//     validationSchema: schema\n// })\n\nconst estados = [\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MT\", \"MS\",\n  \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\",\n  \"SP\", \"SE\", \"TO\"];\n\n\nfunction CadastroForm(props) {\n    const {values, errors} = props\n    return (\n\n    // state = {\n    //     btn_disabled: true,\n    //     btn_color: '#BBB',\n    //     required: true\n    // };\n     \n    // on_input (i) {\n    //     const target = i.target;\n    //     const habilitar = target.value.length;\n\n    //     if (habilitar >= 8) {\n    //         this.setState({ btn_disabled: false});\n    //         this.setState({ btn_color: '#000'});\n    //         this.setState({ required: false})\n    //     } else {\n    //         this.setState({ btn_disabled: true});\n    //         this.setState({ btn_color: '#BBB'});\n    //         this.setState({ required: true})\n    //     }\n    // }  \n\n    // render() {\n    //     return (\n        <section className=\"telaCompleteCadastro\">\n            <div className=\"completeCadastro\">\n                <h3 className=\"titleH3\">Complete seu cadastro</h3>\n                <div className=\"redes-sociais\">\n                    <a href=\"#.com\"><img className=\"facebook-icon\" src={iconFacebook} alt=\"Icone Facebook\" /></a> \n                    <a href=\"#.com\"><img className=\"google-icon\" src={iconGoogle} alt=\"Icone Google plus\" /></a>\n                </div>                 \n                    <Form className=\"dadosPessoais\">\n                        <div className=\"blocoDadosPessoais\">\n                            <h3 className=\"titleH3\">Dados pessoais</h3>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"nome\"/>\n                            <fieldset>\n                                <Field id=\"nome\" type=\"text\" name=\"nome\" required/>\n                                <label className=\"label\" htmlFor=\"nome\">Nome Completo</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"nascimento\"/>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"cpf\"/>\n                            <div className=\"doisCampos\">\n                                <fieldset>\n                                    <Field id=\"nascimento\" type=\"text\" name=\"nascimento\" required/>\n                                    <label className=\"label\" htmlFor=\"nascimento\">Nascimento</label>\n                                </fieldset>\n                                <fieldset>              \n                                    <Field id=\"cpf\" type=\"text\" name=\"cpf\" required/>\n                                    <label className=\"label\" htmlFor=\"cpf\">CPF</label>\n                                </fieldset>\n                            </div>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"email\"/>\n                            <fieldset>\n                                <Field id=\"email\" type=\"text\" name=\"email\" required/>\n                                <label className=\"label\" htmlFor=\"email\">E-mail</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"nickname\"/>\n                            <fieldset>   \n                                <Field id=\"nickname\" type=\"text\" name=\"nickname\" required/>\n                                <label className=\"label\" htmlFor=\"nickname\">nickname</label>\n                            </fieldset>\n                        </div>\n\n                        <div className=\"blocoEnderecoCompleto\">\n                            <h3 className=\"titleH3\">Endereço completo</h3> \n                            <ErrorMessage className=\"error\" component=\"span\" name=\"uf\"/>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"cidade\"/>\n                            <div className=\"doisCampos\">\n                                <fieldset> \n                                    <select id=\"uf\" name=\"uf\" required>\n                                    <option value=\"\">UF</option>\n                                        { estados.map((estado, index) => <option value={ estado } key={ index }>{ estado }</option>) }\n                                    </select> \n                                    <label className=\"label\" htmlFor=\"uf\"/>\n                                </fieldset>\n                                <fieldset>\n                                    <Field id=\"cidade\" type=\"text\" name=\"cidade\" required/>\n                                    <label className=\"label\" htmlFor=\"cidade\">Cidade</label>\n                                </fieldset>\n                            </div>\n\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"bairro\"/>\n                            <fieldset> \n                                <Field id=\"bairro\" type=\"text\" name=\"bairro\" required/>\n                                <label className=\"label\" htmlFor=\"bairro\">Bairro</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"rua\"/>\n                            <fieldset>\n                                <Field id=\"rua\" type=\"text\" name=\"rua\" required/>\n                                <label className=\"label\" htmlFor=\"rua\">Rua</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"numero\"/>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"cep\"/>\n                            <div className=\"doisCampos\">\n                                <fieldset>\n                                    <Field id=\"numero\" type=\"text\" name=\"numero\" required/>\n                                    <label className=\"label\" htmlFor=\"numero\">Numero</label>\n                                </fieldset>\n                                <fieldset>\n                                    <Field id=\"cep\" type=\"text\" name=\"cep\" onInput={this.on_input.bind(this)} required/>\n                                    <label className=\"label\" htmlFor=\"cep\">CEP</label>\n                                </fieldset>\n                            </div>\n\n                            <fieldset>\n                                <Field id=\"complemento\" type=\"text\" name=\"complemento\" required={this.state.required}/>\n                                <label className=\"label\" htmlFor=\"complemento\">Complemento - <i>opcional</i></label>\n                            </fieldset>\n                        </div>\n\n                        <div>\n                            <h3 className=\"titleH3\">Código Promocional</h3>\n                            <fieldset>\n                                <Field id=\"codigo\" type=\"text\" name=\"codigo\" required={this.state.required}/>\n                                <label className=\"label\" htmlFor=\"complemento\">Código - <i>opcional</i></label>\n                            </fieldset>\n                        </div>\n                        <button\n                            className=\"continuar\"\n                            type=\"submit\" disabled={this.state.btn_disabled}\n                            style={{background: `${this.state.btn_color}` }}\n                        >\n                            Continuar\n                        </button>\n                    </Form>\n            </div>\n        </section>\n//         )\n//     }\n// }\n    )\n}\n\nCadastroForm.propTypes = {\n    values: PropTypes.any,\n    errors: PropTypes.any\n}\n\nconst FormikForm = withRouter(withFormik({\n    mapPropsToValues({\n      nome,\n      nascimento,\n      cpf,\n      telefone,\n      nickname,\n      genero,\n      estado,\n      cidade,\n      cep,\n      bairro,\n      endereco,\n      numero,\n      complemento\n    \n      // const enhanceWithFormik = withFormik({\n        //     mapPropsToValues: () => ({ \n        //         nome: '',\n        //         nascimento: '',\n        //         cpf: '', \n        //         email: '',\n        //         nickname: '',\n        //         uf: '\u001d',\n        //         cidade: '',\n        //         bairro: '',\n        //         rua: '',\n        //         numero: '',\n        //         cep: '',\n        //         complemento: '',\n        //         codigo: '',\n    \n    }) {\n      return {\n        nome: nome || '',\n        nascimento: nascimento || '',\n        cpf: cpf || '',\n        telefone: telefone || '',\n        nickname: nickname || '',\n        genero: genero || '',\n        estado: estado || '',\n        cidade: cidade || '',\n        cep: cep || '',\n        bairro: bairro || '',\n        endereco: endereco || '',\n        numero: numero || '',\n        complemento: complemento || ''\n      }\n    },\n    validationSchema: Yup.object().shape({\n      nome: Yup.string()\n        .required(\"Campo obrigatório\"),\n      nascimento: Yup.date()\n        .required(\"Campo obrigatório\"),\n      cpf: Yup.string()\n        .cpf('CPF inválido')\n        .required(\"Campo obrigatório\"),\n      telefone: Yup.number()\n        .positive()\n        .min(8, 'Digite um número de telefone válido')\n        .required(\"Campo obrigatório\"),\n      nickname: Yup.string()\n        .required(\"Campo obrigatório\"),\n      genero: Yup.string()\n        .required(\"Campo obrigatório\"),\n      estado: Yup.string()\n        .required(\"Campo obrigatório\"),\n      cidade: Yup.string()\n        .required(\"Campo obrigatório\"),\n      cep: Yup.string()\n        .length(8)\n        .required(\"Campo obrigatório\"),\n      bairro: Yup.string()\n        .required(\"Campo obrigatório\"),\n      endereco: Yup.string()\n        .required(\"Campo obrigatório\"),\n      numero: Yup.string()\n        .required(\"Campo obrigatório\"),\n      complemento: Yup.string()\n        .default('N/A'),\n    }),\n    handleSubmit(values, { props }) {\n      Auth.currentAuthenticatedUser()\n          .then(response => {\n            console.log('Current authenticated user: ', response)\n            const options = {\n              body: {userdata: values, email: response.attributes.email}\n            }\n            API.post(config.APIS.BOLAOABBR, '/user', options)\n                .then(response => {\n                  console.log('Post bem sucedido. response: ', response)\n                  props.history.push('/', {user_id: response.data})\n                })\n                .catch(error => {\n                  console.log('Erro postando dados do usuário: ', error)\n                  window.alert('Erro fazendo post dos dados do usuário.')\n                })\n          })\n    }\n  })(CadastroForm));\n  \n  export default FormikForm;\n\n// export default enhanceWithFormik(dadosUser);"]},"metadata":{},"sourceType":"module"}