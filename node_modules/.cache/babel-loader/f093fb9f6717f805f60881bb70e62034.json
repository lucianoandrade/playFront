{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Converter/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport { API } from \"aws-amplify\";\nimport config from '../../config/constants';\nimport imgStarBlue from \"../Converter/img/star-blue.png\";\nimport imgStarGold from \"../Converter/img/star-gold.png\";\nimport seta from \"../Converter/img/seta.svg\";\nimport './styles.scss';\n\nconst Converter = () => {\n  const data = useSelector(state => state.user.data);\n  const alert = useAlert();\n\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        quantidadeGold = _useState2[0],\n        setQuantidadeGold = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        quantidadeBlue = _useState4[0],\n        setQuantidadeBlue = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        taxa = _useState6[0],\n        setTaxa = _useState6[1];\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/convert-rate').then(response => {\n      console.log(\"ESSE É O RESPONSE: \", response.data[0].convert_rate);\n      setTaxa(response.data[0].convert_rate);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \", error);\n    });\n  }, []);\n\n  const postConvert = () => {\n    const options = {\n      body: {\n        // blue_stars: parseInt(quantidadeGold * taxa),\n        blue_stars: parseInt(quantidadeBlue),\n        gold_stars: parseInt(quantidadeGold)\n      }\n    };\n    API.post(config.APIS.PLAYERSTARS, '/player/convert-stars', options).then(response => {\n      alert.success(\"Stars convertidas com sucesso!\");\n      setQuantidadeGold(\"\");\n    }).catch(error => {\n      window.alert('Erro fazendo post dos dados do usuário.');\n    });\n  };\n\n  const converterStars = () => {\n    if (quantidadeGold > data.golden_star_balance) {\n      alert.show(\"Star Gold insuficiente\");\n      return;\n    }\n\n    if (quantidadeGold === '0' || !quantidadeGold) {\n      alert.error(\"Informe um valor valido para ser convertido.\");\n      return;\n    }\n\n    if (quantidadeGold * taxa > quantidadeGold) {\n      postConvert();\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"containerConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"infoConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Converter Stars\"), React.createElement(\"p\", {\n    className: \"saldo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Seu saldo de Star Gold \\xE9 de: \", data.golden_star_balance), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam vestibulum, mi vel placerat auctor, tellus sapien congue ex, id ornare mi sem sit amet ex.\")), React.createElement(\"div\", {\n    className: \"converterStars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"img-star\",\n    src: imgStarGold,\n    alt: \"Stars Gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"StarsGold\",\n    value: parseInt(quantidadeGold),\n    onChange: e => {\n      setQuantidadeGold(e.target.value);\n      setQuantidadeBlue(e.target.value && e.target.value * taxa);\n    },\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"StarsGold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Stars Gold\")), React.createElement(\"img\", {\n    className: \"seta\",\n    src: seta,\n    alt: \"conversao\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"StarsBlue\",\n    Value: parseInt(quantidadeBlue),\n    onChange: e => {\n      setQuantidadeBlue(e.target.value);\n      setQuantidadeGold(e.target.value && e.target.value / taxa);\n    },\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"StarsBlue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Stars Blue\")), React.createElement(\"img\", {\n    className: \"img-star\",\n    src: imgStarBlue,\n    alt: \"Stars Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: converterStars,\n    className: \"btnDefault\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Converter\"))));\n};\n\nexport default Converter;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Converter/index.js"],"names":["React","useState","useEffect","useSelector","useAlert","API","config","imgStarBlue","imgStarGold","Converter","data","state","user","alert","undefined","quantidadeGold","setQuantidadeGold","quantidadeBlue","setQuantidadeBlue","taxa","setTaxa","get","APIS","PLAYERSTARS","then","response","console","log","convert_rate","catch","error","postConvert","options","body","blue_stars","parseInt","gold_stars","post","success","window","converterStars","golden_star_balance","show","e","target","value","seta"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\n\nimport { API } from \"aws-amplify\"\nimport config from '../../config/constants';\n\nimport imgStarBlue from \"../Converter/img/star-blue.png\";\nimport imgStarGold from \"../Converter/img/star-gold.png\";\nimport seta from \"../Converter/img/seta.svg\";\n\nimport './styles.scss';\n\nconst Converter = () => {\n    \n    const data = useSelector(state => state.user.data); \n    const alert = useAlert()\n\n    const [quantidadeGold, setQuantidadeGold] = useState(undefined);\n    const [quantidadeBlue, setQuantidadeBlue] = useState(null);\n    const [taxa, setTaxa] = useState(\"\");\n    \n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/convert-rate')\n            .then(response => {\n                console.log(\"ESSE É O RESPONSE: \", response.data[0].convert_rate)\n                setTaxa(response.data[0].convert_rate)\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \", error)\n            })\n    }, [ ])\n\n    const postConvert = () => {\n        \n        const options = {\n            body:{\n                // blue_stars: parseInt(quantidadeGold * taxa),\n                blue_stars: parseInt(quantidadeBlue),\n                gold_stars: parseInt(quantidadeGold) \n            }\n        }\n\n        API.post(config.APIS.PLAYERSTARS, '/player/convert-stars', options)\n        .then(response => {\n            alert.success(\"Stars convertidas com sucesso!\");\n            setQuantidadeGold(\"\");   \n        })\n        .catch(error => {\n            window.alert('Erro fazendo post dos dados do usuário.');\n        })\n    }\n\n    const converterStars = () => {\n        if (quantidadeGold > data.golden_star_balance) {\n            alert.show(\"Star Gold insuficiente\");\n          return;\n        }\n        if (quantidadeGold === '0' || !quantidadeGold)  {\n            alert.error(\"Informe um valor valido para ser convertido.\");\n          return;\n        }\n        if (quantidadeGold * taxa > quantidadeGold) {\n            postConvert();\n        }\n    };\n            \n    return (\n        <React.Fragment>\n            <section className=\"containerConverter\">       \n                <div className=\"contentConverter\">                   \n                    <div className=\"infoConverter\"> \n                        <h1>Converter Stars</h1>\n                        <p className=\"saldo\">Seu saldo de Star Gold é de: {data.golden_star_balance}</p>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n                        Nam vestibulum, mi vel placerat auctor, tellus sapien congue ex, id ornare mi sem sit amet ex.</p>\n                    </div>\n                    <div className=\"converterStars\">\n                        <img className=\"img-star\" src={imgStarGold} alt=\"Stars Gold\"></img>\n                        <fieldset>\n                            <input \n                            id=\"StarsGold\" \n                            value={parseInt(quantidadeGold)}\n                            onChange={(e) => {setQuantidadeGold(e.target.value); setQuantidadeBlue(e.target.value && e.target.value * taxa)}}\n                            type=\"number\" \n                            required/>\n                            <label className=\"label\" htmlFor=\"StarsGold\">Stars Gold</label>\n                        </fieldset>\n                        <img className=\"seta\" src={seta} alt=\"conversao\"></img>\n                        <fieldset>\n                            <input \n                            id=\"StarsBlue\"\n                            Value={parseInt(quantidadeBlue)}\n                            onChange={(e) => {setQuantidadeBlue(e.target.value); setQuantidadeGold(e.target.value && e.target.value / taxa)}}        \n                            type=\"number\" \n                            required/>\n                            <label className=\"label\" htmlFor=\"StarsBlue\">Stars Blue</label>\n                        </fieldset>\n                        <img className=\"img-star\" src={imgStarBlue} alt=\"Stars Blue\"></img>\n                    </div>\n                        <button onClick={converterStars} className=\"btnDefault\">Converter</button>\n                </div>\n            </section>\n        </React.Fragment>        \n    )\n}\n\nexport default Converter"]},"metadata":{},"sourceType":"module"}