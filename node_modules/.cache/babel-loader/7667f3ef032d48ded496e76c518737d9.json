{"ast":null,"code":"import _defineProperty from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Consoles/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport { API, Auth } from \"aws-amplify\";\nimport config from \"../../config/constants\";\nimport View from \"../../views/view/view\";\nimport TimelineCadastro from \"../../components/features/TimelineCadastro\";\nimport \"./styles.scss\";\n\nfunction ConsoleComponent(props) {\n  const history = useHistory();\n  const is_cadastro = props.history.location.key;\n  useEffect(() => {\n    if (is_cadastro === undefined || null) {\n      history.push(\"/\");\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        consoles = _useState2[0],\n        setConsoles = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        form = _useState4[0],\n        setForm = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isValid = _useState6[0],\n        setValidation = _useState6[1];\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, \"/console/\").then(response => {\n      setConsoles(response.data);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \", consoles);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    setValidation(verifyValid(form)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [form]);\n\n  const handleChangeInput = ev => {\n    setForm(_objectSpread({}, form, {\n      [ev.target.name]: {\n        entity_id: ev.target.id,\n        tag_name: ev.target.value\n      }\n    }));\n  };\n\n  const verifyValid = _form => {\n    return !!Object.keys(form).find(key => {\n      return !!form[key].tag_name;\n    });\n  };\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const listConsoles = Object.keys(form).map(key => {\n      return {\n        entity_id: form[key].entity_id,\n        tag_name: form[key].tag_name\n      };\n    });\n    Auth.currentAuthenticatedUser().then(response => {\n      const options = {\n        body: {\n          consoles: listConsoles\n        }\n      };\n      API.post(config.APIS.PLAYERSTARS, \"/player/console-data\", options).then(response => {\n        props.history.push(\"/termos\");\n      }).catch(error => {\n        console.log(\"Esse é o retorno das options\", options);\n        window.alert(\"Erro fazendo post dos dados do usuário.\");\n      });\n    }).catch(error => {\n      console.log(\"Erro obtendo usuario atual\", error);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    cadastro: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"telaConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(TimelineCadastro, {\n    current: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"consoles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"titleH3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Insira a Tagname de suas plataformas\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"dadosConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, consoles.length > 0 ? consoles.map((platform, index) => React.createElement(\"fieldset\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: handleChangeInput,\n    id: platform.entity_id,\n    type: \"text\",\n    name: platform.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: platform.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Tagname do \", platform.name))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"continuar\",\n    type: \"submit\",\n    style: atv(),\n    disabled: !isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Continuar\"))))));\n\n  function atv() {\n    const x = isValid;\n\n    if (x === true) {\n      return {\n        background: \"#000\"\n      };\n    } else {\n      return {\n        background: \"#BBB\"\n      };\n    }\n  }\n}\n\nexport default withRouter(ConsoleComponent);","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Consoles/index.js"],"names":["React","useState","useEffect","withRouter","useHistory","API","Auth","config","View","TimelineCadastro","ConsoleComponent","props","history","is_cadastro","location","key","undefined","push","consoles","setConsoles","form","setForm","isValid","setValidation","get","APIS","PLAYERSTARS","then","response","data","catch","error","console","log","verifyValid","handleChangeInput","ev","target","name","entity_id","id","tag_name","value","_form","Object","keys","find","handleSubmit","preventDefault","listConsoles","map","currentAuthenticatedUser","options","body","post","window","alert","length","platform","index","atv","x","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport { API, Auth } from \"aws-amplify\";\nimport config from \"../../config/constants\";\nimport View from \"../../views/view/view\";\nimport TimelineCadastro from \"../../components/features/TimelineCadastro\";\n\nimport \"./styles.scss\";\n\nfunction ConsoleComponent(props) {\n\n  const history = useHistory();\n  const is_cadastro = props.history.location.key;\n  \n  useEffect(() => {\n    if (is_cadastro === undefined || null) {\n      history.push(\"/\");\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const [consoles, setConsoles] = useState(\"\");\n  const [form, setForm] = useState({});\n  const [isValid, setValidation] = useState(false);\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, \"/console/\")\n      .then((response) => {\n        setConsoles(response.data);\n      })\n      .catch((error) => {\n        console.log(\"ERRO NO GET: \", consoles);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setValidation(verifyValid(form));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [form]);\n\n  const handleChangeInput = (ev) => {\n    setForm({\n      ...form,\n      [ev.target.name]: {\n        entity_id: ev.target.id,\n        tag_name: ev.target.value,\n      },\n    });\n  };\n\n  const verifyValid = (_form) => {\n    return !!Object.keys(form).find((key) => {\n      return !!form[key].tag_name;\n    });\n  };\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n    const listConsoles = Object.keys(form).map((key) => {\n      return {\n        entity_id: form[key].entity_id,\n        tag_name: form[key].tag_name,\n      };\n    });\n\n    Auth.currentAuthenticatedUser()\n      .then((response) => {\n        const options = {\n          body: {\n            consoles: listConsoles,\n          },\n        };\n        API.post(config.APIS.PLAYERSTARS, \"/player/console-data\", options)\n          .then((response) => {\n            props.history.push(\"/termos\");\n          })\n          .catch((error) => {\n            console.log(\"Esse é o retorno das options\", options);\n            window.alert(\"Erro fazendo post dos dados do usuário.\");\n          });\n      })\n      .catch((error) => {\n        console.log(\"Erro obtendo usuario atual\", error);\n      });\n  };\n\n  return (\n    <>\n      <View cadastro={true}>\n        <section className=\"telaConsole\">\n          <TimelineCadastro current={3} />\n          <div className=\"consoles\">\n            <h3 className=\"titleH3\">Insira a Tagname de suas plataformas</h3>\n            <form onSubmit={handleSubmit} className=\"dadosConsole\">\n              {consoles.length > 0 ? (\n                consoles.map((platform, index) => (\n                  <fieldset key={index}>\n                    <input\n                      onChange={handleChangeInput}\n                      id={platform.entity_id}\n                      type=\"text\"\n                      name={platform.name}\n                    />\n                    <label className=\"label\" htmlFor={platform.name}>\n                      Tagname do {platform.name}\n                    </label>\n                  </fieldset>\n                ))\n              ) : (\n                <div></div>\n              )}\n              <button\n                className=\"continuar\"\n                type=\"submit\"\n                style={atv()}\n                disabled={!isValid}\n              >\n                Continuar\n              </button>\n            </form>\n          </div>\n        </section>\n      </View>\n    </>\n  );\n\n  function atv() {\n    const x = isValid;\n    if (x === true) {\n      return { background: `#000` };\n    } else {\n      return { background: `#BBB` };\n    }\n  }\n}\n\nexport default withRouter(ConsoleComponent);"]},"metadata":{},"sourceType":"module"}