{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Filter/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Select from '../../Select/index';\nimport './styles.scss';\n\nfunction Filter(props) {\n  const currentConsoles = useSelector(state => state.user.data.consoles);\n  console.log(currentConsoles);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userConsole = _useState2[0],\n        setUserConsole = _useState2[1];\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/console/').then(response => {\n      const mergedConsoles = response.data.map(item => {\n        return currentConsoles.find(myConsole => myConsole.entity_id === item.entity_id) || item;\n      });\n      console.log(\"ESSE E O RESPONSE\", mergedConsoles);\n      setUserConsole(mergedConsoles);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \");\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  console.log(userConsole); // const findConsole = (consoles, platformConsoleId) => {\n  //     const _console = consoles.find(item => item.console_id === platformConsoleId)\n  //     return _console ? _console.tag_name : ''   \n  // }\n  // let consolesRedux = useSelector(state => state.user.data.consoles)\n  // const [plataformSelected, setPlataformSelected] = useState('')\n  // const [gameSelected, setGameSelected] = useState('')\n  // let formattedConsoleGeneric = (JSONValue) => {\n  //     return JSONValue.map((consoleJSON) => {\n  //         consoleJSON.value = consoleJSON.entity_id;\n  //         consoleJSON.label = consoleJSON.name;\n  //         return consoleJSON\n  //     })\n  // }\n\n  let FormattedJSONConsoles = formattedConsoleGeneric(consolesRedux);\n  let currentConsoleGames = !!plataformSelected.length && FormattedJSONConsoles.find(specificConsole => specificConsole.name === plataformSelected).games;\n  let FormattedJSONConsolesGames = !!plataformSelected.length && formattedConsoleGeneric(currentConsoleGames);\n  useEffect(() => {\n    changePlatform(FormattedJSONConsoles[0]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (plataformSelected && !gameSelected) changeGame(FormattedJSONConsolesGames[0]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plataformSelected]);\n\n  function changePlatform(c) {\n    console.log(\"PLATFORM :: \", c);\n    setPlataformSelected(c.name);\n    props.setFilter(\"platform\", c);\n  }\n\n  function changeGame(c) {\n    console.log(\"GAME :: \", c);\n    setGameSelected(c.name);\n    props.setFilter(\"game\", c);\n    console.log(\":::GAME JOGO::::::\", gameSelected);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"containerFilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changePlatform,\n    width: '150px',\n    placeholder: FormattedJSONConsoles.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma',\n    options: FormattedJSONConsoles,\n    classNames: 'select-class',\n    name: \"platform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changeGame,\n    width: '150px',\n    placeholder: FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo',\n    options: !!plataformSelected.length ? FormattedJSONConsolesGames : [],\n    classNames: 'select-class',\n    name: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }))));\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Filter/index.js"],"names":["React","useState","useEffect","useSelector","Select","Filter","props","currentConsoles","state","user","data","consoles","console","log","userConsole","setUserConsole","API","get","config","APIS","PLAYERSTARS","then","response","mergedConsoles","map","item","find","myConsole","entity_id","catch","error","FormattedJSONConsoles","formattedConsoleGeneric","consolesRedux","currentConsoleGames","plataformSelected","length","specificConsole","name","games","FormattedJSONConsolesGames","changePlatform","gameSelected","changeGame","c","setPlataformSelected","setFilter","setGameSelected"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport Select from '../../Select/index';\n\nimport './styles.scss';\n\nfunction Filter(props) {\n\n    const currentConsoles = useSelector(state => state.user.data.consoles);\n    console.log(currentConsoles)\n    const [userConsole, setUserConsole] = useState('');\n\n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/console/')\n            .then(response => {\n                const mergedConsoles = response.data.map(item => {\n                    return currentConsoles.find(myConsole => myConsole.entity_id === item.entity_id ) || item\n                })\n                console.log(\"ESSE E O RESPONSE\", mergedConsoles)\n                setUserConsole(mergedConsoles);\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \")\n            })\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    console.log(userConsole)\n\n    // const findConsole = (consoles, platformConsoleId) => {\n    //     const _console = consoles.find(item => item.console_id === platformConsoleId)\n    //     return _console ? _console.tag_name : ''   \n    // }\n    \n    // let consolesRedux = useSelector(state => state.user.data.consoles)\n\n    // const [plataformSelected, setPlataformSelected] = useState('')\n    // const [gameSelected, setGameSelected] = useState('')\n    \n    // let formattedConsoleGeneric = (JSONValue) => {\n    //     return JSONValue.map((consoleJSON) => {\n    //         consoleJSON.value = consoleJSON.entity_id;\n    //         consoleJSON.label = consoleJSON.name;\n    //         return consoleJSON\n    //     })\n    // }\n\n    let FormattedJSONConsoles = formattedConsoleGeneric(consolesRedux);\n    let currentConsoleGames = !!plataformSelected.length && FormattedJSONConsoles.find((specificConsole) => specificConsole.name === plataformSelected).games\n    let FormattedJSONConsolesGames = !!plataformSelected.length && formattedConsoleGeneric(currentConsoleGames)\n\n    useEffect(() => {\n        changePlatform(FormattedJSONConsoles[0])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if(plataformSelected && !gameSelected)\n        changeGame(FormattedJSONConsolesGames[0])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [plataformSelected])\n\n    function changePlatform(c) {\n        console.log(\"PLATFORM :: \", c)\n        setPlataformSelected(c.name)\n        props.setFilter(\"platform\", c)\n    }\n\n    function changeGame(c) {\n        console.log(\"GAME :: \", c)\n            setGameSelected(c.name)\n            props.setFilter(\"game\", c)\n            console.log(\":::GAME JOGO::::::\", gameSelected)\n    }\n\n    return (\n        <div className=\"containerFilter\">\n            <div className=\"containerSelects\">\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changePlatform}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsoles.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma'}\n                        options={FormattedJSONConsoles}\n                        classNames={'select-class'}\n                        name=\"platform\"\n                    />\n                </div>\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changeGame}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo'}\n                        options={!!plataformSelected.length ? FormattedJSONConsolesGames : []}\n                        classNames={'select-class'}\n                        name=\"game\"\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}