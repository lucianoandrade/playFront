{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Filter/index.js\";\nimport React, { useState, useEffect } from 'react'; // import { useSelector } from 'react-redux';\n\nimport { API } from \"aws-amplify\";\nimport config from \"../../../config/constants\";\nimport Select from '../../Select/index';\nimport './styles.scss';\n\nfunction Filter(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userConsole = _useState2[0],\n        setUserConsole = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        plataformSelected = _useState4[0],\n        setPlataformSelected = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        gameSelected = _useState6[0],\n        setGameSelected = _useState6[1];\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/console/').then(response => {\n      const mergedConsoles = response.data.map(item => {\n        return currentConsoles.find(myConsole => myConsole.entity_id === item.entity_id) || item;\n      });\n      console.log(\"ESSE E O RESPONSE\", mergedConsoles);\n      setUserConsole(mergedConsoles);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \");\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  console.log(userConsole);\n  let currentConsoleGames = !!plataformSelected.length && userConsole.find(specificConsole => specificConsole.name === plataformSelected).games;\n  let FormattedJSONConsolesGames = !!plataformSelected.length && currentConsoleGames;\n  useEffect(() => {\n    changePlatform(userConsole[0]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (plataformSelected && !gameSelected) changeGame(FormattedJSONConsolesGames[0]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plataformSelected]);\n\n  function changePlatform(c) {\n    console.log(\"PLATFORM :: \", c);\n    setPlataformSelected(c.name);\n    props.setFilter(\"platform\", c);\n  }\n\n  function changeGame(c) {\n    console.log(\"GAME :: \", c);\n    setGameSelected(c.name);\n    props.setFilter(\"game\", c);\n    console.log(\":::GAME JOGO::::::\", gameSelected);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"containerFilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changePlatform,\n    width: '150px',\n    placeholder: userConsole.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma',\n    options: userConsole,\n    classNames: 'select-class',\n    name: \"platform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changeGame,\n    width: '150px',\n    placeholder: FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo',\n    options: !!plataformSelected.length ? FormattedJSONConsolesGames : [],\n    classNames: 'select-class',\n    name: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }))));\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Filter/index.js"],"names":["React","useState","useEffect","API","config","Select","Filter","props","userConsole","setUserConsole","plataformSelected","setPlataformSelected","gameSelected","setGameSelected","get","APIS","PLAYERSTARS","then","response","mergedConsoles","data","map","item","currentConsoles","find","myConsole","entity_id","console","log","catch","error","currentConsoleGames","length","specificConsole","name","games","FormattedJSONConsolesGames","changePlatform","changeGame","c","setFilter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import { useSelector } from 'react-redux';\nimport {API} from \"aws-amplify\";\nimport config from \"../../../config/constants\";\nimport Select from '../../Select/index';\n\nimport './styles.scss';\n\nfunction Filter(props) {\n\n    const [userConsole, setUserConsole] = useState('');\n    const [plataformSelected, setPlataformSelected] = useState('')\n    const [gameSelected, setGameSelected] = useState('')\n\n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/console/')\n            .then(response => {\n                const mergedConsoles = response.data.map(item => {\n                    return currentConsoles.find(myConsole => myConsole.entity_id === item.entity_id ) || item\n                })\n                console.log(\"ESSE E O RESPONSE\", mergedConsoles)\n                setUserConsole(mergedConsoles);\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \")\n            })\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    console.log(userConsole)\n\n\n    let currentConsoleGames = !!plataformSelected.length && userConsole.find((specificConsole) => specificConsole.name === plataformSelected).games\n    let FormattedJSONConsolesGames = !!plataformSelected.length && currentConsoleGames\n\n    useEffect(() => {\n        changePlatform(userConsole[0])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if(plataformSelected && !gameSelected)\n        changeGame(FormattedJSONConsolesGames[0])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [plataformSelected])\n\n    function changePlatform(c) {\n        console.log(\"PLATFORM :: \", c)\n        setPlataformSelected(c.name)\n        props.setFilter(\"platform\", c)\n    }\n\n    function changeGame(c) {\n        console.log(\"GAME :: \", c)\n            setGameSelected(c.name)\n            props.setFilter(\"game\", c)\n            console.log(\":::GAME JOGO::::::\", gameSelected)\n    }\n\n    return (\n        <div className=\"containerFilter\">\n            <div className=\"containerSelects\">\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changePlatform}\n                        width={'150px'}\n                        placeholder={userConsole.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma'}\n                        options={userConsole}\n                        classNames={'select-class'}\n                        name=\"platform\"\n                    />\n                </div>\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changeGame}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo'}\n                        options={!!plataformSelected.length ? FormattedJSONConsolesGames : []}\n                        classNames={'select-class'}\n                        name=\"game\"\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}