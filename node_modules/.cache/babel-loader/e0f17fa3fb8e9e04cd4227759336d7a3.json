{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/InicioDoCadastro/index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport FormField from \"../FormField\";\nimport logoPlaystars from \"./../img/logo_final.svg\";\nimport './styles.scss';\nFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string\n};\n\nconst Signup = props => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        btn_disabled = _useState2[0],\n        setBtn_disabled = _useState2[1];\n\n  const _useState3 = useState('#BBB'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        btn_color = _useState4[0],\n        setBtn_color = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        senha = _useState8[0],\n        setSenha = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        senha2 = _useState10[0],\n        setSenha2 = _useState10[1];\n\n  function change(ev) {\n    const newState = {\n      [ev.target.name]: ev.target.value\n    };\n    return setEmail(newState), setSenha(newState), setSenha2(newState);\n  }\n\n  function on_input(ev) {\n    change(ev);\n\n    if (email.length >= 3 && senha.length >= 3 && senha2.length >= 3) {\n      return setBtn_disabled(false), setBtn_color('#000');\n    } else {\n      return setBtn_disabled(true), setBtn_color('#BBB');\n    }\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"telaCadastro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cadastro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"logoPrincipal\",\n    src: logoPlaystars,\n    alt: \"Logo PlayStarts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: \"tituloLogo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Ol\\xE1 Vamos come\\xE7ar seu cadastro?\"), React.createElement(Form, {\n    className: \"dados\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputInline\",\n    name: \"email\",\n    onInput: on_input.bind(this),\n    onChange: change.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"inputInline\",\n    name: \"senha\",\n    onInput: on_input.bind(this),\n    onChange: change.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"senha\",\n    name: \"senha\",\n    type: \"password\",\n    label: \"Senha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"inputInline\",\n    name: \"senha2\",\n    onInput: on_input.bind(this),\n    onChange: change.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"senha2\",\n    name: \"senha2\",\n    type: \"password\",\n    label: \"Confirme a senha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"continuar\",\n    style: {\n      background: \"\".concat(btn_color)\n    },\n    type: \"submit\",\n    disabled: btn_disabled,\n    required: props.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Continuar\")))));\n};\n\nconsole.log();\nconst SignupForm = withRouter(withFormik({\n  mapPropsToValues({\n    email,\n    senha,\n    senha2\n  }) {\n    return {\n      email: email || '',\n      senha: senha || '',\n      senha2: senha2 || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required(\"Campo obrigatório\").email('Email inválido'),\n    senha: Yup.string().required(\"Campo obrigatório\").min(8, \"Mínimo 8 caracteres\"),\n    senha2: Yup.string().required(\"Campo obrigatório\")\n  }),\n\n  handleSubmit({\n    email,\n    senha,\n    senha2\n  }, {\n    props,\n    setFieldError,\n    setSubmitting\n  }) {\n    console.log(props);\n\n    if (senha !== senha2) {\n      setFieldError(\"senha\", \"As senhas digitadas não estão idênticas.\");\n      setFieldError(\"senha2\", \"As senhas digitadas não estão idênticas.\");\n      return;\n    }\n\n    setSubmitting(true);\n    Auth.signUp(email, senha).then(result => {\n      console.log('Resultado do signup: ', result);\n      console.log('funcionou');\n      props.history.push('/codconfirmacao', {\n        email: email\n      });\n      console.log('Minhas props no inicio do cadastro:', props);\n    }).catch(error => {\n      switch (error.code) {\n        case \"UsernameExistsException\":\n          setFieldError(\"email\", \"Email já está em uso.\");\n          break;\n\n        default:\n          console.log('Erro fazendo signup: ', error);\n          window.alert('Erro fazendo signup');\n          break;\n      }\n\n      setSubmitting(false);\n    });\n  }\n\n})(Signup));\nexport default SignupForm;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/InicioDoCadastro/index.js"],"names":["React","useState","PropTypes","Auth","withRouter","Yup","withFormik","Form","FormField","propTypes","id","string","isRequired","name","label","type","Signup","props","btn_disabled","setBtn_disabled","btn_color","setBtn_color","email","setEmail","senha","setSenha","senha2","setSenha2","change","ev","newState","target","value","on_input","length","logoPlaystars","bind","background","isSubmitting","console","log","SignupForm","mapPropsToValues","validationSchema","object","shape","required","min","handleSubmit","setFieldError","setSubmitting","signUp","then","result","history","push","catch","error","code","window","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\n\nimport FormField from \"../FormField\";\n\nimport logoPlaystars from './../img/logo_final.svg';\nimport './styles.scss';\n\nFormField.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    type: PropTypes.string,\n  };\n\nconst Signup = (props) => {\n  \n  const [btn_disabled, setBtn_disabled] = useState(true);\n  const [btn_color, setBtn_color] = useState('#BBB');\n  const [email, setEmail] = useState('');\n  const [senha, setSenha] = useState('');\n  const [senha2, setSenha2] = useState('')\n  \n  function change(ev) {\n    const newState = {[ev.target.name]: ev.target.value}\n    return (\n      setEmail(newState),\n      setSenha(newState),\n      setSenha2(newState)\n    )\n  }\n\n  function on_input (ev) {\n    change(ev);    \n    if (email.length >= 3 && senha.length >= 3 && senha2.length >= 3) {\n      return (\n        setBtn_disabled(false),\n        setBtn_color('#000')\n      )\n    } else { \n        return (\n        setBtn_disabled(true),\n        setBtn_color('#BBB')\n      )\n    }\n  }\n\n  return (\n    <React.Fragment>\n        <section className=\"telaCadastro\">\n            <div className=\"cadastro\">\n                <img className=\"logoPrincipal\" src={logoPlaystars} alt=\"Logo PlayStarts\" />\n                <h2 className=\"tituloLogo\">Olá Vamos começar seu cadastro?</h2>           \n                <Form className=\"dados\">\n                    <div className=\"inputInline\" name=\"email\" onInput={on_input.bind(this)} onChange={change.bind(this)}>\n                        <input id=\"email\" name=\"email\" type=\"text\" label=\"Email\"/>\n                    </div>\n                    <div className=\"inputInline\" name=\"senha\" onInput={on_input.bind(this)} onChange={change.bind(this)}>\n                        <input id=\"senha\" name=\"senha\" type=\"password\" label=\"Senha\"/>\n                    </div>\n                    <div className=\"inputInline\"  name=\"senha2\" onInput={on_input.bind(this)} onChange={change.bind(this)}>\n                      <input id=\"senha2\" name=\"senha2\" type=\"password\" label=\"Confirme a senha\"/>\n                    </div>                  \n                    <button className=\"continuar\" \n                    style={{background: `${btn_color}` }} \n                    type=\"submit\" \n                    disabled={btn_disabled}\n                    required={props.isSubmitting}>Continuar</button>\n                </Form>\n            </div>\n        </section>\n    </React.Fragment>   \n  )\n}\n\nconsole.log()\n\nconst SignupForm = withRouter(withFormik({\n    mapPropsToValues({\n                       email,\n                       senha,\n                       senha2\n                     }) {\n      return {\n        email: email || '',\n        senha: senha || '',\n        senha2: senha2 || ''\n      }\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string()\n        .required(\"Campo obrigatório\")\n        .email('Email inválido'),\n      senha: Yup.string()\n        .required(\"Campo obrigatório\")\n        .min(8, \"Mínimo 8 caracteres\"),\n      senha2: Yup.string()\n        .required(\"Campo obrigatório\")\n    }),\n    handleSubmit({ email, senha, senha2 }, { props, setFieldError, setSubmitting }) {\n      console.log(props);\n      if(senha !== senha2) {\n        setFieldError(\"senha\", \"As senhas digitadas não estão idênticas.\");\n        setFieldError(\"senha2\", \"As senhas digitadas não estão idênticas.\");\n        return;\n      } \n      setSubmitting(true);\n  \n      Auth.signUp(email, senha)\n        .then((result) => {\n          console.log('Resultado do signup: ', result)\n          console.log('funcionou')\n          props.history.push('/codconfirmacao', { email: email });\n          console.log('Minhas props no inicio do cadastro:',props)\n        })\n        .catch(error => {\n          switch(error.code) {\n            case \"UsernameExistsException\":\n              setFieldError(\"email\", \"Email já está em uso.\");\n              break;\n            default:\n              console.log('Erro fazendo signup: ', error);\n              window.alert('Erro fazendo signup');\n              break;\n          }\n          setSubmitting(false);\n  \n        });\n    }\n  })(Signup));\n  \n  export default SignupForm;"]},"metadata":{},"sourceType":"module"}