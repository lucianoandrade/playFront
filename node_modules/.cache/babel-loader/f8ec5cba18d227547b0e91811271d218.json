{"ast":null,"code":"import _defineProperty from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Select/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nclass SelectField extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n      this.props.onChange(selectedOption);\n    };\n\n    this.state = {\n      selectedOption: ''\n    };\n  }\n\n  render() {\n    const customStyles = width => ({\n      menu: styles => _objectSpread({}, styles, {\n        backgroundColor: 'white',\n        borderRadius: 'none',\n        position: 'absolute',\n        top: '37px',\n        left: '1px',\n        width: 'calc(100% - 1px)',\n        height: 'fit-content',\n        border: 'none',\n        boxShadow: '0px 1px 6px rgba(0, 0, 0, 0.3)',\n        padding: '5px 0',\n        marginTop: '12px'\n      }),\n      control: styles => _objectSpread({}, styles, {\n        backgroundColor: 'white',\n        width: width,\n        height: '50px',\n        border: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        borderRadius: 'none',\n        padding: '0 4px',\n        boxShadow: '1px 1px 6px 0px rgba(193,193,193,1)',\n        cursor: 'pointer'\n      }),\n      option: (styles, {\n        isFocused,\n        isSelected\n      }) => {\n        return _objectSpread({}, styles, {\n          padding: '10px 16px',\n          backgroundColor: isSelected ? '#000' : null,\n          color: isSelected ? 'white' : '#505050',\n          ':hover': {\n            backgroundColor: '#000',\n            color: 'white'\n          },\n          fontSize: '14px',\n          cursor: 'pointer'\n        });\n      },\n      indicatorSeparator: styles => _objectSpread({}, styles, {\n        display: 'none'\n      }),\n      placeholder: provided => _objectSpread({}, provided, {\n        fontSize: '14px',\n        color: '#000'\n      }),\n      singleValue: styles => _objectSpread({}, styles, {\n        color: '#505050',\n        fontSize: '14px'\n      })\n    });\n\n    const dropdownIndicatorStyle = {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'relative',\n      marginRight: '10px'\n    };\n    const arrowLineStyleLeft = {\n      display: 'block',\n      width: '10px',\n      height: '1px',\n      backgroundColor: '#787878',\n      transform: 'rotate(45deg)',\n      position: 'relative',\n      left: '2px'\n    };\n    const arrowLineStyleRight = {\n      display: 'block',\n      width: '10px',\n      height: '1px',\n      backgroundColor: '#787878',\n      transform: 'rotate(-45deg)',\n      position: 'relative',\n      right: '1px'\n    };\n\n    const DropdownIndicator = ({\n      innerProps\n    }) => {\n      return React.createElement(\"div\", Object.assign({\n        style: dropdownIndicatorStyle\n      }, innerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: arrowLineStyleLeft,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: arrowLineStyleRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }));\n    };\n\n    return React.createElement(Select, {\n      className: this.props.classNames,\n      value: this.state.selectedOption,\n      onChange: this.handleChange,\n      isSearchable: false,\n      styles: customStyles(this.props.width),\n      placeholder: this.props.placeholder,\n      option: this.props.options,\n      components: {\n        DropdownIndicator\n      },\n      theme: theme => _objectSpread({}, theme, {\n        colors: _objectSpread({}, theme.colors, {\n          primary: 'none'\n        })\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    });\n  }\n\n}\n\n;\nSelectField.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired\n};\nexport default SelectField;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Select/index.js"],"names":["React","Component","Select","PropTypes","SelectField","constructor","props","handleChange","selectedOption","setState","onChange","state","render","customStyles","width","menu","styles","backgroundColor","borderRadius","position","top","left","height","border","boxShadow","padding","marginTop","control","display","alignItems","cursor","option","isFocused","isSelected","color","fontSize","indicatorSeparator","placeholder","provided","singleValue","dropdownIndicatorStyle","justifyContent","marginRight","arrowLineStyleLeft","transform","arrowLineStyleRight","right","DropdownIndicator","innerProps","classNames","options","theme","colors","primary","propTypes","className","string","isRequired","array"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nclass SelectField extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedOption: ''\n        };\n    };\n\n    handleChange = selectedOption => {\n        this.setState({ selectedOption });\n        this.props.onChange(selectedOption)\n    };\n\n    render() {\n\n        const customStyles = (width) => ({\n            menu: styles => ({\n                ...styles,\n                backgroundColor: 'white',\n                borderRadius: 'none',\n                position: 'absolute',\n                top: '37px',\n                left: '1px',\n                width: 'calc(100% - 1px)',\n                height: 'fit-content',\n                border: 'none',\n                boxShadow: '0px 1px 6px rgba(0, 0, 0, 0.3)',\n                padding: '5px 0',\n                marginTop: '12px'\n\n            }),\n            control: styles => ({ \n                ...styles, \n                backgroundColor: 'white',\n                width: width,\n                height: '50px',\n                border: 'none',\n                display: 'flex',\n                alignItems: 'center',\n                borderRadius: 'none',\n                padding: '0 4px',\n                boxShadow: '1px 1px 6px 0px rgba(193,193,193,1)',\n                cursor: 'pointer'\n            }),\n            option: (styles, { isFocused, isSelected }) => {\n                return {\n                    ...styles,\n                    padding: '10px 16px',\n                    backgroundColor: isSelected ? '#000' : null,\n                    color: isSelected ? 'white' : '#505050',\n                    ':hover': {\n                        backgroundColor: '#000',\n                        color: 'white',\n                    },\n                    fontSize: '14px',\n                    cursor: 'pointer'\n                };\n            },\n            indicatorSeparator: styles => ({\n                ...styles,\n                display: 'none'\n            }),\n            placeholder: (provided) => ({\n                ...provided,\n                fontSize: '14px',\n                color: '#000',\n            }),\n            singleValue: styles => ({\n                ...styles,\n                color: '#505050',\n                fontSize: '14px'\n            })\n        });\n\n        const dropdownIndicatorStyle = {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            position: 'relative',\n            marginRight: '10px'\n        };\n\n        const arrowLineStyleLeft = {\n            display: 'block',\n            width: '10px',\n            height: '1px',\n            backgroundColor: '#787878',\n            transform: 'rotate(45deg)',\n            position: 'relative',\n            left: '2px'\n        };\n\n        const arrowLineStyleRight = {\n            display: 'block',\n            width: '10px',\n            height: '1px',\n            backgroundColor: '#787878',\n            transform: 'rotate(-45deg)',\n            position: 'relative',\n            right: '1px'\n        };\n\n        const DropdownIndicator = ({ innerProps }) => {\n            return (\n                <div style={dropdownIndicatorStyle} {...innerProps}>\n                    <span style={arrowLineStyleLeft} />\n                    <span style={arrowLineStyleRight} />\n                </div>\n            );\n        };\n        \n        return (\n            <Select\n                className={this.props.classNames}\n                value = {this.state.selectedOption}\n                onChange = {this.handleChange}\n                isSearchable = {false}\n                styles = {customStyles(this.props.width)}\n                placeholder = {this.props.placeholder}\n                option = {this.props.options}\n                components={{ DropdownIndicator }}\n                theme = {theme => ({\n                    ...theme,\n                    colors: {\n                        ...theme.colors,\n                        primary: 'none'\n                    }\n                })}\n            />\n        );\n    };\n};\n\nSelectField.propTypes = {\n    className: PropTypes.string,\n    width: PropTypes.string,\n    placeholder: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n};\n\nexport default SelectField;"]},"metadata":{},"sourceType":"module"}