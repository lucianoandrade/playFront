{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Filter/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { API } from \"aws-amplify\";\nimport config from \"../../../config/constants\";\nimport Select from '../../Select/index';\nimport './styles.scss';\n\nfunction Filter(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        consoles = _useState2[0],\n        setConsoles = _useState2[1];\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile').then(response => {\n      setConsoles(response.data.consoles);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \", error);\n    });\n    changePlatform(FormattedJSONConsoles[0]);\n    if (plataformSelected && !gameSelected) changeGame(FormattedJSONConsolesGames[0]);\n  }, [plataformSelected]);\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        plataformSelected = _useState4[0],\n        setPlataformSelected = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        gameSelected = _useState6[0],\n        setGameSelected = _useState6[1];\n\n  let formattedConsoleGeneric = JSONValue => {\n    return JSONValue.map(consoleJSON => {\n      consoleJSON.value = consoleJSON.entity_id;\n      consoleJSON.label = consoleJSON.name;\n      return consoleJSON;\n    });\n  };\n\n  let FormattedJSONConsoles = formattedConsoleGeneric(consoles);\n  let currentConsoleGames = !!plataformSelected.length && FormattedJSONConsoles.find(specificConsole => specificConsole.name === plataformSelected).games;\n  let FormattedJSONConsolesGames = !!plataformSelected.length && formattedConsoleGeneric(currentConsoleGames); // useEffect(() => {\n  //     changePlatform(FormattedJSONConsoles[0])\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [])\n  // useEffect(() => {\n  //     if(plataformSelected && !gameSelected)\n  //     changeGame(FormattedJSONConsolesGames[0])\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [plataformSelected])\n\n  function changePlatform(c) {\n    console.log(\"PLATFORM :: \", c);\n    setPlataformSelected(c.name);\n    props.setFilter(\"platform\", c);\n  }\n\n  function changeGame(c) {\n    console.log(\"GAME :: \", c);\n    setGameSelected(c.name);\n    props.setFilter(\"game\", c);\n    console.log(\":::GAME JOGO::::::\", gameSelected);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"containerFilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changePlatform,\n    width: '150px',\n    placeholder: FormattedJSONConsoles.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma',\n    options: FormattedJSONConsoles,\n    classNames: 'select-class',\n    name: \"platform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changeGame,\n    width: '150px',\n    placeholder: FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo',\n    options: !!plataformSelected.length ? FormattedJSONConsolesGames : [],\n    classNames: 'select-class',\n    name: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))));\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Filter/index.js"],"names":["React","useState","useEffect","API","config","Select","Filter","props","consoles","setConsoles","get","APIS","PLAYERSTARS","then","response","data","catch","error","console","log","changePlatform","FormattedJSONConsoles","plataformSelected","gameSelected","changeGame","FormattedJSONConsolesGames","setPlataformSelected","setGameSelected","formattedConsoleGeneric","JSONValue","map","consoleJSON","value","entity_id","label","name","currentConsoleGames","length","find","specificConsole","games","c","setFilter","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {API} from \"aws-amplify\"\nimport config from \"../../../config/constants\";\nimport Select from '../../Select/index';\n\nimport './styles.scss';\n\nfunction Filter(props) {\n    \n    const [consoles, setConsoles] = useState([])\n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile')\n        .then(response => {\n            setConsoles(response.data.consoles)\n        })\n        .catch(error => {\n            console.log(\"ERRO NO GET: \", error)\n        })\n        changePlatform(FormattedJSONConsoles[0]);\n        if(plataformSelected && !gameSelected)\n        changeGame(FormattedJSONConsolesGames[0])\n    },[plataformSelected])\n    \n    const [plataformSelected, setPlataformSelected] = useState('')\n    const [gameSelected, setGameSelected] = useState('')\n    \n    let formattedConsoleGeneric = (JSONValue) => {\n        return JSONValue.map((consoleJSON) => {\n            consoleJSON.value = consoleJSON.entity_id;\n            consoleJSON.label = consoleJSON.name;\n            return consoleJSON\n        })\n    }\n\n    let FormattedJSONConsoles = formattedConsoleGeneric(consoles);\n    let currentConsoleGames = !!plataformSelected.length && FormattedJSONConsoles.find((specificConsole) => specificConsole.name === plataformSelected).games\n    let FormattedJSONConsolesGames = !!plataformSelected.length && formattedConsoleGeneric(currentConsoleGames)\n\n    // useEffect(() => {\n    //     changePlatform(FormattedJSONConsoles[0])\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\n    // }, [])\n\n    // useEffect(() => {\n    //     if(plataformSelected && !gameSelected)\n    //     changeGame(FormattedJSONConsolesGames[0])\n    //     // eslint-disable-next-line react-hooks/exhaustive-deps\n    // }, [plataformSelected])\n\n    function changePlatform(c) {\n        console.log(\"PLATFORM :: \", c)\n        setPlataformSelected(c.name)\n        props.setFilter(\"platform\", c)\n    }\n\n    function changeGame(c) {\n        console.log(\"GAME :: \", c)\n            setGameSelected(c.name)\n            props.setFilter(\"game\", c)\n            console.log(\":::GAME JOGO::::::\", gameSelected)\n    }\n\n    return (\n        <div className=\"containerFilter\">\n            <div className=\"containerSelects\">\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changePlatform}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsoles.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma'}\n                        options={FormattedJSONConsoles}\n                        classNames={'select-class'}\n                        name=\"platform\"\n                    />\n                </div>\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changeGame}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo'}\n                        options={!!plataformSelected.length ? FormattedJSONConsolesGames : []}\n                        classNames={'select-class'}\n                        name=\"game\"\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}