{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Filter/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Select from '../../Select/index';\nimport './styles.scss';\n\nfunction Filter(props) {\n  let consolesRedux = useSelector(state => state.user.data.consoles);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        plataformSelected = _useState2[0],\n        setPlataformSelected = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameSelected = _useState4[0],\n        setGameSelected = _useState4[1];\n\n  let formattedConsoleGeneric = JSONValue => {\n    return JSONValue.map(consoleJSON => {\n      consoleJSON.value = consoleJSON.entity_id;\n      consoleJSON.label = consoleJSON.name;\n      return consoleJSON;\n    });\n  };\n\n  let FormattedJSONConsoles = formattedConsoleGeneric(consolesRedux);\n  let options = ['Todos', 'Finalizados', 'Em apuração'];\n  let currentConsoleGames = !!plataformSelected.length && FormattedJSONConsoles.find(specificConsole => specificConsole.name === plataformSelected).games;\n  let FormattedJSONConsolesGames = !!plataformSelected.length && formattedConsoleGeneric(currentConsoleGames);\n  useEffect(() => {\n    changePlatform(FormattedJSONConsoles[0]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (plataformSelected && !gameSelected) changeGame(FormattedJSONConsolesGames[0]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plataformSelected]);\n\n  function changePlatform(c) {\n    console.log(\"PLATFORM :: \", c);\n    setPlataformSelected(c.name);\n    props.setFilter(\"platform\", c);\n  }\n\n  function changeGame(c) {\n    console.log(\"GAME :: \", c);\n    setGameSelected(c.name);\n    props.setFilter(\"game\", c);\n    console.log(\":::GAME JOGO::::::\", gameSelected);\n  }\n\n  console;\n  return React.createElement(\"div\", {\n    className: \"containerFilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changePlatform,\n    width: '150px',\n    placeholder: FormattedJSONConsoles.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma',\n    options: FormattedJSONConsoles,\n    classNames: 'select-class',\n    name: \"platform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changeGame,\n    width: '150px',\n    placeholder: FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo',\n    options: !!plataformSelected.length ? FormattedJSONConsolesGames : [],\n    classNames: 'select-class',\n    name: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }))));\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Filter/index.js"],"names":["React","useState","useEffect","useSelector","Select","Filter","props","consolesRedux","state","user","data","consoles","plataformSelected","setPlataformSelected","gameSelected","setGameSelected","formattedConsoleGeneric","JSONValue","map","consoleJSON","value","entity_id","label","name","FormattedJSONConsoles","options","currentConsoleGames","length","find","specificConsole","games","FormattedJSONConsolesGames","changePlatform","changeGame","c","console","log","setFilter","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport Select from '../../Select/index';\n\nimport './styles.scss';\n\nfunction Filter(props) {\n    \n    let consolesRedux = useSelector(state => state.user.data.consoles)\n\n    const [plataformSelected, setPlataformSelected] = useState('')\n    const [gameSelected, setGameSelected] = useState('')\n    \n    let formattedConsoleGeneric = (JSONValue) => {\n        return JSONValue.map((consoleJSON) => {\n            consoleJSON.value = consoleJSON.entity_id;\n            consoleJSON.label = consoleJSON.name;\n            return consoleJSON\n        })\n    }\n\n    let FormattedJSONConsoles = formattedConsoleGeneric(consolesRedux);\n    let options = ['Todos','Finalizados','Em apuração']\n    let currentConsoleGames = !!plataformSelected.length && FormattedJSONConsoles.find((specificConsole) => specificConsole.name === plataformSelected).games\n    let FormattedJSONConsolesGames = !!plataformSelected.length && formattedConsoleGeneric(currentConsoleGames)\n\n    useEffect(() => {\n        changePlatform(FormattedJSONConsoles[0])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if(plataformSelected && !gameSelected)\n        changeGame(FormattedJSONConsolesGames[0])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [plataformSelected])\n\n    function changePlatform(c) {\n        console.log(\"PLATFORM :: \", c)\n        setPlataformSelected(c.name)\n        props.setFilter(\"platform\", c)\n    }\n\n    function changeGame(c) {\n        console.log(\"GAME :: \", c)\n            setGameSelected(c.name)\n            props.setFilter(\"game\", c)\n            console.log(\":::GAME JOGO::::::\", gameSelected)\n    }\n    console\n    return (\n        <div className=\"containerFilter\">\n            <div className=\"containerSelects\">\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changePlatform}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsoles.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma'}\n                        options={FormattedJSONConsoles}\n                        classNames={'select-class'}\n                        name=\"platform\"\n                    />\n                </div>\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changeGame}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo'}\n                        options={!!plataformSelected.length ? FormattedJSONConsolesGames : []}\n                        classNames={'select-class'}\n                        name=\"game\"\n                    />\n                </div>\n            </div>\n            {/* <button className=\"btnFilter\" onClick={props.getFilter}>Filtrar</button> */}\n        </div>\n    )\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}