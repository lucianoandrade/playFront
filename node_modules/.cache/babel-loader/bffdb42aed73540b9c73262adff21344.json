{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js\";\nimport React from 'react';\nimport iconNext from '../img/Direita.png';\nimport iconPreview from '../img/Esquerda.png';\nimport ReactPaginate from 'react-paginate';\nimport './styles.scss';\n\nfunction Navigation(props) {\n  // const { pagination, setPage } = props\n  const _props$pagination = props.pagination,\n        page = _props$pagination.page,\n        total = _props$pagination.total,\n        per_page = _props$pagination.per_page;\n\n  const isActived = _page => {\n    if (page === _page) return \"activated\";\n    return \"\";\n  };\n\n  handlePageClick = data => {\n    const selectedPage = data.selected;\n    const offset = selectedPage * this.state.perPage;\n    this.setState({\n      currentPage: selectedPage,\n      offset: offset\n    }, () => {\n      this.setElementsForCurrentPage();\n    });\n  };\n\n  const prevPage = () => {\n    if (page > 1) props.setPage(page - 1);\n  };\n\n  const nextPage = () => {\n    console.log(\"nextPage\");\n\n    if (page < countPages) {\n      props.setPage(page + 1);\n    }\n  };\n\n  const countPages = (total - total % per_page) / per_page + (total % per_page !== 0 ? 1 : 0);\n  console.log(\":::::CONUNT PAGE\", countPages);\n  const listPages = new Array(parseInt(countPages)).fill(null);\n  console.log(\":::::LIST PAGE\", listPages);\n  return React.createElement(\"div\", {\n    className: \"containerNavigation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(ReactPaginate, {\n    previousLabel: React.createElement(\"div\", {\n      className: \"icon\",\n      onClick: prevPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: iconPreview,\n      alt: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })),\n    nextLabel: React.createElement(\"div\", {\n      className: \"icon\",\n      onClick: nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: iconNext,\n      alt: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })),\n    breakLabel: '...',\n    pageCount: countPages // onPageChange={}\n    ,\n    containerClassName: 'containerNavigation',\n    pageClassName: 'page',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n}\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js"],"names":["React","iconNext","iconPreview","ReactPaginate","Navigation","props","pagination","page","total","per_page","isActived","_page","handlePageClick","data","selectedPage","selected","offset","state","perPage","setState","currentPage","setElementsForCurrentPage","prevPage","setPage","nextPage","console","log","countPages","listPages","Array","parseInt","fill"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAO,eAAP;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEvB;AAFuB,4BAGWA,KAAK,CAACC,UAHjB;AAAA,QAGfC,IAHe,qBAGfA,IAHe;AAAA,QAGTC,KAHS,qBAGTA,KAHS;AAAA,QAGFC,QAHE,qBAGFA,QAHE;;AAKvB,QAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAIJ,IAAI,KAAKI,KAAb,EACI,OAAO,WAAP;AACJ,WAAO,EAAP;AACH,GAJD;;AAMAC,EAAAA,eAAe,GAAIC,IAAD,IAAU;AACxB,UAAMC,YAAY,GAAGD,IAAI,CAACE,QAA1B;AACA,UAAMC,MAAM,GAAGF,YAAY,GAAG,KAAKG,KAAL,CAAWC,OAAzC;AACA,SAAKC,QAAL,CAAe;AAACC,MAAAA,WAAW,EAAEN,YAAd;AAA4BE,MAAAA,MAAM,EAAEA;AAApC,KAAf,EAA4D,MAAM;AAChE,WAAKK,yBAAL;AACD,KAFD;AAGD,GANH;;AAQA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAGf,IAAI,GAAG,CAAV,EACAF,KAAK,CAACkB,OAAN,CAAchB,IAAI,GAAG,CAArB;AACH,GAHD;;AAKA,QAAMiB,QAAQ,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;;AACA,QAAGnB,IAAI,GAAGoB,UAAV,EAAsB;AACnBtB,MAAAA,KAAK,CAACkB,OAAN,CAAchB,IAAI,GAAG,CAArB;AACF;AACJ,GALD;;AAOA,QAAMoB,UAAU,GAAK,CAACnB,KAAK,GAAIA,KAAK,GAAGC,QAAlB,IAA+BA,QAAhC,IAA6CD,KAAK,GAAGC,QAAT,KAAuB,CAAvB,GAA2B,CAA3B,GAA+B,CAA3E,CAApB;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,UAAhC;AACA,QAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAUC,QAAQ,CAACH,UAAD,CAAlB,EAAgCI,IAAhC,CAAqC,IAArC,CAAlB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BE,SAA9B;AAGA,SACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,aAAD;AACI,IAAA,aAAa,EAAE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,OAAO,EAAEN,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC;AAAK,MAAA,GAAG,EAAEpB,WAAV;AAAuB,MAAA,GAAG,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzC,CADnB;AAEI,IAAA,SAAS,EAAE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,OAAO,EAAEsB,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyC;AAAK,MAAA,GAAG,EAAEvB,QAAV;AAAoB,MAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzC,CAFf;AAGI,IAAA,UAAU,EAAE,KAHhB;AAII,IAAA,SAAS,EAAE0B,UAJf,CAKI;AALJ;AAMI,IAAA,kBAAkB,EAAE,qBANxB;AAOI,IAAA,aAAa,EAAE,MAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAaH;;AAED,eAAevB,UAAf","sourcesContent":["import React from 'react';\n\nimport iconNext from '../img/Direita.png';\nimport iconPreview from '../img/Esquerda.png';\nimport ReactPaginate from 'react-paginate';\n\nimport './styles.scss';\n\nfunction Navigation(props) {\n\n    // const { pagination, setPage } = props\n    const { page, total, per_page } = props.pagination\n\n    const isActived = (_page) => {\n        if (page === _page)\n            return \"activated\"\n        return \"\"\n    }\n\n    handlePageClick = (data) => { \n        const selectedPage = data.selected; \n        const offset = selectedPage * this.state.perPage; \n        this.setState ({currentPage: selectedPage, offset: offset}, () => { \n          this.setElementsForCurrentPage (); \n        }); \n      }\n\n    const prevPage = () => {\n        if(page > 1)\n        props.setPage(page - 1)\n    }\n\n    const nextPage = () => {\n        console.log(\"nextPage\")\n        if(page < countPages ){\n           props.setPage(page + 1)\n        }\n    }\n\n    const countPages =  ((total - (total % per_page)) / per_page) +((total % per_page) !== 0 ? 1 : 0)\n    console.log(\":::::CONUNT PAGE\", countPages )\n    const listPages = new Array(parseInt(countPages)).fill(null)\n    console.log(\":::::LIST PAGE\", listPages)\n  \n\n    return (\n        <div className=\"containerNavigation\">\n            <ReactPaginate\n                previousLabel={<div className=\"icon\" onClick={prevPage}><img src={iconPreview} alt=\"next\" /></div>}\n                nextLabel={<div className=\"icon\" onClick={nextPage}><img src={iconNext} alt=\"next\" /></div>}\n                breakLabel={'...'}\n                pageCount={countPages}\n                // onPageChange={}\n                containerClassName={'containerNavigation'}\n                pageClassName={'page'}\n            />\n        </div>\n    )\n}\n\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}