{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/CodConfirmacao/index.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAlert, useAlert } from 'react-alert';\nimport { Auth } from \"aws-amplify\";\nimport { Form, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport PageContainer from \"../../components/features/PageContainer\";\nimport AlertMessage from \"../../components/elements/AlertMessage\";\nimport Email from \"../../assets/icons/email.png\";\nimport FormField from \"../../components/elements/FormField\";\nimport \"./styles.scss\";\n\nconst ConfirmSignUp = props => {\n  const alert = useAlert();\n\n  const resendCode = ev => {\n    ev.preventDefault();\n    Auth.forgotPassword(props.history.location.state.email).then(data => {\n      alert.success('Codigo enviado');\n    }).catch(err => {\n      console.log('ERROR', err);\n      return alert.error(AlertMessage[err.code] || AlertMessage.defaultErrorMessageCode);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(PageContainer, {\n    register: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerCodConfirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lightBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lightBoxContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: Email,\n    alt: \"Icone email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Confirme seu e-mail\"), React.createElement(\"p\", {\n    className: \"paragraph\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Enviamos um c\\xF3digo de confirma\\xE7\\xE3o por e-mail para voc\\xEA. Por favor, digite-o abaixo.\"), React.createElement(Form, {\n    className: \"formConfirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputInline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"codConfirm\",\n    type: \"text\",\n    name: \"codigo\",\n    label: \"C\\xF3digo de confirma\\xE7\\xE3o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btnDefault\",\n    type: \"submit\",\n    style: atv(),\n    disabled: !props.isValid,\n    required: props.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Confirmar\"), React.createElement(\"button\", {\n    className: \"btnSecundary\",\n    type: \"submit\",\n    onClick: resendCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Reenviar C\\xF3digo\")))))));\n\n  function atv() {\n    const x = props.isValid;\n\n    if (x === true) {\n      return {\n        background: \"#000\"\n      };\n    } else {\n      return {\n        background: \"#BBB\"\n      };\n    }\n  }\n};\n\nconst ConfirmSignupForm = withRouter(withFormik({\n  mapPropsToValues({\n    codigo\n  }) {\n    return {\n      codigo: codigo || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    codigo: Yup.string().required(\"Campo obrigatório\").length(6, \"Codigo inválido\")\n  }),\n\n  handleSubmit({\n    codigo\n  }, {\n    props,\n    setFieldError,\n    setSubmitting\n  }) {\n    setSubmitting(true);\n\n    if (props.location.state.pathname === \"/esqueci-senha\") {\n      props.history.push(\"/nova-senha\", {\n        email: props.history.location.state.email,\n        code: codigo\n      });\n    } else {\n      Auth.confirmSignUp(props.history.location.state.email, codigo.toString()).then(result => {\n        setSubmitting(false);\n        Auth.signIn(props.history.location.state.email, props.history.location.state.senha).then(response => {\n          props.alert.success(AlertMessage.codeValid);\n          props.history.push(\"/seus-dados\", {\n            initCadastro: props.history.location.state.email,\n            senha: props.history.location.state.senha,\n            codigoconfimacao: codigo\n          });\n          console.log(\"Minhas props no codigo de confirmação são\", props.history.location);\n        }).catch(error => {\n          console.log(\"Erro \", error);\n          return props.alert.error(AlertMessage[error.code] || AlertMessage.messageDefault);\n        });\n      }).catch(error => {\n        console.log(\"Erro confirmando assinatura: \", error);\n        props.alert.error(AlertMessage.codeInvalid);\n        setSubmitting(false);\n      });\n    }\n  }\n\n})(ConfirmSignUp));\nexport default withAlert()(ConfirmSignupForm);","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/CodConfirmacao/index.js"],"names":["React","withRouter","withAlert","useAlert","Auth","Form","withFormik","Yup","PageContainer","AlertMessage","Email","FormField","ConfirmSignUp","props","alert","resendCode","ev","preventDefault","forgotPassword","history","location","state","email","then","data","success","catch","err","console","log","error","code","defaultErrorMessageCode","atv","isValid","isSubmitting","x","background","ConfirmSignupForm","mapPropsToValues","codigo","validationSchema","object","shape","string","required","length","handleSubmit","setFieldError","setSubmitting","pathname","push","confirmSignUp","toString","result","signIn","senha","response","codeValid","initCadastro","codigoconfimacao","messageDefault","codeInvalid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAlert, useAlert } from 'react-alert';\nimport { Auth } from \"aws-amplify\";\nimport { Form, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport PageContainer from \"../../components/features/PageContainer\";\nimport AlertMessage from \"../../components/elements/AlertMessage\";\nimport Email from \"../../assets/icons/email.png\";\nimport FormField from \"../../components/elements/FormField\";\n\nimport \"./styles.scss\";\n\nconst ConfirmSignUp = (props) => {\n  const alert = useAlert();\n  const resendCode = ev => {\n    ev.preventDefault()\n    Auth.forgotPassword(props.history.location.state.email)\n    .then(data => {\n        alert.success('Codigo enviado');\n    })\n    .catch(err => {\n        console.log('ERROR', err);\n        return alert.error(AlertMessage[err.code] || AlertMessage.defaultErrorMessageCode);\n    });\n  }\n\n  return (\n    <>\n      <PageContainer register={true}>\n        <div className=\"containerCodConfirm\">\n          <div className=\"lightBox\">\n            <div className=\"lightBoxContent\">\n              <img src={Email} alt=\"Icone email\" />\n              <h3>Confirme seu e-mail</h3>\n              <p className=\"paragraph\">\n                Enviamos um código de confirmação por e-mail para você. Por favor, digite-o abaixo.\n              </p>\n              <Form className=\"formConfirm\">\n                <div className=\"inputInline\">\n                  <FormField\n                    id=\"codConfirm\"\n                    type=\"text\"\n                    name=\"codigo\"\n                    label=\"Código de confirmação\"\n                  />\n                </div>\n                <button\n                  className=\"btnDefault\"\n                  type=\"submit\"\n                  style={atv()}\n                  disabled={!props.isValid}\n                  required={props.isSubmitting}\n                >\n                  Confirmar\n                </button>\n                <button \n                className=\"btnSecundary\" \n                type=\"submit\"\n                onClick={resendCode}\n                >\n                  Reenviar Código\n                </button>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </PageContainer>\n    </>\n  );\n  function atv() {\n    const x = props.isValid;\n    if (x === true) {\n      return { background: `#000` };\n    } else {\n      return { background: `#BBB` };\n    }\n  }\n};\n\nconst ConfirmSignupForm = withRouter(\n  withFormik({\n    mapPropsToValues({ codigo }) {\n      return {\n        codigo: codigo || \"\",\n      };\n    },\n    validationSchema: Yup.object().shape({\n      codigo: Yup.string()\n        .required(\"Campo obrigatório\")\n        .length(6, \"Codigo inválido\"),\n    }),\n    handleSubmit({ codigo }, { props, setFieldError, setSubmitting }) {\n      setSubmitting(true);\n      \n      if(props.location.state.pathname === \"/esqueci-senha\") {\n        props.history.push(\"/nova-senha\", {email: props.history.location.state.email, code: codigo})\n      } else {\n      Auth.confirmSignUp(props.history.location.state.email, codigo.toString())\n        .then((result) => {\n          setSubmitting(false);\n          Auth.signIn(\n            props.history.location.state.email,\n            props.history.location.state.senha\n          )\n            .then((response) => {\n              props.alert.success(AlertMessage.codeValid);\n              props.history.push(\"/seus-dados\", {\n                initCadastro: props.history.location.state.email,\n                senha: props.history.location.state.senha,\n                codigoconfimacao: codigo,\n              });\n              console.log(\n                \"Minhas props no codigo de confirmação são\",\n                props.history.location\n              );\n            })\n            .catch((error) => {\n              console.log(\"Erro \", error);\n              return props.alert.error(AlertMessage[error.code] || AlertMessage.messageDefault);\n            });\n        })\n        .catch((error) => {\n          console.log(\"Erro confirmando assinatura: \", error);\n          props.alert.error(AlertMessage.codeInvalid);\n          setSubmitting(false);\n        });\n      }\n    },\n  })(ConfirmSignUp)\n);\n\nexport default withAlert()(ConfirmSignupForm);\n"]},"metadata":{},"sourceType":"module"}