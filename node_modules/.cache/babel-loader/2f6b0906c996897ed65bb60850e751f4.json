{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/features/PageContainer/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { Auth, API } from \"aws-amplify\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData, setConsoles } from \"../../../store/actions/user.action\";\nimport config from \"../../../config/constants\";\nimport Loader from \"../../elements/Loader\";\nimport Menu from \"../Header/Menu\";\nimport Footer from \"../Footer\";\n\nfunction PageContainer(props) {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        redirect = _useState4[0],\n        setRedirect = _useState4[1];\n\n  const _useState5 = useState(undefined),\n        _useState6 = _slicedToArray(_useState5, 2),\n        user_data = _useState6[0],\n        setUser_data = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        to = _useState8[0],\n        setTo = _useState8[1];\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    if (!has_user_data()) {\n      get_authenticated_user();\n    } // eslint-disable-next-line\n\n  }, []);\n\n  const get_user_data = cognito_response => {\n    const user_id = cognito_response.attributes.sub;\n\n    if (props.user.data.entity_id) {\n      setLoading(false);\n      setUser_data({\n        cognito_user: cognito_response,\n        data: props.user\n      });\n      return;\n    }\n\n    API.get(config.APIS.PLAYERSTARS, \"/player/\".concat(user_id), {}).then(response => {\n      console.log(\"get user data bem sucedido. Response: \", response);\n      dispatch(setUserData(response.data));\n      setLoading(false);\n      setUser_data({\n        cognito_user: cognito_response,\n        data: response.data\n      });\n    }).catch(error => {\n      console.log(\"get user data falhou: \", error);\n\n      if (error.response && error.response.status === 404) {\n        setRedirect(true);\n        setLoading(false);\n        setTo(\"/seus-dados\");\n      } else {\n        setRedirect(true);\n        setLoading(false);\n        setTo(\"/\", {\n          state: {\n            message: error.message\n          }\n        });\n        console.log(\"Erro obtendo dados o usuário: \", error.response);\n      }\n    });\n    API.get(config.APIS.PLAYERSTARS, '/console/').then(response => {\n      console.log(\"ESSE E O RESPONSE\", response.data);\n      dispatch(setConsoles(response.data));\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \");\n    });\n  };\n\n  const get_authenticated_user = () => {\n    Auth.currentAuthenticatedUser().then(response => {\n      console.log(\"get_authenticated_user, response:\", response);\n\n      if (is_register_view()) {\n        setRedirect(true);\n        setLoading(false);\n        setTo(\"/\");\n        alert(\"Você já está no sistema\");\n      }\n\n      if (is_cadastro_view()) {\n        get_user_data(response);\n      } else {\n        setLoading(false);\n        setUserData({\n          cognito_user: response\n        });\n      }\n    }).catch(error => {\n      if (is_register_view()) {\n        setLoading(false);\n        setRedirect(false);\n      } else {\n        if (!is_public_view()) {\n          if (error === \"not authenticated\") {\n            setRedirect(true);\n            setLoading(false);\n            setTo(\"/login\");\n          } else {\n            setRedirect(true);\n            setLoading(false);\n            setTo(\"/\", {\n              state: {\n                message: error.message\n              }\n            });\n          }\n        } else {\n          setLoading(false);\n        }\n      }\n    });\n  };\n\n  const is_cadastro_view = () => {\n    return props.cadastro;\n  };\n\n  const is_register_view = () => {\n    return props.register;\n  };\n\n  const is_public_view = () => {\n    return props.public;\n  };\n\n  const has_user_data = () => {\n    return props.user_data !== undefined;\n  };\n\n  const renderLoading = () => {\n    return React.createElement(\"div\", {\n      className: \"Loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }));\n  };\n\n  const renderContent = () => {\n    const children = React.Children.map(props.children, child => React.cloneElement(child, {\n      user_data: user_data\n    }));\n    return React.createElement(React.Fragment, null, children);\n  };\n\n  const content = loading ? renderLoading() : renderContent();\n\n  if (redirect) {\n    return React.createElement(Redirect, {\n      to: to,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Menu, {\n    user_data: user_data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), content, React.createElement(Footer, {\n    user_data: user_data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }));\n}\n\nPageContainer.propTypes = {\n  background: PropTypes.any,\n  backgroundHeight: PropTypes.string,\n  public: PropTypes.bool,\n  cadastro: PropTypes.bool\n};\nexport default PageContainer; // import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Redirect } from \"react-router-dom\";\n// import { Auth, API } from \"aws-amplify\";\n// import { connect } from \"react-redux\";\n// import { setUserData, setConsoles } from \"../../../store/actions/user.action\";\n// import config from \"../../../config/constants\";\n// import Loader from \"../../elements/Loader\";\n// import Menu from \"../Header/Menu\";\n// import Footer from \"../Footer\";\n// class PageContainer extends Component {\n//   state = {\n//     loading: true,\n//     redirect: false,\n//     user_data: undefined\n//   };\n//   redirect_to_error(error_message) {\n//     this.setState({\n//       redirect: true,\n//       loading: false,\n//       to: {\n//         pathname: \"/\",\n//         state: {\n//           message: error_message\n//         }\n//       }\n//     });\n//   }\n//   redirect_to_login() {\n//     this.setState({\n//       redirect: true,\n//       loading: false,\n//       to: {\n//         pathname: \"/login\"\n//       }\n//     });\n//   }\n//   redirect_to_cadastro() {\n//     this.setState({\n//       loading: false,\n//       redirect: true,\n//       to: { pathname: \"/seus-dados\" }\n//     });\n//   }\n//   redirect_to_home() {\n//     this.setState({\n//       redirect: true,\n//       loading: false,\n//       to: { pathname: \"/\" }\n//     });\n//   }\n//   get_user_data(cognito_response) {\n//     const user_id = cognito_response.attributes.sub;\n//     console.log(\"USER_ID:\", user_id);\n//     console.log(\"COGNITO RESPONSE: \", cognito_response);\n//     if (this.props.user.data.entity_id) {\n//       this.setState({\n//         loading: false,\n//         user_data: {\n//           cognito_user: cognito_response,\n//           data: this.props.user\n//         }\n//       });\n//       return;\n//     }\n//     API.get(config.APIS.PLAYERSTARS, `/player/${user_id}`, {})\n//       .then(response => {\n//         console.log(\"get user data bem sucedido. Response: \", response);\n//         this.props.setUserData(response.data);\n//         this.setState({\n//           loading: false,\n//           user_data: {\n//             cognito_user: cognito_response,\n//             data: response.data\n//           }\n//         });\n//       })\n//       .catch(error => {\n//         console.log(\"get user data falhou: \", error);\n//         if (error.response && error.response.status === 404) {\n//           this.redirect_to_cadastro();\n//         } else {\n//           this.redirect_to_error(\"Erro obtendo dados do usuário\"); //error.response.message)\n//           console.log(\"Erro obtendo dados o usuário: \", error.response);\n//         }\n//       });\n//       API.get(config.APIS.PLAYERSTARS, '/console/')\n//       .then(response => {\n//           console.log(\"ESSE E O RESPONSE\", response.data)\n//           this.props.setConsoles(response.data)\n//       })\n//       .catch(error => {\n//           console.log(\"ERRO NO GET: \")\n//       })\n//   }\n//   get_authenticated_user() {\n//     Auth.currentAuthenticatedUser()\n//       .then(response => {\n//         console.log(\"get_authenticated_user, response:\", response);\n//         if (this.is_register_view()) {\n//           this.redirect_to_home();\n//           alert(\"Você já está no sistema\");\n//         }\n//         if (!this.is_cadastro_view()) {\n//           this.get_user_data(response);\n//         } else {\n//           this.setState({\n//             loading: false,\n//             user_data: {\n//               cognito_user: response\n//             }\n//           });\n//         }\n//       })\n//       .catch(error => {\n//         if (this.is_register_view()) {\n//           this.setState({ loading: false, redirect: false });\n//         } else {\n//           if (!this.is_public_view()) {\n//             if (error === \"not authenticated\") {\n//               this.redirect_to_login();\n//             } else {\n//               this.redirect_to_error(error);\n//             }\n//           } else {\n//             this.setState({ loading: false });\n//           }\n//         }\n//       });\n//   }\n//   is_cadastro_view() {\n//     return this.props.cadastro;\n//   }\n//   is_register_view() {\n//     return this.props.register;\n//   }\n//   is_public_view() {\n//     return this.props.public;\n//   }\n//   has_user_data() {\n//     return this.props.user_data !== undefined;\n//   }\n//   componentDidMount() {\n//     window.scrollTo(0, 0);\n//     if (!this.has_user_data()) {\n//       this.get_authenticated_user();\n//     }\n//   }\n//   // noinspection JSMethodCanBeStatic\n//   renderLoading() {\n//     return (\n//       <div className=\"Loading\">\n//         <Loader />\n//       </div>\n//     );\n//   }\n//   renderContent() {\n//     const children = React.Children.map(this.props.children, child =>\n//       React.cloneElement(child, { user_data: this.state.user_data })\n//     );\n//     return <React.Fragment>{children}</React.Fragment>;\n//   }\n//   render() {\n//     console.log(\":::::::::::::\", this.props);\n//     if (this.state.redirect) {\n//       return <Redirect to={this.state.to} />;\n//     }\n//     const content = this.state.loading\n//       ? this.renderLoading()\n//       : this.renderContent();\n//     return (\n//       <React.Fragment>\n//         <Menu user_data={this.state.user_data} />\n//         {content}\n//         <Footer user_data={this.state.user_data} />\n//       </React.Fragment>\n//     );\n//   }\n// }\n// PageContainer.propTypes = {\n//   background: PropTypes.any,\n//   backgroundHeight: PropTypes.string,\n//   public: PropTypes.bool,\n//   cadastro: PropTypes.bool\n// };\n// export default connect(\n//   state => {\n//     const user = state.user;\n//     return {\n//       user\n//     };\n//   },\n//   {\n//     setUserData, setConsoles\n//   }\n// )(PageContainer);","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/features/PageContainer/index.js"],"names":["React","useState","useEffect","PropTypes","Redirect","Auth","API","useDispatch","setUserData","setConsoles","config","Loader","Menu","Footer","PageContainer","props","loading","setLoading","redirect","setRedirect","undefined","user_data","setUser_data","to","setTo","dispatch","window","scrollTo","has_user_data","get_authenticated_user","get_user_data","cognito_response","user_id","attributes","sub","user","data","entity_id","cognito_user","get","APIS","PLAYERSTARS","then","response","console","log","catch","error","status","state","message","currentAuthenticatedUser","is_register_view","alert","is_cadastro_view","is_public_view","cadastro","register","public","renderLoading","renderContent","children","Children","map","child","cloneElement","content","propTypes","background","any","backgroundHeight","string","bool"],"mappings":"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":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { Auth, API } from \"aws-amplify\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserData, setConsoles } from \"../../../store/actions/user.action\";\nimport config from \"../../../config/constants\";\nimport Loader from \"../../elements/Loader\";\nimport Menu from \"../Header/Menu\";\nimport Footer from \"../Footer\";\n\nfunction PageContainer (props) {\n  \n  const [loading, setLoading] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n  const [user_data, setUser_data] = useState(undefined);\n  const [to, setTo] = useState(\"\");\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    if (!has_user_data()) {\n      get_authenticated_user();\n    }\n    // eslint-disable-next-line\n  },[])\n\n\n  const get_user_data = (cognito_response) => {   \n    const user_id = cognito_response.attributes.sub;\n\n    if (props.user.data.entity_id) {\n      setLoading(false);\n      setUser_data({cognito_user: cognito_response, data: props.user})\n      return;\n    }\n\n    API.get(config.APIS.PLAYERSTARS, `/player/${user_id}`, {})\n      .then(response => {\n        console.log(\"get user data bem sucedido. Response: \", response);\n        dispatch(setUserData(response.data));\n        setLoading(false);\n        setUser_data({cognito_user: cognito_response, data: response.data})\n      })\n      .catch(error => {\n        console.log(\"get user data falhou: \", error);\n        if (error.response && error.response.status === 404) {\n          setRedirect(true);\n          setLoading(false);\n          setTo(\"/seus-dados\")\n        } else {\n          setRedirect(true);\n          setLoading(false);\n          setTo(\"/\", {state: {message: error.message}});\n          console.log(\"Erro obtendo dados o usuário: \", error.response);\n        }\n      });\n      API.get(config.APIS.PLAYERSTARS, '/console/')\n      .then(response => {\n          console.log(\"ESSE E O RESPONSE\", response.data)\n          dispatch(setConsoles(response.data))\n      })\n      .catch(error => {\n          console.log(\"ERRO NO GET: \")\n      })\n  }\n\n  const get_authenticated_user = () => {\n    Auth.currentAuthenticatedUser()\n      .then(response => {\n        console.log(\"get_authenticated_user, response:\", response);\n        if (is_register_view()) {\n          setRedirect(true);\n          setLoading(false);\n          setTo(\"/\");\n          alert(\"Você já está no sistema\");\n        }\n        if (is_cadastro_view()) {\n          get_user_data(response);\n        } else {\n          setLoading(false);\n          setUserData({cognito_user: response});\n        }\n      })\n      .catch(error => {\n        if (is_register_view()) {\n          setLoading(false);\n          setRedirect(false);\n        } else {\n          if (!is_public_view()) {\n            if (error === \"not authenticated\") {\n              setRedirect(true);\n              setLoading(false);\n              setTo(\"/login\");\n            } else {\n              setRedirect(true);\n              setLoading(false);\n              setTo(\"/\", {state: {message: error.message}});\n            }\n          } else {\n            setLoading(false);\n          }\n        }\n      });\n  }\n\n  const is_cadastro_view = () => {\n    return props.cadastro;\n  }\n\n  const is_register_view = () => {\n    return props.register;\n  }\n\n  const is_public_view = () => {\n    return props.public;\n  }\n\n  const has_user_data = () => {\n    return props.user_data !== undefined;\n  }\n\n\n  const renderLoading = () => {\n    return (\n      <div className=\"Loading\">\n        <Loader />\n      </div>\n    );\n  }\n\n  const renderContent = () => {\n    const children = React.Children.map(props.children, child =>\n      React.cloneElement(child, {user_data: user_data })\n    );\n\n    return <>{children}</>;\n  }\n\n\n    const content = loading ? renderLoading() : renderContent();\n      \n    if (redirect) {\n      return <Redirect to={to} />;\n    }\n\n    return (\n      <>\n        <Menu user_data={user_data} />\n        {content}\n        <Footer user_data={user_data} />\n      </>\n    );  \n}\n\nPageContainer.propTypes = {\n  background: PropTypes.any,\n  backgroundHeight: PropTypes.string,\n  public: PropTypes.bool,\n  cadastro: PropTypes.bool\n};\n\nexport default PageContainer;\n\n// import React, { Component } from \"react\";\n// import PropTypes from \"prop-types\";\n// import { Redirect } from \"react-router-dom\";\n// import { Auth, API } from \"aws-amplify\";\n// import { connect } from \"react-redux\";\n// import { setUserData, setConsoles } from \"../../../store/actions/user.action\";\n// import config from \"../../../config/constants\";\n// import Loader from \"../../elements/Loader\";\n// import Menu from \"../Header/Menu\";\n// import Footer from \"../Footer\";\n\n// class PageContainer extends Component {\n//   state = {\n//     loading: true,\n//     redirect: false,\n//     user_data: undefined\n//   };\n\n//   redirect_to_error(error_message) {\n//     this.setState({\n//       redirect: true,\n//       loading: false,\n//       to: {\n//         pathname: \"/\",\n//         state: {\n//           message: error_message\n//         }\n//       }\n//     });\n//   }\n\n//   redirect_to_login() {\n//     this.setState({\n//       redirect: true,\n//       loading: false,\n//       to: {\n//         pathname: \"/login\"\n//       }\n//     });\n//   }\n\n//   redirect_to_cadastro() {\n//     this.setState({\n//       loading: false,\n//       redirect: true,\n//       to: { pathname: \"/seus-dados\" }\n//     });\n//   }\n\n//   redirect_to_home() {\n//     this.setState({\n//       redirect: true,\n//       loading: false,\n//       to: { pathname: \"/\" }\n//     });\n//   }\n\n//   get_user_data(cognito_response) {\n//     const user_id = cognito_response.attributes.sub;\n//     console.log(\"USER_ID:\", user_id);\n//     console.log(\"COGNITO RESPONSE: \", cognito_response);\n//     if (this.props.user.data.entity_id) {\n//       this.setState({\n//         loading: false,\n//         user_data: {\n//           cognito_user: cognito_response,\n//           data: this.props.user\n//         }\n//       });\n//       return;\n//     }\n//     API.get(config.APIS.PLAYERSTARS, `/player/${user_id}`, {})\n//       .then(response => {\n//         console.log(\"get user data bem sucedido. Response: \", response);\n//         this.props.setUserData(response.data);\n//         this.setState({\n//           loading: false,\n//           user_data: {\n//             cognito_user: cognito_response,\n//             data: response.data\n//           }\n//         });\n//       })\n//       .catch(error => {\n//         console.log(\"get user data falhou: \", error);\n//         if (error.response && error.response.status === 404) {\n//           this.redirect_to_cadastro();\n//         } else {\n//           this.redirect_to_error(\"Erro obtendo dados do usuário\"); //error.response.message)\n//           console.log(\"Erro obtendo dados o usuário: \", error.response);\n//         }\n//       });\n//       API.get(config.APIS.PLAYERSTARS, '/console/')\n//       .then(response => {\n//           console.log(\"ESSE E O RESPONSE\", response.data)\n//           this.props.setConsoles(response.data)\n//       })\n//       .catch(error => {\n//           console.log(\"ERRO NO GET: \")\n//       })\n//   }\n//   get_authenticated_user() {\n//     Auth.currentAuthenticatedUser()\n//       .then(response => {\n//         console.log(\"get_authenticated_user, response:\", response);\n//         if (this.is_register_view()) {\n//           this.redirect_to_home();\n//           alert(\"Você já está no sistema\");\n//         }\n//         if (!this.is_cadastro_view()) {\n//           this.get_user_data(response);\n//         } else {\n//           this.setState({\n//             loading: false,\n//             user_data: {\n//               cognito_user: response\n//             }\n//           });\n//         }\n//       })\n//       .catch(error => {\n//         if (this.is_register_view()) {\n//           this.setState({ loading: false, redirect: false });\n//         } else {\n//           if (!this.is_public_view()) {\n//             if (error === \"not authenticated\") {\n//               this.redirect_to_login();\n//             } else {\n//               this.redirect_to_error(error);\n//             }\n//           } else {\n//             this.setState({ loading: false });\n//           }\n//         }\n//       });\n//   }\n\n//   is_cadastro_view() {\n//     return this.props.cadastro;\n//   }\n\n//   is_register_view() {\n//     return this.props.register;\n//   }\n\n//   is_public_view() {\n//     return this.props.public;\n//   }\n\n//   has_user_data() {\n//     return this.props.user_data !== undefined;\n//   }\n\n//   componentDidMount() {\n//     window.scrollTo(0, 0);\n//     if (!this.has_user_data()) {\n//       this.get_authenticated_user();\n//     }\n//   }\n\n//   // noinspection JSMethodCanBeStatic\n//   renderLoading() {\n//     return (\n//       <div className=\"Loading\">\n//         <Loader />\n//       </div>\n//     );\n//   }\n\n//   renderContent() {\n//     const children = React.Children.map(this.props.children, child =>\n//       React.cloneElement(child, { user_data: this.state.user_data })\n//     );\n\n//     return <React.Fragment>{children}</React.Fragment>;\n//   }\n\n//   render() {\n//     console.log(\":::::::::::::\", this.props);\n//     if (this.state.redirect) {\n//       return <Redirect to={this.state.to} />;\n//     }\n\n//     const content = this.state.loading\n//       ? this.renderLoading()\n//       : this.renderContent();\n//     return (\n//       <React.Fragment>\n//         <Menu user_data={this.state.user_data} />\n//         {content}\n//         <Footer user_data={this.state.user_data} />\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n// PageContainer.propTypes = {\n//   background: PropTypes.any,\n//   backgroundHeight: PropTypes.string,\n//   public: PropTypes.bool,\n//   cadastro: PropTypes.bool\n// };\n\n// export default connect(\n//   state => {\n//     const user = state.user;\n//     return {\n//       user\n//     };\n//   },\n//   {\n//     setUserData, setConsoles\n//   }\n// )(PageContainer);\n"]},"metadata":{},"sourceType":"module"}