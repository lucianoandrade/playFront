{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/InicioDoCadastro/index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport FormField from \"../FormField\";\nimport logoPlaystars from \"./../img/logo_final.svg\";\nimport './styles.scss';\nFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string\n};\n\nfunction Signup() {\n  const _useState = useState('\b'),\n        _useState2 = _slicedToArray(_useState, 2),\n        btnDisabled = _useState2[0],\n        setBtnDisable = _useState2[1];\n\n  const _useState3 = useState('\b'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        btnColor = _useState4[0],\n        setBtnColor = _useState4[1];\n\n  const on_input = i => {\n    const target = i.target;\n    const habilitar = target.value.length;\n\n    if (habilitar > 6) {\n      setBtnDisable(false);\n      setBtnColor('#000');\n    } else {\n      setBtnDisable(true);\n      setBtnColor('#BBB');\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"telaCadastro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cadastro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"logoPrincipal\",\n    src: logoPlaystars,\n    alt: \"Logo PlayStarts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: \"tituloLogo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Ol\\xE1 Vamos come\\xE7ar seu cadastro?\"), React.createElement(Form, {\n    className: \"dados\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputInline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"inputInline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"senha\",\n    name: \"senha\",\n    type: \"password\",\n    label: \"Senha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"inputInline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"senha2\",\n    name: \"senha2\",\n    type: \"password\",\n    onInput: on_input.bind(this),\n    label: \"Confirme a senha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"continuar\",\n    type: \"submit\",\n    disabled: btnDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Continuar\")))));\n}\n\nconst SignupForm = withRouter(withFormik({\n  mapPropsToValues({\n    email,\n    senha,\n    senha2\n  }) {\n    return {\n      email: email || '',\n      senha: senha || '',\n      senha2: senha2 || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required(\"Campo obrigatório\").email('Email inválido'),\n    senha: Yup.string().required(\"Campo obrigatório\").min(8, \"Mínimo 8 caracteres\"),\n    senha2: Yup.string().required(\"Campo obrigatório\")\n  }),\n\n  handleSubmit({\n    email,\n    senha,\n    senha2\n  }, {\n    props,\n    setFieldError,\n    setSubmitting\n  }) {\n    console.log(props);\n\n    if (senha !== senha2) {\n      setFieldError(\"senha\", \"As senhas digitadas não estão idênticas.\");\n      setFieldError(\"senha2\", \"As senhas digitadas não estão idênticas.\");\n      return;\n    }\n\n    setSubmitting(true);\n    Auth.signUp(email, senha).then(result => {\n      console.log('Resultado do signup: ', result);\n      console.log('funcionou');\n      props.history.push('/codconfirmacao', {\n        email: email\n      });\n      console.log('Minhas props no inicio do cadastro:', props);\n    }).catch(error => {\n      switch (error.code) {\n        case \"UsernameExistsException\":\n          setFieldError(\"email\", \"Email já está em uso.\");\n          break;\n\n        default:\n          console.log('Erro fazendo signup: ', error);\n          window.alert('Erro fazendo signup');\n          break;\n      }\n\n      setSubmitting(false);\n    });\n  }\n\n})(Signup));\nexport default SignupForm;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/InicioDoCadastro/index.js"],"names":["React","useState","PropTypes","Auth","withRouter","Yup","withFormik","Form","FormField","propTypes","id","string","isRequired","name","label","type","Signup","btnDisabled","setBtnDisable","btnColor","setBtnColor","on_input","i","target","habilitar","value","length","logoPlaystars","bind","SignupForm","mapPropsToValues","email","senha","senha2","validationSchema","object","shape","required","min","handleSubmit","props","setFieldError","setSubmitting","console","log","signUp","then","result","history","push","catch","error","code","window","alert"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\n\nimport FormField from \"../FormField\";\n\nimport logoPlaystars from './../img/logo_final.svg';\nimport './styles.scss';\n\nFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n};\n\nfunction Signup() {\n\n  const [btnDisabled, setBtnDisable] = useState('\b')\n  const [btnColor, setBtnColor] = useState('\b')\n\n  const on_input = (i) => {\n    const target = i.target;\n    const habilitar = target.value.length;\n\n    if (habilitar > 6) {\n      setBtnDisable(false)\n      setBtnColor('#000')\n    } else {\n      setBtnDisable(true)\n      setBtnColor('#BBB')\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <section className=\"telaCadastro\">\n        <div className=\"cadastro\">\n          <img className=\"logoPrincipal\" src={logoPlaystars} alt=\"Logo PlayStarts\" />\n          <h2 className=\"tituloLogo\">Olá Vamos começar seu cadastro?</h2>\n          <Form className=\"dados\">\n            <div className=\"inputInline\">\n              <FormField id=\"email\" name=\"email\" type=\"text\" label=\"Email\" />\n            </div>\n            <div className=\"inputInline\">\n              <FormField id=\"senha\" name=\"senha\" type=\"password\" label=\"Senha\" />\n            </div>\n            <div className=\"inputInline\">\n              <FormField id=\"senha2\" name=\"senha2\" type=\"password\" onInput={on_input.bind(this)} label=\"Confirme a senha\" />\n            </div>\n            <button \n            className=\"continuar\"\n            type=\"submit\" disabled={btnDisabled} >Continuar</button>\n          </Form>\n        </div>\n      </section>\n    </React.Fragment>\n  )\n}\n\n\nconst SignupForm = withRouter(withFormik({\n  mapPropsToValues({\n    email,\n    senha,\n    senha2\n  }) {\n    return {\n      email: email || '',\n      senha: senha || '',\n      senha2: senha2 || ''\n    }\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .required(\"Campo obrigatório\")\n      .email('Email inválido'),\n    senha: Yup.string()\n      .required(\"Campo obrigatório\")\n      .min(8, \"Mínimo 8 caracteres\"),\n    senha2: Yup.string()\n      .required(\"Campo obrigatório\")\n  }),\n  handleSubmit({ email, senha, senha2 }, { props, setFieldError, setSubmitting }) {\n    console.log(props);\n    if (senha !== senha2) {\n      setFieldError(\"senha\", \"As senhas digitadas não estão idênticas.\");\n      setFieldError(\"senha2\", \"As senhas digitadas não estão idênticas.\");\n      return;\n    }\n    setSubmitting(true);\n\n    Auth.signUp(email, senha)\n      .then((result) => {\n        console.log('Resultado do signup: ', result)\n        console.log('funcionou')\n        props.history.push('/codconfirmacao', { email: email });\n        console.log('Minhas props no inicio do cadastro:', props)\n      })\n      .catch(error => {\n        switch (error.code) {\n          case \"UsernameExistsException\":\n            setFieldError(\"email\", \"Email já está em uso.\");\n            break;\n          default:\n            console.log('Erro fazendo signup: ', error);\n            window.alert('Erro fazendo signup');\n            break;\n        }\n        setSubmitting(false);\n\n      });\n  }\n})(Signup));\n\nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}