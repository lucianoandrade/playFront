{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Ranking/Filter/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Select from '../../../components/elements/Select/index';\nimport './styles.scss';\n\nfunction Filter(props) {\n  let consolesRedux = useSelector(state => state.user.consoles);\n  console.log(consolesRedux);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        plataformSelected = _useState2[0],\n        setPlataformSelected = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameSelected = _useState4[0],\n        setGameSelected = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        categorySelected = _useState6[0],\n        setCategorySelected = _useState6[1];\n\n  const optionsCategory = [{\n    label: \"Individual\",\n    value: \"Individual\"\n  }, {\n    label: \"Por times\",\n    value: \"Por times\"\n  }, {\n    label: \"Meus times\",\n    value: \"Meus times\"\n  }];\n\n  let formattedConsoleGeneric = JSONValue => {\n    return JSONValue.map(consoleJSON => {\n      consoleJSON.value = consoleJSON.entity_id;\n      consoleJSON.label = consoleJSON.name;\n      return consoleJSON;\n    });\n  };\n\n  let FormattedJSONConsoles = formattedConsoleGeneric(consolesRedux);\n  let currentConsoleGames = !!plataformSelected.length && FormattedJSONConsoles.find(specificConsole => specificConsole.name === plataformSelected).games;\n  let FormattedJSONConsolesGames = !!plataformSelected.length && formattedConsoleGeneric(currentConsoleGames);\n  useEffect(() => {\n    changePlatform(FormattedJSONConsoles[0]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (plataformSelected && !gameSelected) changeGame(FormattedJSONConsolesGames[0]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plataformSelected]);\n\n  function changePlatform(c) {\n    setPlataformSelected(c.name);\n    props.setFilter(\"platform\", c);\n    changeGame(c.games[0]);\n  }\n\n  function changeGame(c) {\n    setGameSelected(c.name);\n    props.setFilter(\"game\", c);\n  }\n\n  function changeCategory(c) {\n    setCategorySelected(c.value);\n    props.setFilter(\"category\", c.value);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"containerFilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changePlatform,\n    width: '150px',\n    placeholder: FormattedJSONConsoles.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma',\n    options: FormattedJSONConsoles,\n    classNames: 'select-class',\n    name: \"platform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changeGame,\n    width: '150px',\n    placeholder: FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo',\n    options: !!plataformSelected.length ? FormattedJSONConsolesGames : [],\n    classNames: 'select-class',\n    name: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changeCategory,\n    width: '150px',\n    placeholder: optionsCategory.find(item => item.value === categorySelected) ? categorySelected : optionsCategory[0].value,\n    options: optionsCategory,\n    classNames: 'select-class',\n    name: \"categoria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))));\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Ranking/Filter/index.js"],"names":["React","useState","useEffect","useSelector","Select","Filter","props","consolesRedux","state","user","consoles","console","log","plataformSelected","setPlataformSelected","gameSelected","setGameSelected","categorySelected","setCategorySelected","optionsCategory","label","value","formattedConsoleGeneric","JSONValue","map","consoleJSON","entity_id","name","FormattedJSONConsoles","currentConsoleGames","length","find","specificConsole","games","FormattedJSONConsolesGames","changePlatform","changeGame","c","setFilter","changeCategory","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport Select from '../../../components/elements/Select/index';\n\nimport './styles.scss';\n\nfunction Filter(props) {\n    \n    let consolesRedux = useSelector(state => state.user.consoles)\n    console.log(consolesRedux)\n    const [plataformSelected, setPlataformSelected] = useState('')\n    const [gameSelected, setGameSelected] = useState('')\n    const [categorySelected, setCategorySelected] = useState('')\n\n    const optionsCategory = [\n        { label: \"Individual\", value: \"Individual\" },\n        { label: \"Por times\", value: \"Por times\" },\n        { label: \"Meus times\", value: \"Meus times\" },\n      ];\n    \n    let formattedConsoleGeneric = (JSONValue) => {\n        return JSONValue.map((consoleJSON) => {\n            consoleJSON.value = consoleJSON.entity_id;\n            consoleJSON.label = consoleJSON.name;\n            return consoleJSON\n        })\n    }\n\n    let FormattedJSONConsoles = formattedConsoleGeneric(consolesRedux);\n    let currentConsoleGames = !!plataformSelected.length && FormattedJSONConsoles.find((specificConsole) => specificConsole.name === plataformSelected).games\n    let FormattedJSONConsolesGames = !!plataformSelected.length && formattedConsoleGeneric(currentConsoleGames)\n\n    useEffect(() => {\n        changePlatform(FormattedJSONConsoles[0])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        if(plataformSelected && !gameSelected)\n        changeGame(FormattedJSONConsolesGames[0])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [plataformSelected])\n\n    function changePlatform(c) {\n        setPlataformSelected(c.name)\n        props.setFilter(\"platform\", c)\n\n        changeGame(c.games[0])\n    }\n\n    function changeGame(c) {\n        setGameSelected(c.name)\n        props.setFilter(\"game\", c)\n    }\n\n    function changeCategory(c) {\n        setCategorySelected(c.value)\n        props.setFilter(\"category\", c.value)\n    }\n\n    return (\n        <div className=\"containerFilter\">\n            <div className=\"containerSelects\">\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changePlatform}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsoles.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma'}\n                        options={FormattedJSONConsoles}\n                        classNames={'select-class'}\n                        name=\"platform\"\n                    />\n                </div>\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changeGame}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo'}\n                        options={!!plataformSelected.length ? FormattedJSONConsolesGames : []}\n                        classNames={'select-class'}\n                        name=\"game\"\n                    />\n                </div>\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changeCategory}\n                        width={'150px'}\n                        placeholder={optionsCategory.find(item => item.value === categorySelected) ? categorySelected : optionsCategory[0].value} \n                        options={optionsCategory}\n                        classNames={'select-class'}\n                        name=\"categoria\"\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}