{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/views/view/view.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { Auth, API } from \"aws-amplify\";\nimport { connect } from \"react-redux\";\nimport { setUserData } from \"../../store/actions/user.action\";\nimport config from \"../../config/constants\";\nimport Loader from \"../../components/Loader/index\";\nimport Menu from \"../../components/Header/Menu\";\nimport Footer from \"../../components/Footer\";\n\nclass View extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      redirect: false,\n      user_data: undefined\n    };\n  }\n\n  redirect_to_error(error_message) {\n    this.setState({\n      redirect: true,\n      loading: false,\n      to: {\n        pathname: \"/\",\n        state: {\n          message: error_message\n        }\n      }\n    });\n  }\n\n  redirect_to_login() {\n    this.setState({\n      redirect: true,\n      loading: false,\n      to: {\n        pathname: \"/login\"\n      }\n    });\n  }\n\n  redirect_to_cadastro() {\n    this.setState({\n      loading: false,\n      redirect: true,\n      to: {\n        pathname: \"/dadosuser\"\n      }\n    });\n  }\n\n  redirect_to_home() {\n    this.setState({\n      redirect: true,\n      loading: false,\n      to: {\n        pathname: \"/\"\n      }\n    });\n  }\n\n  get_user_data() {\n    // const user_id = cognito_response.attributes.sub;\n    // console.log(\"USER_ID:\", user_id);\n    // console.log(\"COGNITO RESPONSE: \", cognito_response);\n    // if (this.props.user.data.entity_id) {\n    //   this.setState({\n    //     loading: false,\n    //     user_data: {\n    //       cognito_user: cognito_response,\n    //       data: this.props.user\n    //     }\n    //   });\n    //   return;\n    // }\n    API.get(config.APIS.PLAYERSTARS, \"/player/get-my-profile\", {}).then(response => {\n      console.log(\"get user data bem sucedido. Response: \", response);\n      this.props.setUserData(response.data);\n      this.setState({\n        loading: false,\n        user_data: {\n          cognito_user: cognito_response,\n          data: response.data\n        }\n      });\n    }).catch(error => {\n      console.log(\"get user data falhou: \", error);\n\n      if (error.response && error.response.status === 404) {\n        this.redirect_to_cadastro();\n      } else {\n        this.redirect_to_error(\"Erro obtendo dados do usuário\"); //error.response.message)\n\n        console.log(\"Erro obtendo dados o usuário: \", error.response);\n      }\n    });\n  }\n\n  get_authenticated_user() {\n    Auth.currentAuthenticatedUser().then(response => {\n      console.log(\"get_authenticated_user, response:\", response);\n\n      if (this.is_register_view()) {\n        this.redirect_to_home();\n        alert(\"Você já está no sistema\");\n      }\n\n      if (!this.is_cadastro_view()) {\n        this.get_user_data(response);\n      } else {\n        this.setState({\n          loading: false,\n          user_data: {\n            cognito_user: response\n          }\n        });\n      }\n    }).catch(error => {\n      if (this.is_register_view()) {\n        this.setState({\n          loading: false,\n          redirect: false\n        });\n      } else {\n        if (!this.is_public_view()) {\n          if (error === \"not authenticated\") {\n            this.redirect_to_login();\n          } else {\n            this.redirect_to_error(error);\n          }\n        } else {\n          this.setState({\n            loading: false\n          });\n        }\n      }\n    });\n  }\n\n  is_cadastro_view() {\n    return this.props.cadastro;\n  }\n\n  is_register_view() {\n    return this.props.register;\n  }\n\n  is_public_view() {\n    return this.props.public;\n  }\n\n  has_user_data() {\n    return this.props.user_data !== undefined;\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    if (!this.has_user_data()) {\n      this.get_authenticated_user();\n    }\n  } // noinspection JSMethodCanBeStatic\n\n\n  renderLoading() {\n    return React.createElement(\"div\", {\n      className: \"Loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }));\n  }\n\n  renderContent() {\n    const children = React.Children.map(this.props.children, child => React.cloneElement(child, {\n      user_data: this.state.user_data\n    }));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, children);\n  }\n\n  render() {\n    console.log(\":::::::::::::\", this.props);\n\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: this.state.to,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      });\n    }\n\n    const content = this.state.loading ? this.renderLoading() : this.renderContent();\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      user_data: this.state.user_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), content, React.createElement(Footer, {\n      user_data: this.state.user_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }));\n  }\n\n}\n\nView.propTypes = {\n  background: PropTypes.any,\n  backgroundHeight: PropTypes.string,\n  public: PropTypes.bool,\n  cadastro: PropTypes.bool\n};\nexport default connect(state => {\n  const user = state.user;\n  return {\n    user\n  };\n}, {\n  setUserData\n})(View);","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/views/view/view.js"],"names":["React","Component","PropTypes","Redirect","Auth","API","connect","setUserData","config","Loader","Menu","Footer","View","state","loading","redirect","user_data","undefined","redirect_to_error","error_message","setState","to","pathname","message","redirect_to_login","redirect_to_cadastro","redirect_to_home","get_user_data","get","APIS","PLAYERSTARS","then","response","console","log","props","data","cognito_user","cognito_response","catch","error","status","get_authenticated_user","currentAuthenticatedUser","is_register_view","alert","is_cadastro_view","is_public_view","cadastro","register","public","has_user_data","componentDidMount","window","scrollTo","renderLoading","renderContent","children","Children","map","child","cloneElement","render","content","propTypes","background","any","backgroundHeight","string","bool","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { Auth, API } from \"aws-amplify\";\nimport { connect } from \"react-redux\";\nimport { setUserData } from \"../../store/actions/user.action\";\nimport config from \"../../config/constants\";\nimport Loader from \"../../components/Loader/index\";\nimport Menu from \"../../components/Header/Menu\";\nimport Footer from \"../../components/Footer\";\n\nclass View extends Component {\n  state = {\n    loading: true,\n    redirect: false,\n    user_data: undefined\n  };\n\n  redirect_to_error(error_message) {\n    this.setState({\n      redirect: true,\n      loading: false,\n      to: {\n        pathname: \"/\",\n        state: {\n          message: error_message\n        }\n      }\n    });\n  }\n\n  redirect_to_login() {\n    this.setState({\n      redirect: true,\n      loading: false,\n      to: {\n        pathname: \"/login\"\n      }\n    });\n  }\n\n  redirect_to_cadastro() {\n    this.setState({\n      loading: false,\n      redirect: true,\n      to: { pathname: \"/dadosuser\" }\n    });\n  }\n\n  redirect_to_home() {\n    this.setState({\n      redirect: true,\n      loading: false,\n      to: { pathname: \"/\" }\n    });\n  }\n\n  get_user_data() {\n    // const user_id = cognito_response.attributes.sub;\n    // console.log(\"USER_ID:\", user_id);\n    // console.log(\"COGNITO RESPONSE: \", cognito_response);\n    // if (this.props.user.data.entity_id) {\n    //   this.setState({\n    //     loading: false,\n    //     user_data: {\n    //       cognito_user: cognito_response,\n    //       data: this.props.user\n    //     }\n    //   });\n    //   return;\n    // }\n    API.get(config.APIS.PLAYERSTARS, `/player/get-my-profile`, {})\n      .then(response => {\n        console.log(\"get user data bem sucedido. Response: \", response);\n        this.props.setUserData(response.data);\n        this.setState({\n          loading: false,\n          user_data: {\n            cognito_user: cognito_response,\n            data: response.data\n          }\n        });\n      })\n      .catch(error => {\n        console.log(\"get user data falhou: \", error);\n        if (error.response && error.response.status === 404) {\n          this.redirect_to_cadastro();\n        } else {\n          this.redirect_to_error(\"Erro obtendo dados do usuário\"); //error.response.message)\n          console.log(\"Erro obtendo dados o usuário: \", error.response);\n        }\n      });\n  }\n  get_authenticated_user() {\n    Auth.currentAuthenticatedUser()\n      .then(response => {\n        console.log(\"get_authenticated_user, response:\", response);\n        if (this.is_register_view()) {\n          this.redirect_to_home();\n          alert(\"Você já está no sistema\");\n        }\n        if (!this.is_cadastro_view()) {\n          this.get_user_data(response);\n        } else {\n          this.setState({\n            loading: false,\n            user_data: {\n              cognito_user: response\n            }\n          });\n        }\n      })\n      .catch(error => {\n        if (this.is_register_view()) {\n          this.setState({ loading: false, redirect: false });\n        } else {\n          if (!this.is_public_view()) {\n            if (error === \"not authenticated\") {\n              this.redirect_to_login();\n            } else {\n              this.redirect_to_error(error);\n            }\n          } else {\n            this.setState({ loading: false });\n          }\n        }\n      });\n  }\n\n  is_cadastro_view() {\n    return this.props.cadastro;\n  }\n\n  is_register_view() {\n    return this.props.register;\n  }\n\n  is_public_view() {\n    return this.props.public;\n  }\n\n  has_user_data() {\n    return this.props.user_data !== undefined;\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    if (!this.has_user_data()) {\n      this.get_authenticated_user();\n    }\n  }\n\n  // noinspection JSMethodCanBeStatic\n  renderLoading() {\n    return (\n      <div className=\"Loading\">\n        <Loader />\n      </div>\n    );\n  }\n\n  renderContent() {\n    const children = React.Children.map(this.props.children, child =>\n      React.cloneElement(child, { user_data: this.state.user_data })\n    );\n\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n\n  render() {\n    console.log(\":::::::::::::\", this.props);\n    if (this.state.redirect) {\n      return <Redirect to={this.state.to} />;\n    }\n\n    const content = this.state.loading\n      ? this.renderLoading()\n      : this.renderContent();\n    return (\n      <React.Fragment>\n        <Menu user_data={this.state.user_data} />\n        {content}\n        <Footer user_data={this.state.user_data} />\n      </React.Fragment>\n    );\n  }\n}\n\nView.propTypes = {\n  background: PropTypes.any,\n  backgroundHeight: PropTypes.string,\n  public: PropTypes.bool,\n  cadastro: PropTypes.bool\n};\n\nexport default connect(\n  state => {\n    const user = state.user;\n    return {\n      user\n    };\n  },\n  {\n    setUserData\n  }\n)(View);\n"]},"metadata":{},"sourceType":"module"}