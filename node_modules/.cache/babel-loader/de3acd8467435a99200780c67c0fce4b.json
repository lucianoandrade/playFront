{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/DadosUsuario/index.js\";\nimport React from 'react';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { API, Auth } from \"aws-amplify\";\nimport iconFacebook from \"../img/facebook.svg\";\nimport iconGoogle from \"../img/google_plus.svg\";\nimport * as PropTypes from \"prop-types\";\nimport config from \"../../../config/constants\";\nimport { withRouter } from \"react-router-dom\";\nimport './styles.scss';\nconst estados = [\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MT\", \"MS\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SP\", \"SE\", \"TO\"];\n\nconst CadastroForm = props => React.createElement(\"section\", {\n  className: \"telaCompleteCadastro\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"completeCadastro\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  className: \"titleH3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Complete seu cadastro\"), React.createElement(\"div\", {\n  className: \"redes-sociais\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"a\", {\n  href: \"#.com\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"facebook-icon\",\n  src: iconFacebook,\n  alt: \"Icone Facebook\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n})), React.createElement(\"a\", {\n  href: \"#.com\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  className: \"google-icon\",\n  src: iconGoogle,\n  alt: \"Icone Google plus\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}))), React.createElement(Form, {\n  className: \"dadosPessoais\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"blocoDadosPessoais\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  className: \"titleH3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"Dados pessoais\"), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"nome\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"nome\",\n  type: \"text\",\n  name: \"nome\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"nome\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"Nome Completo\")), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"nascimento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"cpf\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"doisCampos\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"nascimento\",\n  type: \"text\",\n  name: \"nascimento\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"nascimento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, \"Nascimento\")), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"cpf\",\n  type: \"text\",\n  name: \"cpf\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"cpf\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, \"CPF\"))), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"email\",\n  type: \"text\",\n  name: \"email\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, \"E-mail\")), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"nickname\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"nickname\",\n  type: \"text\",\n  name: \"nickname\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"nickname\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, \"nickname\"))), React.createElement(\"div\", {\n  className: \"blocoEnderecoCompleto\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  className: \"titleH3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, \"Endere\\xE7o completo\"), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"uf\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"cidade\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"doisCampos\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, React.createElement(\"select\", {\n  id: \"uf\",\n  name: \"uf\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, React.createElement(\"option\", {\n  value: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}, \"UF\"), estados.map((estado, index) => React.createElement(\"option\", {\n  value: estado,\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, estado))), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"uf\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n})), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"cidade\",\n  type: \"text\",\n  name: \"cidade\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"cidade\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, \"Cidade\"))), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"bairro\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"bairro\",\n  type: \"text\",\n  name: \"bairro\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"bairro\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, \"Bairro\")), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"rua\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"rua\",\n  type: \"text\",\n  name: \"rua\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"rua\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, \"Rua\")), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"numero\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"cep\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"doisCampos\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}, React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"numero\",\n  type: \"text\",\n  name: \"numero\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"numero\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, \"Numero\")), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"cep\",\n  type: \"text\",\n  name: \"cep\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"cep\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, \"CEP\"))), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"complemento\",\n  type: \"text\",\n  name: \"complemento\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"complemento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}, \"Complemento - \", React.createElement(\"i\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}, \"opcional\")))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  className: \"titleH3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}, \"C\\xF3digo Promocional\"), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"codigo\",\n  type: \"text\",\n  name: \"codigo\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"complemento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, \"C\\xF3digo - \", React.createElement(\"i\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, \"opcional\")))), React.createElement(\"button\", {\n  className: \"continuar\",\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, \"Continuar\"))));\n\nCadastroForm.propTypes = {\n  values: PropTypes.any,\n  errors: PropTypes.any\n};\nconst FormikForm = withRouter(withFormik({\n  mapPropsToValues({\n    nome,\n    nascimento,\n    cpf,\n    email,\n    nickname,\n    uf,\n    cidade,\n    bairro,\n    rua,\n    numero,\n    cep,\n    complemento,\n    codigo\n  }) {\n    return {\n      nome: nome || '',\n      nascimento: nascimento || '',\n      cpf: cpf || '',\n      email: email || '',\n      nickname: nickname || '',\n      uf: uf || '',\n      cidade: cidade || '',\n      bairro: bairro || '',\n      rua: rua || '',\n      numero: numero || '',\n      cep: cep || '',\n      complemento: complemento || '',\n      codigo: codigo || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    nome: Yup.string().required('Digite seu nome completo!'),\n    nascimento: Yup.date().required('Digite sua data de nascimento!'),\n    cpf: Yup.string().required('Digite seu CPF'),\n    email: Yup.string().required('Digite seu E-mail!'),\n    nickname: Yup.string().required('Digite seu nickname!'),\n    // uf: Yup.string().required('Digite seu estado de origem!'),\n    cidade: Yup.string().required('Digite sua cidade!'),\n    bairro: Yup.string().required('Digite seu bairro!'),\n    rua: Yup.string().required('Digite sua rua!'),\n    numero: Yup.string().required('Digite o número da sua casa!'),\n    cep: Yup.string().length(8).required(\"Campo obrigatório\")\n  }),\n\n  handleSubmit(values, {\n    props\n  }) {\n    Auth.currentAuthenticatedUser().then(response => {\n      console.log('Current authenticated user: ', response);\n      const options = {\n        body: {\n          userdata: values,\n          email: response.attributes.email\n        }\n      };\n      API.post(config.APIS.PLAYERSTARS, '/user', options).then(response => {\n        console.log('Post bem sucedido. response: ', response);\n        props.history.push('/console', {\n          user_id: response.data\n        });\n      }).catch(error => {\n        console.log('Erro postando dados do usuário: ', error);\n        window.alert('Erro fazendo post dos dados do usuário.');\n      });\n    }).catch(error => {});\n  }\n\n})(CadastroForm));\nexport default FormikForm;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/DadosUsuario/index.js"],"names":["React","withFormik","Form","Field","ErrorMessage","Yup","API","Auth","PropTypes","config","withRouter","estados","CadastroForm","props","iconFacebook","iconGoogle","map","estado","index","propTypes","values","any","errors","FormikForm","mapPropsToValues","nome","nascimento","cpf","email","nickname","uf","cidade","bairro","rua","numero","cep","complemento","codigo","validationSchema","object","shape","string","required","date","length","handleSubmit","currentAuthenticatedUser","then","response","console","log","options","body","userdata","attributes","post","APIS","PLAYERSTARS","history","push","user_id","data","catch","error","window","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { API, Auth } from \"aws-amplify\"\n\nimport iconFacebook from '../img/facebook.svg';\nimport iconGoogle from '../img/google_plus.svg';\nimport * as PropTypes from \"prop-types\"\nimport config from \"../../../config/constants\"\nimport {withRouter} from \"react-router-dom\"\n\nimport './styles.scss';\n\nconst estados = [\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MT\", \"MS\",\n  \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\",\n  \"SP\", \"SE\", \"TO\"];\n\n\n  const CadastroForm = (props) => (\n    \n        <section className=\"telaCompleteCadastro\">\n            <div className=\"completeCadastro\">\n                <h3 className=\"titleH3\">Complete seu cadastro</h3>\n                <div className=\"redes-sociais\">\n                    <a href=\"#.com\"><img className=\"facebook-icon\" src={iconFacebook} alt=\"Icone Facebook\" /></a> \n                    <a href=\"#.com\"><img className=\"google-icon\" src={iconGoogle} alt=\"Icone Google plus\" /></a>\n                </div>                 \n                    <Form className=\"dadosPessoais\">\n                        <div className=\"blocoDadosPessoais\">\n                            <h3 className=\"titleH3\">Dados pessoais</h3>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"nome\"/>\n                            <fieldset>\n                                <Field id=\"nome\" type=\"text\" name=\"nome\" required/>\n                                <label className=\"label\" htmlFor=\"nome\">Nome Completo</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"nascimento\"/>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"cpf\"/>\n                            <div className=\"doisCampos\">\n                                <fieldset>\n                                    <Field id=\"nascimento\" type=\"text\" name=\"nascimento\" required/>\n                                    <label className=\"label\" htmlFor=\"nascimento\">Nascimento</label>\n                                </fieldset>\n                                <fieldset>              \n                                    <Field id=\"cpf\" type=\"text\" name=\"cpf\" required/>\n                                    <label className=\"label\" htmlFor=\"cpf\">CPF</label>\n                                </fieldset>\n                            </div>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"email\"/>\n                            <fieldset>\n                                <Field id=\"email\" type=\"text\" name=\"email\" required/>\n                                <label className=\"label\" htmlFor=\"email\">E-mail</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"nickname\"/>\n                            <fieldset>   \n                                <Field id=\"nickname\" type=\"text\" name=\"nickname\" required/>\n                                <label className=\"label\" htmlFor=\"nickname\">nickname</label>\n                            </fieldset>\n                        </div>\n\n                        <div className=\"blocoEnderecoCompleto\">\n                            <h3 className=\"titleH3\">Endereço completo</h3> \n                            <ErrorMessage className=\"error\" component=\"span\" name=\"uf\"/>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"cidade\"/>\n                            <div className=\"doisCampos\">\n                                <fieldset> \n                                    <select id=\"uf\" name=\"uf\" required>\n                                    <option value=\"\">UF</option>\n                                        { estados.map((estado, index) => <option value={ estado } key={ index }>{ estado }</option>) }\n                                    </select> \n                                    <label className=\"label\" htmlFor=\"uf\"/>\n                                </fieldset>\n                                <fieldset>\n                                    <Field id=\"cidade\" type=\"text\" name=\"cidade\" required/>\n                                    <label className=\"label\" htmlFor=\"cidade\">Cidade</label>\n                                </fieldset>\n                            </div>\n\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"bairro\"/>\n                            <fieldset> \n                                <Field id=\"bairro\" type=\"text\" name=\"bairro\" required/>\n                                <label className=\"label\" htmlFor=\"bairro\">Bairro</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"rua\"/>\n                            <fieldset>\n                                <Field id=\"rua\" type=\"text\" name=\"rua\" required/>\n                                <label className=\"label\" htmlFor=\"rua\">Rua</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"numero\"/>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"cep\"/>\n                            <div className=\"doisCampos\">\n                                <fieldset>\n                                    <Field id=\"numero\" type=\"text\" name=\"numero\" required/>\n                                    <label className=\"label\" htmlFor=\"numero\">Numero</label>\n                                </fieldset>\n                                <fieldset>\n                                    <Field id=\"cep\" type=\"text\" name=\"cep\" required/>\n                                    <label className=\"label\" htmlFor=\"cep\">CEP</label>\n                                </fieldset>\n                            </div>\n\n                            <fieldset>\n                                <Field id=\"complemento\" type=\"text\" name=\"complemento\" required/>\n                                <label className=\"label\" htmlFor=\"complemento\">Complemento - <i>opcional</i></label>\n                            </fieldset>\n                        </div>\n\n                        <div>\n                            <h3 className=\"titleH3\">Código Promocional</h3>\n                            <fieldset>\n                                <Field id=\"codigo\" type=\"text\" name=\"codigo\" required/>\n                                <label className=\"label\" htmlFor=\"complemento\">Código - <i>opcional</i></label>\n                            </fieldset>\n                        </div>\n                        <button className=\"continuar\" type=\"submit\">Continuar</button>\n                    </Form>\n            </div>\n        </section>\n    )\n\nCadastroForm.propTypes = {\n    values: PropTypes.any,\n    errors: PropTypes.any\n}\n\nconst FormikForm = withRouter(withFormik({\n    mapPropsToValues({\n      nome,\n      nascimento,\n      cpf,\n      email,\n      nickname,\n      uf,\n      cidade,\n      bairro,\n      rua,\n      numero,\n      cep,\n      complemento,\n      codigo\n    }) {\n      return {\n        nome: nome || '',\n        nascimento: nascimento || '',\n        cpf: cpf || '',\n        email: email || '',\n        nickname: nickname || '',\n        uf: uf || '',\n        cidade: cidade || '',\n        bairro: bairro || '',\n        rua: rua || '',\n        numero: numero || '',\n        cep: cep || '',      \n        complemento: complemento || '',\n        codigo: codigo || ''\n      }\n    },\n    validationSchema: Yup.object().shape({\n            nome: Yup.string().required('Digite seu nome completo!'),\n            nascimento: Yup.date().required('Digite sua data de nascimento!'),\n            cpf: Yup.string().required('Digite seu CPF'),\n            email: Yup.string().required('Digite seu E-mail!'),\n            nickname: Yup.string().required('Digite seu nickname!'),\n            // uf: Yup.string().required('Digite seu estado de origem!'),\n            cidade: Yup.string().required('Digite sua cidade!'),\n            bairro: Yup.string().required('Digite seu bairro!'),\n            rua: Yup.string().required('Digite sua rua!'),\n            numero: Yup.string().required('Digite o número da sua casa!'),\n            cep: Yup.string().length(8).required(\"Campo obrigatório\")\n    }),\n    handleSubmit(values, { props }) {\n      Auth.currentAuthenticatedUser()\n          .then(response => {\n            console.log('Current authenticated user: ', response)\n            const options = {\n              body: {userdata: values, email: response.attributes.email}\n            }\n            API.post(config.APIS.PLAYERSTARS, '/user', options)\n                .then(response => {\n                  console.log('Post bem sucedido. response: ', response)\n                  props.history.push('/console', {user_id: response.data})\n                })\n                .catch(error => {\n                  console.log('Erro postando dados do usuário: ', error)\n                  window.alert('Erro fazendo post dos dados do usuário.')\n                })\n          })\n          .catch(error => {\n              \n          })\n    }\n  })(CadastroForm));\n  \n  export default FormikForm;\n\n"]},"metadata":{},"sourceType":"module"}