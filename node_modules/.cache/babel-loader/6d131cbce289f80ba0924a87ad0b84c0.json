{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/features/LightBox/index.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\n\nconst LightBox = props => {\n  const _props$link = props.link,\n        link = _props$link === void 0 ? \"link\" : _props$link,\n        _props$children = props.children,\n        children = _props$children === void 0 ? \"Texto da lightBox\" : _props$children,\n        _props$btnText = props.btnText,\n        btnText = _props$btnText === void 0 ? \"Texto do botão\" : _props$btnText;\n\n  const _useState = useState({\n    display: \"none\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        scrollBox = _useState4[0],\n        setScrollBox = _useState4[1];\n\n  const on_scroll = s => {\n    const target = s.target;\n\n    if (target.scrollHeight - target.scrollTop === target.clientHeight) {\n      setScrollBox(false);\n    } else if (target.scrollHeight - target.scrollTop !== target.clientHeight) {\n      setScrollBox(true);\n    }\n  };\n\n  const abrir = () => setOpen({\n    display: \"block\"\n  });\n\n  const fechar = () => setOpen({\n    display: \"none\"\n  });\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"link\",\n    onClick: abrir,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"linkStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, link)), React.createElement(\"div\", {\n    style: open,\n    className: \"opacity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: open,\n    className: \"box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"\".concat(scrollBox ? \"text\" : \"textScroll\"),\n    onScroll: on_scroll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, children), React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: fechar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, btnText)));\n};\n\nLightBox.propTypes = {\n  link: PropTypes.string.isRequired,\n  btnText: PropTypes.string\n};\nexport default LightBox;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/features/LightBox/index.js"],"names":["React","useState","PropTypes","LightBox","props","link","children","btnText","display","open","setOpen","scrollBox","setScrollBox","on_scroll","s","target","scrollHeight","scrollTop","clientHeight","abrir","fechar","propTypes","string","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,eAAP;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,sBAKtBA,KALsB,CAExBC,IAFwB;AAAA,QAExBA,IAFwB,4BAEjB,MAFiB;AAAA,0BAKtBD,KALsB,CAGxBE,QAHwB;AAAA,QAGxBA,QAHwB,gCAGb,mBAHa;AAAA,yBAKtBF,KALsB,CAIxBG,OAJwB;AAAA,QAIxBA,OAJwB,+BAId,gBAJc;;AAAA,oBAOFN,QAAQ,CAAC;AAAEO,IAAAA,OAAO,EAAE;AAAX,GAAD,CAPN;AAAA;AAAA,QAOnBC,IAPmB;AAAA,QAObC,OAPa;;AAAA,qBAQQT,QAAQ,CAAC,IAAD,CARhB;AAAA;AAAA,QAQnBU,SARmB;AAAA,QAQRC,YARQ;;AAU1B,QAAMC,SAAS,GAAIC,CAAD,IAAO;AACvB,UAAMC,MAAM,GAAGD,CAAC,CAACC,MAAjB;;AAEA,QAAIA,MAAM,CAACC,YAAP,GAAsBD,MAAM,CAACE,SAA7B,KAA2CF,MAAM,CAACG,YAAtD,EAAoE;AAChEN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFD,MAEO,IAAIG,MAAM,CAACC,YAAP,GAAsBD,MAAM,CAACE,SAA7B,KAA2CF,MAAM,CAACG,YAAtD,EAAoE;AACvEN,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AACJ,GARC;;AAUA,QAAMO,KAAK,GAAG,MAAMT,OAAO,CAAC;AAAEF,IAAAA,OAAO,EAAE;AAAX,GAAD,CAA3B;;AACA,QAAMY,MAAM,GAAG,MAAMV,OAAO,CAAC;AAAEF,IAAAA,OAAO,EAAE;AAAX,GAAD,CAA5B;;AAEA,SACE,0CACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAEW,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Bd,IAA1B,CADF,CADF,EAIE;AAAK,IAAA,KAAK,EAAEI,IAAZ;AAAkB,IAAA,SAAS,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAK,IAAA,KAAK,EAAEA,IAAZ;AAAkB,IAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,YAAKE,SAAS,GAAG,MAAH,GAAY,YAA1B,CAAd;AAAyD,IAAA,QAAQ,EAAEE,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+EP,QAA/E,CADF,EAEE;AAAQ,IAAA,SAAS,EAAC,KAAlB;AAAwB,IAAA,OAAO,EAAEc,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,OADH,CAFF,CALF,CADF;AAcD,CArCD;;AAuCAJ,QAAQ,CAACkB,SAAT,GAAqB;AACnBhB,EAAAA,IAAI,EAAEH,SAAS,CAACoB,MAAV,CAAiBC,UADJ;AAEnBhB,EAAAA,OAAO,EAAEL,SAAS,CAACoB;AAFA,CAArB;AAKA,eAAenB,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./styles.scss\";\n\nconst LightBox = (props) => {\n  const {\n    link = \"link\",\n    children = \"Texto da lightBox\",\n    btnText = \"Texto do botão\",\n  } = props;\n\n  const [open, setOpen] = useState({ display: \"none\" });\n  const [scrollBox, setScrollBox] = useState(true);\n  \n  const on_scroll = (s) => {\n    const target = s.target;\n\n    if (target.scrollHeight - target.scrollTop === target.clientHeight) {\n        setScrollBox(false)\n    } else if (target.scrollHeight - target.scrollTop !== target.clientHeight) {\n        setScrollBox(true)\n    }\n}\n\n  const abrir = () => setOpen({ display: \"block\" });\n  const fechar = () => setOpen({ display: \"none\" });\n\n  return (\n    <>\n      <div className=\"link\" onClick={abrir}>\n        <p className=\"linkStyle\">{link}</p>\n      </div>\n      <div style={open} className=\"opacity\"></div>\n      <div style={open} className=\"box\">\n        <div className={`${scrollBox ? \"text\" : \"textScroll\" }`} onScroll={on_scroll}>{children}</div>\n        <button className=\"btn\" onClick={fechar}>\n          {btnText}\n        </button>\n      </div>\n    </>\n  );\n};\n\nLightBox.propTypes = {\n  link: PropTypes.string.isRequired,\n  btnText: PropTypes.string,\n};\n\nexport default LightBox;\n"]},"metadata":{},"sourceType":"module"}