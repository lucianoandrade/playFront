{"ast":null,"code":"import _defineProperty from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/elements/Select/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport './styles.scss';\n\nfunction SelectField(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedOption = _useState2[0],\n        setSelectedOption = _useState2[1];\n\n  const handleChange = selectedOption => {\n    setSelectedOption(selectedOption);\n    props.onChange(selectedOption);\n  };\n\n  const customStyles = width => ({\n    menu: styles => _objectSpread({}, styles, {\n      backgroundColor: 'white',\n      borderRadius: 'none',\n      position: 'absolute',\n      top: '37px',\n      left: '1px',\n      width: 'calc(100% - 1px)',\n      height: 'fit-content',\n      border: 'none',\n      boxShadow: '0px 1px 6px rgba(0, 0, 0, 0.3)',\n      padding: '5px 0',\n      marginTop: '12px'\n    }),\n    control: styles => _objectSpread({}, styles, {\n      backgroundColor: 'white',\n      width: width,\n      height: '50px',\n      border: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      borderRadius: 'none',\n      padding: '0 4px',\n      boxShadow: '1px 1px 6px 0px rgba(193,193,193,1)',\n      cursor: 'pointer'\n    }),\n    option: (styles, {\n      isFocused,\n      isSelected\n    }) => {\n      return _objectSpread({}, styles, {\n        padding: '10px 16px',\n        backgroundColor: isSelected || isFocused ? '#000' : null,\n        color: isSelected || isFocused ? 'white' : '#505050',\n        ':hover': {\n          backgroundColor: '#000',\n          color: 'white'\n        },\n        fontSize: '14px',\n        cursor: 'pointer'\n      });\n    },\n    indicatorSeparator: styles => _objectSpread({}, styles, {\n      display: 'none'\n    }),\n    placeholder: provided => _objectSpread({}, provided, {\n      fontSize: '14px',\n      color: '#000'\n    }),\n    singleValue: styles => _objectSpread({}, styles, {\n      color: '#505050',\n      fontSize: '14px'\n    })\n  });\n\n  const dropdownIndicatorStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n    marginRight: '10px'\n  };\n  const arrowLineStyleLeft = {\n    display: 'block',\n    width: '10px',\n    height: '1px',\n    backgroundColor: '#787878',\n    transform: 'rotate(45deg)',\n    position: 'relative',\n    left: '2px'\n  };\n  const arrowLineStyleRight = {\n    display: 'block',\n    width: '10px',\n    height: '1px',\n    backgroundColor: '#787878',\n    transform: 'rotate(-45deg)',\n    position: 'relative',\n    right: '1px'\n  };\n\n  const DropdownIndicator = ({\n    innerProps\n  }) => {\n    return React.createElement(\"div\", Object.assign({\n      style: dropdownIndicatorStyle\n    }, innerProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: arrowLineStyleLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: arrowLineStyleRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(Select, {\n    className: props.classNames,\n    value: selectedOption,\n    onChange: handleChange,\n    isSearchable: false,\n    styles: customStyles(props.width),\n    placeholder: props.placeholder,\n    options: props.options,\n    components: {\n      DropdownIndicator\n    },\n    theme: theme => _objectSpread({}, theme, {\n      colors: _objectSpread({}, theme.colors, {\n        primary: 'none'\n      })\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  });\n}\n\n;\nSelectField.propTypes = {\n  className: PropTypes.string,\n  width: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n  options: PropTypes.array.isRequired\n};\nexport default SelectField;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/elements/Select/index.js"],"names":["React","useState","Select","PropTypes","SelectField","props","selectedOption","setSelectedOption","handleChange","onChange","customStyles","width","menu","styles","backgroundColor","borderRadius","position","top","left","height","border","boxShadow","padding","marginTop","control","display","alignItems","cursor","option","isFocused","isSelected","color","fontSize","indicatorSeparator","placeholder","provided","singleValue","dropdownIndicatorStyle","justifyContent","marginRight","arrowLineStyleLeft","transform","arrowLineStyleRight","right","DropdownIndicator","innerProps","classNames","options","theme","colors","primary","propTypes","className","string","isRequired","array"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,eAAP;;AAEA,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AAAA,oBAEmBJ,QAAQ,CAAC,EAAD,CAF3B;AAAA;AAAA,QAElBK,cAFkB;AAAA,QAEFC,iBAFE;;AAIzB,QAAMC,YAAY,GAAGF,cAAc,IAAI;AACnCC,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACAD,IAAAA,KAAK,CAACI,QAAN,CAAeH,cAAf;AACH,GAHD;;AAKA,QAAMI,YAAY,GAAIC,KAAD,KAAY;AAC7BC,IAAAA,IAAI,EAAEC,MAAM,sBACLA,MADK;AAERC,MAAAA,eAAe,EAAE,OAFT;AAGRC,MAAAA,YAAY,EAAE,MAHN;AAIRC,MAAAA,QAAQ,EAAE,UAJF;AAKRC,MAAAA,GAAG,EAAE,MALG;AAMRC,MAAAA,IAAI,EAAE,KANE;AAORP,MAAAA,KAAK,EAAE,kBAPC;AAQRQ,MAAAA,MAAM,EAAE,aARA;AASRC,MAAAA,MAAM,EAAE,MATA;AAURC,MAAAA,SAAS,EAAE,gCAVH;AAWRC,MAAAA,OAAO,EAAE,OAXD;AAYRC,MAAAA,SAAS,EAAE;AAZH,MADiB;AAgB7BC,IAAAA,OAAO,EAAEX,MAAM,sBACRA,MADQ;AAEXC,MAAAA,eAAe,EAAE,OAFN;AAGXH,MAAAA,KAAK,EAAEA,KAHI;AAIXQ,MAAAA,MAAM,EAAE,MAJG;AAKXC,MAAAA,MAAM,EAAE,MALG;AAMXK,MAAAA,OAAO,EAAE,MANE;AAOXC,MAAAA,UAAU,EAAE,QAPD;AAQXX,MAAAA,YAAY,EAAE,MARH;AASXO,MAAAA,OAAO,EAAE,OATE;AAUXD,MAAAA,SAAS,EAAE,qCAVA;AAWXM,MAAAA,MAAM,EAAE;AAXG,MAhBc;AA6B7BC,IAAAA,MAAM,EAAE,CAACf,MAAD,EAAS;AAAEgB,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAT,KAAuC;AAC3C,+BACOjB,MADP;AAEIS,QAAAA,OAAO,EAAE,WAFb;AAGIR,QAAAA,eAAe,EAAEgB,UAAU,IAAID,SAAd,GAA0B,MAA1B,GAAmC,IAHxD;AAIIE,QAAAA,KAAK,EAAED,UAAU,IAAID,SAAd,GAA0B,OAA1B,GAAoC,SAJ/C;AAKI,kBAAU;AACNf,UAAAA,eAAe,EAAE,MADX;AAENiB,UAAAA,KAAK,EAAE;AAFD,SALd;AASIC,QAAAA,QAAQ,EAAE,MATd;AAUIL,QAAAA,MAAM,EAAE;AAVZ;AAYH,KA1C4B;AA2C7BM,IAAAA,kBAAkB,EAAEpB,MAAM,sBACnBA,MADmB;AAEtBY,MAAAA,OAAO,EAAE;AAFa,MA3CG;AA+C7BS,IAAAA,WAAW,EAAGC,QAAD,sBACNA,QADM;AAETH,MAAAA,QAAQ,EAAE,MAFD;AAGTD,MAAAA,KAAK,EAAE;AAHE,MA/CgB;AAoD7BK,IAAAA,WAAW,EAAEvB,MAAM,sBACZA,MADY;AAEfkB,MAAAA,KAAK,EAAE,SAFQ;AAGfC,MAAAA,QAAQ,EAAE;AAHK;AApDU,GAAZ,CAArB;;AA2DA,QAAMK,sBAAsB,GAAG;AAC3BZ,IAAAA,OAAO,EAAE,MADkB;AAE3Ba,IAAAA,cAAc,EAAE,QAFW;AAG3BZ,IAAAA,UAAU,EAAE,QAHe;AAI3BV,IAAAA,QAAQ,EAAE,UAJiB;AAK3BuB,IAAAA,WAAW,EAAE;AALc,GAA/B;AAQA,QAAMC,kBAAkB,GAAG;AACvBf,IAAAA,OAAO,EAAE,OADc;AAEvBd,IAAAA,KAAK,EAAE,MAFgB;AAGvBQ,IAAAA,MAAM,EAAE,KAHe;AAIvBL,IAAAA,eAAe,EAAE,SAJM;AAKvB2B,IAAAA,SAAS,EAAE,eALY;AAMvBzB,IAAAA,QAAQ,EAAE,UANa;AAOvBE,IAAAA,IAAI,EAAE;AAPiB,GAA3B;AAUA,QAAMwB,mBAAmB,GAAG;AACxBjB,IAAAA,OAAO,EAAE,OADe;AAExBd,IAAAA,KAAK,EAAE,MAFiB;AAGxBQ,IAAAA,MAAM,EAAE,KAHgB;AAIxBL,IAAAA,eAAe,EAAE,SAJO;AAKxB2B,IAAAA,SAAS,EAAE,gBALa;AAMxBzB,IAAAA,QAAQ,EAAE,UANc;AAOxB2B,IAAAA,KAAK,EAAE;AAPiB,GAA5B;;AAUA,QAAMC,iBAAiB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAoB;AAC1C,WACI;AAAK,MAAA,KAAK,EAAER;AAAZ,OAAwCQ,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACI;AAAM,MAAA,KAAK,EAAEL,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAM,MAAA,KAAK,EAAEE,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH,GAPD;;AASA,SACI,oBAAC,MAAD;AACI,IAAA,SAAS,EAAErC,KAAK,CAACyC,UADrB;AAEI,IAAA,KAAK,EAAIxC,cAFb;AAGI,IAAA,QAAQ,EAAIE,YAHhB;AAII,IAAA,YAAY,EAAI,KAJpB;AAKI,IAAA,MAAM,EAAIE,YAAY,CAACL,KAAK,CAACM,KAAP,CAL1B;AAMI,IAAA,WAAW,EAAIN,KAAK,CAAC6B,WANzB;AAOI,IAAA,OAAO,EAAI7B,KAAK,CAAC0C,OAPrB;AAQI,IAAA,UAAU,EAAE;AAAEH,MAAAA;AAAF,KARhB;AASI,IAAA,KAAK,EAAII,KAAK,sBACPA,KADO;AAEVC,MAAAA,MAAM,oBACCD,KAAK,CAACC,MADP;AAEFC,QAAAA,OAAO,EAAE;AAFP;AAFI,MATlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAmBH;;AAAA;AAED9C,WAAW,CAAC+C,SAAZ,GAAwB;AACpBC,EAAAA,SAAS,EAAEjD,SAAS,CAACkD,MADD;AAEpB1C,EAAAA,KAAK,EAAER,SAAS,CAACkD,MAFG;AAGpBnB,EAAAA,WAAW,EAAE/B,SAAS,CAACkD,MAAV,CAAiBC,UAHV;AAIpBP,EAAAA,OAAO,EAAE5C,SAAS,CAACoD,KAAV,CAAgBD;AAJL,CAAxB;AAOA,eAAelD,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nfunction SelectField (props) {\n\n    const [selectedOption, setSelectedOption] = useState('');\n\n    const handleChange = selectedOption => {\n        setSelectedOption(selectedOption);\n        props.onChange(selectedOption)\n    };\n\n    const customStyles = (width) => ({\n        menu: styles => ({\n            ...styles,\n            backgroundColor: 'white',\n            borderRadius: 'none',\n            position: 'absolute',\n            top: '37px',\n            left: '1px',\n            width: 'calc(100% - 1px)',\n            height: 'fit-content',\n            border: 'none',\n            boxShadow: '0px 1px 6px rgba(0, 0, 0, 0.3)',\n            padding: '5px 0',\n            marginTop: '12px'\n\n        }),\n        control: styles => ({ \n            ...styles, \n            backgroundColor: 'white',\n            width: width,\n            height: '50px',\n            border: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            borderRadius: 'none',\n            padding: '0 4px',\n            boxShadow: '1px 1px 6px 0px rgba(193,193,193,1)',\n            cursor: 'pointer'\n        }),\n        option: (styles, { isFocused, isSelected }) => {\n            return {\n                ...styles,\n                padding: '10px 16px',\n                backgroundColor: isSelected || isFocused ? '#000' : null,\n                color: isSelected || isFocused ? 'white' : '#505050',\n                ':hover': {\n                    backgroundColor: '#000',\n                    color: 'white',\n                },\n                fontSize: '14px',\n                cursor: 'pointer'\n            };\n        },\n        indicatorSeparator: styles => ({\n            ...styles,\n            display: 'none'\n        }),\n        placeholder: (provided) => ({\n            ...provided,\n            fontSize: '14px',\n            color: '#000',\n        }),\n        singleValue: styles => ({\n            ...styles,\n            color: '#505050',\n            fontSize: '14px'\n        })\n    });\n\n    const dropdownIndicatorStyle = {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative',\n        marginRight: '10px'\n    };\n\n    const arrowLineStyleLeft = {\n        display: 'block',\n        width: '10px',\n        height: '1px',\n        backgroundColor: '#787878',\n        transform: 'rotate(45deg)',\n        position: 'relative',\n        left: '2px'\n    };\n\n    const arrowLineStyleRight = {\n        display: 'block',\n        width: '10px',\n        height: '1px',\n        backgroundColor: '#787878',\n        transform: 'rotate(-45deg)',\n        position: 'relative',\n        right: '1px'\n    };\n\n    const DropdownIndicator = ({ innerProps }) => {\n        return (\n            <div style={dropdownIndicatorStyle} {...innerProps}>\n                <span style={arrowLineStyleLeft} />\n                <span style={arrowLineStyleRight} />\n            </div>\n        );\n    };\n        \n    return (\n        <Select\n            className={props.classNames}\n            value = {selectedOption}\n            onChange = {handleChange}\n            isSearchable = {false}\n            styles = {customStyles(props.width)}\n            placeholder = {props.placeholder}\n            options = {props.options}\n            components={{ DropdownIndicator }}\n            theme = {theme => ({\n                ...theme,\n                colors: {\n                    ...theme.colors,\n                    primary: 'none'\n                }\n            })}\n        />\n    );\n};\n\nSelectField.propTypes = {\n    className: PropTypes.string,\n    width: PropTypes.string,\n    placeholder: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n};\n\nexport default SelectField;"]},"metadata":{},"sourceType":"module"}