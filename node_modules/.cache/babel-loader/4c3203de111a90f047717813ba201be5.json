{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/DadosUsuario/index.js\";\nimport React from 'react';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport BrDate from \"../../FormikBrDate/formik_br_date\";\nimport { Auth } from \"aws-amplify\";\nimport * as PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport './styles.scss';\nimport TimelineCadastro from '../TimelineCadastro';\nimport MaskedInput from 'react-text-mask';\nconst estados = [\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MT\", \"MS\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SP\", \"SE\", \"TO\"];\n\nconst CadastroForm = props => React.createElement(React.Fragment, null, React.createElement(TimelineCadastro, {\n  current: 2,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(\"section\", {\n  className: \"telaCompleteCadastro\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"completeCadastro\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(Form, {\n  className: \"dadosPessoais\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"blocoDadosPessoais\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  className: \"titleH3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"Dados pessoais\"), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"nome\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"nome\",\n  type: \"text\",\n  name: \"nome\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"nome\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"Nome completo\")), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"nascimento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"cpf\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"doisCampos\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, React.createElement(MaskedInput, {\n  mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n  id: \"nascimento\",\n  type: \"text\",\n  name: \"nascimento\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"nascimento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, \"Nascimento\")), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"cpf\",\n  type: \"text\",\n  name: \"cpf\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"cpf\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"CPF\"))), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"email\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, React.createElement(MaskedInput, {\n  mask: ['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n  id: \"tel\",\n  type: \"text\",\n  name: \"tel\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"tel\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, \"(DDD) Telefone\")), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"nickname\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"nickname\",\n  type: \"text\",\n  name: \"nickname\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"nickname\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \"Nickname\"))), React.createElement(\"div\", {\n  className: \"blocoEnderecoCompleto\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  className: \"titleH3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62\n  },\n  __self: this\n}, \"Endere\\xE7o completo\"), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"uf\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"cidade\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"doisCampos\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"uf\",\n  name: \"estado\",\n  required: true,\n  component: \"select\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n}, React.createElement(\"option\", {\n  value: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, \"UF\"), estados.map((estado, index) => React.createElement(\"option\", {\n  value: estado,\n  key: index,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, estado))), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"uf\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n})), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"cidade\",\n  type: \"text\",\n  name: \"cidade\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"cidade\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, \"Cidade\"))), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"bairro\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"bairro\",\n  type: \"text\",\n  name: \"bairro\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"bairro\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, \"Bairro\")), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"rua\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"rua\",\n  type: \"text\",\n  name: \"rua\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"rua\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, \"Rua\")), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"numero\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 89\n  },\n  __self: this\n}), React.createElement(ErrorMessage, {\n  className: \"error\",\n  component: \"span\",\n  name: \"cep\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"doisCampos\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"numero\",\n  type: \"text\",\n  name: \"numero\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"numero\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, \"Numero\")), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"cep\",\n  type: \"text\",\n  name: \"cep\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"cep\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, \"CEP\"))), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"complemento\",\n  type: \"text\",\n  name: \"complemento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"complemento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, \"Complemento - \", React.createElement(\"i\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, \"opcional\")))), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, React.createElement(\"h3\", {\n  className: \"titleH3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110\n  },\n  __self: this\n}, \"C\\xF3digo Promocional\"), React.createElement(\"fieldset\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}, React.createElement(Field, {\n  id: \"codigo\",\n  type: \"text\",\n  name: \"codigo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}), React.createElement(\"label\", {\n  className: \"label\",\n  htmlFor: \"complemento\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}, \"C\\xF3digo - \", React.createElement(\"i\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113\n  },\n  __self: this\n}, \"opcional\")))), React.createElement(\"button\", {\n  className: \"continuar\",\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}, \"Continuar\")))));\n\nCadastroForm.propTypes = {\n  values: PropTypes.any,\n  errors: PropTypes.any\n};\nconst FormikForm = withRouter(withFormik({\n  mapPropsToValues({\n    nome,\n    nascimento,\n    cpf,\n    tel,\n    nickname,\n    estado,\n    cidade,\n    bairro,\n    rua,\n    numero,\n    cep,\n    complemento,\n    codigo\n  }) {\n    return {\n      nome: nome || '',\n      nascimento: nascimento || '',\n      cpf: cpf || '',\n      tel: tel || '',\n      nickname: nickname || '',\n      estado: estado || '',\n      cidade: cidade || '',\n      bairro: bairro || '',\n      rua: rua || '',\n      numero: numero || '',\n      cep: cep || '',\n      complemento: complemento || '',\n      codigo: codigo || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    nome: Yup.string().required('Digite seu nome completo!'),\n    nascimento: BrDate.required('Digite sua data de nascimento!'),\n    cpf: Yup.string().required('Digite seu CPF'),\n    tel: Yup.string().required('Digite seu telefone!'),\n    nickname: Yup.string().required('Digite seu nickname!'),\n    estado: Yup.string().required('Digite seu estado de origem!'),\n    cidade: Yup.string().required('Digite sua cidade!'),\n    bairro: Yup.string().required('Digite seu bairro!'),\n    rua: Yup.string().required('Digite sua rua!'),\n    numero: Yup.string().required('Digite o número da sua casa!'),\n    cep: Yup.string().length(8).required(\"Campo obrigatório\")\n  }),\n\n  handleSubmit(values, {\n    props\n  }) {\n    Auth.currentAuthenticatedUser().then(response => {\n      console.log(\"Esses são as Props recebidas de codigo de confirmação: \", props.history);\n      console.log('Current authenticated user: ', response);\n      props.history.push('/console', {\n        user: values\n      });\n    }).catch(error => {\n      console.log(\"erro obtendo usuario atual\", error);\n    });\n  }\n\n})(CadastroForm));\nexport default FormikForm;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/DadosUsuario/index.js"],"names":["React","withFormik","Form","Field","ErrorMessage","Yup","BrDate","Auth","PropTypes","withRouter","TimelineCadastro","MaskedInput","estados","CadastroForm","props","map","estado","index","propTypes","values","any","errors","FormikForm","mapPropsToValues","nome","nascimento","cpf","tel","nickname","cidade","bairro","rua","numero","cep","complemento","codigo","validationSchema","object","shape","string","required","length","handleSubmit","currentAuthenticatedUser","then","response","console","log","history","push","user","catch","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,YAAlC,QAAsD,QAAtD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAO,eAAP;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAEA,MAAMC,OAAO,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAmE,IAAnE,EACd,IADc,EACR,IADQ,EACF,IADE,EACI,IADJ,EACU,IADV,EACgB,IADhB,EACsB,IADtB,EAC4B,IAD5B,EACkC,IADlC,EACwC,IADxC,EAC8C,IAD9C,EACoD,IADpD,EAEd,IAFc,EAER,IAFQ,EAEF,IAFE,CAAhB;;AAKE,MAAMC,YAAY,GAAIC,KAAD,IACnB,0CACI,oBAAC,gBAAD;AAAkB,EAAA,OAAO,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAS,EAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACQ,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAI,EAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,MAAV;AAAiB,EAAA,IAAI,EAAC,MAAtB;AAA6B,EAAA,IAAI,EAAC,MAAlC;AAAyC,EAAA,QAAQ,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAHJ,EAOI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPJ,EAQI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EARJ,EASI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,WAAD;AAAa,EAAA,IAAI,EAAE,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,IAArB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,GAA7D,EAAkE,IAAlE,EAAwE,IAAxE,EAA8E,IAA9E,EAAoF,IAApF,CAAnB;AACA,EAAA,EAAE,EAAC,YADH;AAEA,EAAA,IAAI,EAAC,MAFL;AAGA,EAAA,IAAI,EAAC,YAHL;AAGkB,EAAA,QAAQ,MAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAKI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,KAAV;AAAgB,EAAA,IAAI,EAAC,MAArB;AAA4B,EAAA,IAAI,EAAC,KAAjC;AAAuC,EAAA,QAAQ,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CARJ,CATJ,EAsBI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAtBJ,EAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,WAAD;AAAa,EAAA,IAAI,EAAE,CAAC,GAAD,EAAM,OAAN,EAAe,IAAf,EAAqB,IAArB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD,EAA4D,IAA5D,EAAmE,GAAnE,EAAwE,IAAxE,EAA8E,IAA9E,EAAoF,IAApF,EAA0F,IAA1F,CAAnB;AACA,EAAA,EAAE,EAAC,KADH;AAEA,EAAA,IAAI,EAAC,MAFL;AAGA,EAAA,IAAI,EAAC,KAHL;AAGW,EAAA,QAAQ,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAKI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,CAvBJ,EA8BI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA9BJ,EA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,UAAV;AAAqB,EAAA,IAAI,EAAC,MAA1B;AAAiC,EAAA,IAAI,EAAC,UAAtC;AAAiD,EAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CA/BJ,CADJ,EAsCI;AAAK,EAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAI,EAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,EAGI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,EAII;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,IAAV;AAAe,EAAA,IAAI,EAAC,QAApB;AAA6B,EAAA,QAAQ,MAArC;AAAsC,EAAA,SAAS,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAQ,EAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEMF,OAAO,CAACG,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,KAAmB;AAAQ,EAAA,KAAK,EAAGD,MAAhB;AAAyB,EAAA,GAAG,EAAGC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyCD,MAAzC,CAA/B,CAFN,CADJ,EAKI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,CADJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,QAAV;AAAmB,EAAA,IAAI,EAAC,MAAxB;AAA+B,EAAA,IAAI,EAAC,QAApC;AAA6C,EAAA,QAAQ,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CARJ,CAJJ,EAkBI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAlBJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,QAAV;AAAmB,EAAA,IAAI,EAAC,MAAxB;AAA+B,EAAA,IAAI,EAAC,QAApC;AAA6C,EAAA,QAAQ,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CAnBJ,EAuBI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAvBJ,EAwBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,KAAV;AAAgB,EAAA,IAAI,EAAC,MAArB;AAA4B,EAAA,IAAI,EAAC,KAAjC;AAAuC,EAAA,QAAQ,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CAxBJ,EA4BI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA5BJ,EA8BI,oBAAC,YAAD;AAAc,EAAA,SAAS,EAAC,OAAxB;AAAgC,EAAA,SAAS,EAAC,MAA1C;AAAiD,EAAA,IAAI,EAAC,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA9BJ,EA+BI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,QAAV;AAAmB,EAAA,IAAI,EAAC,MAAxB;AAA+B,EAAA,IAAI,EAAC,QAApC;AAA6C,EAAA,QAAQ,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,KAAV;AAAgB,EAAA,IAAI,EAAC,MAArB;AAA4B,EAAA,IAAI,EAAC,KAAjC;AAAuC,EAAA,QAAQ,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CALJ,CA/BJ,EA0CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,aAAV;AAAwB,EAAA,IAAI,EAAC,MAA7B;AAAoC,EAAA,IAAI,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA7D,CAFJ,CA1CJ,CAtCJ,EAsFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAI,EAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,EAAE,EAAC,QAAV;AAAmB,EAAA,IAAI,EAAC,MAAxB;AAA+B,EAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAO,EAAA,SAAS,EAAC,OAAjB;AAAyB,EAAA,OAAO,EAAC,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxD,CAFJ,CAFJ,CAtFJ,EA6FI;AAAQ,EAAA,SAAS,EAAC,WAAlB;AAA8B,EAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA7FJ,CADR,CADJ,CAFJ,CADF;;AAyGFH,YAAY,CAACK,SAAb,GAAyB;AACrBC,EAAAA,MAAM,EAAEX,SAAS,CAACY,GADG;AAErBC,EAAAA,MAAM,EAAEb,SAAS,CAACY;AAFG,CAAzB;AAKA,MAAME,UAAU,GAAGb,UAAU,CAACR,UAAU,CAAC;AACrCsB,EAAAA,gBAAgB,CAAC;AACfC,IAAAA,IADe;AAEfC,IAAAA,UAFe;AAGfC,IAAAA,GAHe;AAIfC,IAAAA,GAJe;AAKfC,IAAAA,QALe;AAMfZ,IAAAA,MANe;AAOfa,IAAAA,MAPe;AAQfC,IAAAA,MARe;AASfC,IAAAA,GATe;AAUfC,IAAAA,MAVe;AAWfC,IAAAA,GAXe;AAYfC,IAAAA,WAZe;AAafC,IAAAA;AAbe,GAAD,EAcb;AACD,WAAO;AACLX,MAAAA,IAAI,EAAEA,IAAI,IAAI,EADT;AAELC,MAAAA,UAAU,EAAEA,UAAU,IAAI,EAFrB;AAGLC,MAAAA,GAAG,EAAEA,GAAG,IAAI,EAHP;AAILC,MAAAA,GAAG,EAAEA,GAAG,IAAI,EAJP;AAKLC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EALjB;AAMLZ,MAAAA,MAAM,EAAEA,MAAM,IAAI,EANb;AAOLa,MAAAA,MAAM,EAAEA,MAAM,IAAI,EAPb;AAQLC,MAAAA,MAAM,EAAEA,MAAM,IAAI,EARb;AASLC,MAAAA,GAAG,EAAEA,GAAG,IAAI,EATP;AAULC,MAAAA,MAAM,EAAEA,MAAM,IAAI,EAVb;AAWLC,MAAAA,GAAG,EAAEA,GAAG,IAAI,EAXP;AAYLC,MAAAA,WAAW,EAAEA,WAAW,IAAI,EAZvB;AAaLC,MAAAA,MAAM,EAAEA,MAAM,IAAI;AAbb,KAAP;AAeD,GA/BoC;;AAgCrCC,EAAAA,gBAAgB,EAAE/B,GAAG,CAACgC,MAAJ,GAAaC,KAAb,CAAmB;AAC7Bd,IAAAA,IAAI,EAAEnB,GAAG,CAACkC,MAAJ,GAAaC,QAAb,CAAsB,2BAAtB,CADuB;AAE7Bf,IAAAA,UAAU,EAAEnB,MAAM,CAACkC,QAAP,CAAgB,gCAAhB,CAFiB;AAG7Bd,IAAAA,GAAG,EAAErB,GAAG,CAACkC,MAAJ,GAAaC,QAAb,CAAsB,gBAAtB,CAHwB;AAI7Bb,IAAAA,GAAG,EAAEtB,GAAG,CAACkC,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CAJwB;AAK7BZ,IAAAA,QAAQ,EAAEvB,GAAG,CAACkC,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CALmB;AAM7BxB,IAAAA,MAAM,EAAEX,GAAG,CAACkC,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB,CANqB;AAO7BX,IAAAA,MAAM,EAAExB,GAAG,CAACkC,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,CAPqB;AAQ7BV,IAAAA,MAAM,EAAEzB,GAAG,CAACkC,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB,CARqB;AAS7BT,IAAAA,GAAG,EAAE1B,GAAG,CAACkC,MAAJ,GAAaC,QAAb,CAAsB,iBAAtB,CATwB;AAU7BR,IAAAA,MAAM,EAAE3B,GAAG,CAACkC,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB,CAVqB;AAW7BP,IAAAA,GAAG,EAAE5B,GAAG,CAACkC,MAAJ,GAAaE,MAAb,CAAoB,CAApB,EAAuBD,QAAvB,CAAgC,mBAAhC;AAXwB,GAAnB,CAhCmB;;AA6CrCE,EAAAA,YAAY,CAACvB,MAAD,EAAS;AAAEL,IAAAA;AAAF,GAAT,EAAoB;AAC9BP,IAAAA,IAAI,CAACoC,wBAAL,GACKC,IADL,CACUC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yDAAZ,EAAuEjC,KAAK,CAACkC,OAA7E;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,QAA5C;AACA/B,MAAAA,KAAK,CAACkC,OAAN,CAAcC,IAAd,CAAmB,UAAnB,EAA+B;AAACC,QAAAA,IAAI,EAAE/B;AAAP,OAA/B;AAED,KANL,EAOKgC,KAPL,CAOWC,KAAK,IAAI;AACZN,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA2CK,KAA3C;AACH,KATL;AAUD;;AAxDoC,CAAD,CAAV,CAyDzBvC,YAzDyB,CAAD,CAA7B;AA2DE,eAAeS,UAAf","sourcesContent":["import React from 'react';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport BrDate from \"../../FormikBrDate/formik_br_date\"\nimport { Auth } from \"aws-amplify\"\n\nimport * as PropTypes from \"prop-types\"\nimport {withRouter} from \"react-router-dom\"\nimport './styles.scss';\nimport TimelineCadastro from '../TimelineCadastro';\nimport MaskedInput from 'react-text-mask'\n\nconst estados = [\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MT\", \"MS\",\n  \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\",\n  \"SP\", \"SE\", \"TO\"];\n\n\n  const CadastroForm = (props) => (\n    <>\n        <TimelineCadastro current={2} />\n        <section className=\"telaCompleteCadastro\">\n            <div className=\"completeCadastro\">\n                    <Form className=\"dadosPessoais\">\n                        <div className=\"blocoDadosPessoais\">\n                            <h3 className=\"titleH3\">Dados pessoais</h3>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"nome\"/>\n                            <fieldset>\n                                <Field id=\"nome\" type=\"text\" name=\"nome\" required/>\n                                <label className=\"label\" htmlFor=\"nome\">Nome completo</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"nascimento\"/>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"cpf\"/>\n                            <div className=\"doisCampos\">\n                                <fieldset>\n                                    <MaskedInput mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]} \n                                    id=\"nascimento\" \n                                    type=\"text\" \n                                    name=\"nascimento\" required/>\n                                    <label className=\"label\" htmlFor=\"nascimento\">Nascimento</label>\n                                </fieldset>\n                                <fieldset>              \n                                    <Field id=\"cpf\" type=\"text\" name=\"cpf\" required/>\n                                    <label className=\"label\" htmlFor=\"cpf\">CPF</label>\n                                </fieldset>\n                            </div>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"email\"/>\n                            <fieldset>\n                                <MaskedInput mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/,/\\d/,  '-', /\\d/, /\\d/, /\\d/, /\\d/]} \n                                id=\"tel\" \n                                type=\"text\" \n                                name=\"tel\" required/>\n                                <label className=\"label\" htmlFor=\"tel\">(DDD) Telefone</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"nickname\"/>\n                            <fieldset>   \n                                <Field id=\"nickname\" type=\"text\" name=\"nickname\" required/>\n                                <label className=\"label\" htmlFor=\"nickname\">Nickname</label>\n                            </fieldset>\n                        </div>\n\n                        <div className=\"blocoEnderecoCompleto\">\n                            <h3 className=\"titleH3\">Endereço completo</h3> \n                            <ErrorMessage className=\"error\" component=\"span\" name=\"uf\"/>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"cidade\"/>\n                            <div className=\"doisCampos\">\n                                <fieldset> \n                                    <Field id=\"uf\" name=\"estado\" required component=\"select\">\n                                    <option value=\"\">UF</option>\n                                        { estados.map((estado, index) => <option value={ estado } key={ index }>{ estado }</option>) }\n                                    </Field>\n                                    <label className=\"label\" htmlFor=\"uf\"/>\n                                </fieldset>\n                                <fieldset>\n                                    <Field id=\"cidade\" type=\"text\" name=\"cidade\" required/>\n                                    <label className=\"label\" htmlFor=\"cidade\">Cidade</label>\n                                </fieldset>\n                            </div>\n\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"bairro\"/>\n                            <fieldset> \n                                <Field id=\"bairro\" type=\"text\" name=\"bairro\" required/>\n                                <label className=\"label\" htmlFor=\"bairro\">Bairro</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"rua\"/>\n                            <fieldset>\n                                <Field id=\"rua\" type=\"text\" name=\"rua\" required/>\n                                <label className=\"label\" htmlFor=\"rua\">Rua</label>\n                            </fieldset>\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"numero\"/>\n\n                            <ErrorMessage className=\"error\" component=\"span\" name=\"cep\"/>\n                            <div className=\"doisCampos\">\n                                <fieldset>\n                                    <Field id=\"numero\" type=\"text\" name=\"numero\" required/>\n                                    <label className=\"label\" htmlFor=\"numero\">Numero</label>\n                                </fieldset>\n                                <fieldset>\n                                    <Field id=\"cep\" type=\"text\" name=\"cep\" required/>\n                                    <label className=\"label\" htmlFor=\"cep\">CEP</label>\n                                </fieldset>\n                            </div>\n\n                            <fieldset>\n                                <Field id=\"complemento\" type=\"text\" name=\"complemento\" />\n                                <label className=\"label\" htmlFor=\"complemento\">Complemento - <i>opcional</i></label>\n                            </fieldset>\n                        </div>\n\n                        <div>\n                            <h3 className=\"titleH3\">Código Promocional</h3>\n                            <fieldset>\n                                <Field id=\"codigo\" type=\"text\" name=\"codigo\" />\n                                <label className=\"label\" htmlFor=\"complemento\">Código - <i>opcional</i></label>\n                            </fieldset>\n                        </div>\n                        <button className=\"continuar\" type=\"submit\">Continuar</button>\n                    </Form>\n            </div>\n        </section>\n    </>\n    )\n\nCadastroForm.propTypes = {\n    values: PropTypes.any,\n    errors: PropTypes.any\n}\n\nconst FormikForm = withRouter(withFormik({\n    mapPropsToValues({\n      nome,\n      nascimento,\n      cpf,\n      tel,\n      nickname,\n      estado,\n      cidade,\n      bairro,\n      rua,\n      numero,\n      cep,\n      complemento,\n      codigo\n    }) {\n      return {\n        nome: nome || '',\n        nascimento: nascimento || '',\n        cpf: cpf || '',\n        tel: tel || '',\n        nickname: nickname || '',\n        estado: estado || '',\n        cidade: cidade || '',\n        bairro: bairro || '',\n        rua: rua || '',\n        numero: numero || '',\n        cep: cep || '',      \n        complemento: complemento || '',\n        codigo: codigo || ''\n      }\n    },\n    validationSchema: Yup.object().shape({\n            nome: Yup.string().required('Digite seu nome completo!'),\n            nascimento: BrDate.required('Digite sua data de nascimento!'),\n            cpf: Yup.string().required('Digite seu CPF'),\n            tel: Yup.string().required('Digite seu telefone!'),\n            nickname: Yup.string().required('Digite seu nickname!'),\n            estado: Yup.string().required('Digite seu estado de origem!'),\n            cidade: Yup.string().required('Digite sua cidade!'),\n            bairro: Yup.string().required('Digite seu bairro!'),\n            rua: Yup.string().required('Digite sua rua!'),\n            numero: Yup.string().required('Digite o número da sua casa!'),\n            cep: Yup.string().length(8).required(\"Campo obrigatório\")\n    }),\n    handleSubmit(values, { props }) {\n      Auth.currentAuthenticatedUser()\n          .then(response => {\n            console.log(\"Esses são as Props recebidas de codigo de confirmação: \", props.history)\n            console.log('Current authenticated user: ', response)\n            props.history.push('/console', {user: values})\n        \n          })\n          .catch(error => {\n              console.log(\"erro obtendo usuario atual\" , error)\n          })\n    }\n  })(CadastroForm));\n  \n  export default FormikForm;\n\n"]},"metadata":{},"sourceType":"module"}