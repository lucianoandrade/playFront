{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Perfil/EditarConsoles/index.js\";\n// import React, { useState, useEffect } from 'react';\n// import { API } from \"aws-amplify\"\n// import config from \"../../../config/constants\"\n// function EditarConsoles() {\n//     const [userConsole, setUserConsole] = useState('');\n//     useEffect(() => {\n//         API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile')\n//             .then(response => {\n//                 console.log(\"ESSE E O RESPONSE\", response.data.player.consoles)\n//                 setUserConsole(response.data.player.consoles);\n//             })\n//             .catch(error => {\n//                 console.log(\"ERRO NO GET: \", error)\n//             })\n//     }, []);\n//   return (\n//     <section className=\"containerEditConsole\">\n//         <div className=\"contentEditConsole\">\n//             <h2 className=\"titleEditConsole\">Editar plataformas</h2>\n//             <p>Quais plataformas vocÃª usa?</p>\n//         </div>\n//     </section>\n//   );\n// }\n// export default EditarConsoles;\nimport React, { useState, useEffect } from 'react';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport config from '../../../config/constants';\nimport { API } from \"aws-amplify\";\nimport BrDate from '../../FormikBrDate/formik_br_date';\nimport MaskedInput from 'react-text-mask';\nimport { setUserImage } from \"../../../store/actions/user.action\";\nimport iconremove from '../img/icon-remove.png';\nimport iconedit from '../img/editar-perfil.png';\n\nfunction EditarPerfil(props) {\n  const dispatch = useDispatch();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        thumbnailFile = _useState2[0],\n        setThumbnailFile = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        preview = _useState4[0],\n        setPreview = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        user = _useState6[0],\n        setUser = _useState6[1];\n\n  const userOld = useSelector(state => state.user.data.user);\n  const avataruser = \"https://playerstars-dev-photos.s3.amazonaws.com/WhatsApp+Image+2020-01-14+at+18.07.32.jpeg\";\n  const profile_image = userOld ? userOld.profile_image : avataruser;\n  useEffect(() => {\n    setPreview(thumbnailFile ? URL.createObjectURL(thumbnailFile) : profile_image);\n  }, [thumbnailFile, profile_image]);\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile').then(response => {\n      setUser(response.data.player.user);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \", error);\n    });\n  }, []);\n  useEffect(() => {\n    props.setValues(userOld); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userOld]);\n\n  const removePreview = () => {\n    setThumbnailFile(\"\");\n    dispatch(setUserImage(avataruser));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: \"containerEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titleEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Editar Perfil\"), React.createElement(\"div\", {\n    className: \"containerEditAvatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerAvatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: \"url(\".concat(preview, \"?\").concat(Date.now(), \")\")\n    },\n    className: \"thumbnail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerEditRemove\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"containerPutAvatar\",\n    onClick: removePreview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"iconEdit\",\n    src: iconremove,\n    alt: \"Icon remover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"textEdit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Excluir\")))), EditForm(user))));\n}\n\nconst estados = [\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MT\", \"MS\", \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\", \"SP\", \"SE\", \"TO\"];\n\nfunction EditForm() {\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        redirect = _useState8[0],\n        setRedirect = _useState8[1];\n\n  return React.createElement(React.Fragment, null, redirect && React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(Form, {\n    className: \"dadosPessoais\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"blocoDadosPessoais\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"titleH3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Dados pessoais\"), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"nome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"nome\",\n    type: \"text\",\n    name: \"name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"nome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Nome completo\")), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"nascimento\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"doisCampos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"date_birth\",\n    render: ({\n      field\n    }) => {\n      return React.createElement(MaskedInput, Object.assign({\n        mask: [/[0-9]/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]\n      }, field, {\n        id: \"nascimento\",\n        type: \"text\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"nascimento\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Nascimento\")), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"nickname\",\n    type: \"text\",\n    name: \"nickname\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Nickname\")))), React.createElement(\"div\", {\n    className: \"blocoEnderecoCompleto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"titleH3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Endere\\xE7o completo\"), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"uf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"cidade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"doisCampos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"uf\",\n    name: \"state\",\n    required: true,\n    component: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"UF\"), estados.map((estado, index) => React.createElement(\"option\", {\n    value: estado,\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, estado))), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"uf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"cidade\",\n    type: \"text\",\n    name: \"city\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"cidade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Cidade\"))), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"bairro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"bairro\",\n    type: \"text\",\n    name: \"neighborhood\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"bairro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"Bairro\")), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"rua\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"rua\",\n    type: \"text\",\n    name: \"street\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"rua\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Rua\")), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"numero\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"cep\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"doisCampos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"numero\",\n    type: \"text\",\n    name: \"street_number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"numero\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"N\\xFAmero\")), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"postal_code\",\n    render: ({\n      field\n    }) => {\n      return React.createElement(MaskedInput, Object.assign({\n        mask: [/[0-9]/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]\n      }, field, {\n        id: \"cep\",\n        type: \"text\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"cep\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"CEP\"))), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"complemento\",\n    type: \"text\",\n    name: \"street_complement\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"complemento\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"Complemento - \", React.createElement(\"i\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"opcional\"))), React.createElement(\"div\", {\n    className: \"containerBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btnCancel\",\n    type: \"button\",\n    onClick: () => setRedirect(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Cancelar\"), React.createElement(\"button\", {\n    className: \"btnSave\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Salvar altera\\xE7\\xF5es\")))));\n}\n\nconst SaveEdit = withRouter(withFormik({\n  mapPropsToValues({\n    name,\n    date_birth,\n    nickname,\n    state,\n    city,\n    neighborhood,\n    street,\n    street_number,\n    postal_code,\n    street_complement,\n    profile_image\n  }) {\n    return {\n      name: name || '',\n      date_birth: date_birth || '',\n      nickname: nickname || '',\n      state: state || '',\n      city: city || '',\n      neighborhood: neighborhood || '',\n      street: street || '',\n      street_number: street_number || '',\n      postal_code: postal_code || '',\n      street_complement: street_complement || '',\n      profile_image: profile_image || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Digite seu nome completo!'),\n    date_birth: BrDate.required('Digite sua data de nascimento!'),\n    nickname: Yup.string().required('Digite seu nickname!'),\n    state: Yup.string().required('Digite seu estado de origem!'),\n    city: Yup.string().required('Digite sua cidade!'),\n    neighborhood: Yup.string().required('Digite seu bairro!'),\n    street: Yup.string().required('Digite sua rua!'),\n    street_number: Yup.string().required('Digite o nÃºmero da sua casa!'),\n    postal_code: Yup.string().length(9).required(\"Campo obrigatÃ³rio\")\n  }),\n\n  handleSubmit(values, {\n    props,\n    setValues\n  }) {\n    const options = {\n      body: {\n        user: {\n          name: values.name,\n          email: values.email,\n          date_birth: values.date_birth,\n          street: values.street,\n          street_number: values.street_number,\n          street_complement: values.street_complement,\n          neighborhood: values.neighborhood,\n          city: values.city,\n          state: values.state,\n          country: \"Brasil\",\n          postal_code: values.postal_code,\n          phone_number: values.phone_number,\n          cpf: values.cpf,\n          nickname: values.nickname,\n          profile_image: values.profile_image\n        }\n      }\n    };\n    API.put(config.APIS.PLAYERSTARS, '/player', options).then(response => {\n      console.log(\":::::::OPTIONS:::::::\", options);\n      window.location.href = '/perfil';\n    }).catch(error => {\n      console.log(\":::::::OPTIONS:::::::\", options);\n      window.alert('Erro fazendo PUT dos usuario!');\n    });\n  }\n\n})(EditarPerfil));\nexport default SaveEdit;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Perfil/EditarConsoles/index.js"],"names":["React","useState","useEffect","withRouter","Redirect","useSelector","useDispatch","withFormik","Form","Field","ErrorMessage","Yup","config","API","BrDate","MaskedInput","setUserImage","iconremove","iconedit","EditarPerfil","props","dispatch","thumbnailFile","setThumbnailFile","preview","setPreview","user","setUser","userOld","state","data","avataruser","profile_image","URL","createObjectURL","get","APIS","PLAYERSTARS","then","response","player","catch","error","console","log","setValues","removePreview","backgroundImage","Date","now","EditForm","estados","redirect","setRedirect","field","map","estado","index","SaveEdit","mapPropsToValues","name","date_birth","nickname","city","neighborhood","street","street_number","postal_code","street_complement","validationSchema","object","shape","string","required","length","handleSubmit","values","options","body","email","country","phone_number","cpf","put","window","location","href","alert"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { API } from \"aws-amplify\"\n// import config from \"../../../config/constants\"\n\n// function EditarConsoles() {\n\n//     const [userConsole, setUserConsole] = useState('');\n\n//     useEffect(() => {\n//         API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile')\n//             .then(response => {\n//                 console.log(\"ESSE E O RESPONSE\", response.data.player.consoles)\n//                 setUserConsole(response.data.player.consoles);\n//             })\n//             .catch(error => {\n//                 console.log(\"ERRO NO GET: \", error)\n//             })\n//     }, []);\n \n//   return (\n//     <section className=\"containerEditConsole\">\n//         <div className=\"contentEditConsole\">\n//             <h2 className=\"titleEditConsole\">Editar plataformas</h2>\n//             <p>Quais plataformas vocÃª usa?</p>\n//         </div>\n//     </section>\n//   );\n// }\n\n// export default EditarConsoles;\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport config from '../../../config/constants';\nimport { API } from \"aws-amplify\";\nimport BrDate from '../../FormikBrDate/formik_br_date';\nimport MaskedInput from 'react-text-mask';\nimport {setUserImage} from \"../../../store/actions/user.action\"\n\nimport iconremove from '../img/icon-remove.png';\nimport iconedit from '../img/editar-perfil.png';\n\n\n\nfunction EditarPerfil(props) {\n    const dispatch = useDispatch()\n    const [thumbnailFile, setThumbnailFile] = useState(\"\");\n    const [preview, setPreview] = useState(\"\")\n    const [user, setUser] = useState([]);\n    const userOld = useSelector(state => state.user.data.user);\n    const avataruser = \"https://playerstars-dev-photos.s3.amazonaws.com/WhatsApp+Image+2020-01-14+at+18.07.32.jpeg\";\n    const profile_image = userOld ? userOld.profile_image : avataruser;\n\n    useEffect(() => {\n\n        setPreview(thumbnailFile ? URL.createObjectURL(thumbnailFile) : profile_image);\n    }, [thumbnailFile, profile_image])\n\n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile')\n            .then(response => {\n                setUser(response.data.player.user);\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \", error)\n            })\n    }, []);\n\n    useEffect(() => {\n        props.setValues(userOld)\n         // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userOld])\n\n\n    const removePreview = () => {\n        setThumbnailFile(\"\")\n        dispatch(setUserImage(avataruser))\n    }\n\n    return (\n        <>\n            <section className=\"containerEditProfile\">\n                <div className=\"contentEditProfile\">\n                    <h2 className=\"titleEditProfile\">Editar Perfil</h2>\n                    <div className=\"containerEditAvatar\">\n                        <div className=\"containerAvatar\">\n                            <div id=\"thumbnail\"\n                                style={{ backgroundImage: `url(${preview}?${Date.now()})`}}\n                                className=\"thumbnail\"\n                            ></div>\n                        </div>\n                        <div className=\"containerEditRemove\">\n                            <label className=\"containerPutAvatar\" onClick={removePreview}>\n                                <img className=\"iconEdit\" src={iconremove} alt=\"Icon remover\" />\n                                <span className=\"textEdit\">Excluir</span>\n                            </label>\n                        </div>\n                    </div>\n                    {EditForm(user)}\n                </div>\n            </section>\n        </>\n    )\n}\n\nconst estados = [\"AC\", \"AL\", \"AP\", \"AM\", \"BA\", \"CE\", \"DF\", \"ES\", \"GO\", \"MA\", \"MT\", \"MS\",\n    \"MG\", \"PA\", \"PB\", \"PR\", \"PE\", \"PI\", \"RJ\", \"RN\", \"RS\", \"RO\", \"RR\", \"SC\",\n    \"SP\", \"SE\", \"TO\"];\n\nfunction EditForm() {\n    const [redirect, setRedirect] = useState(false)\n    return (\n        <>\n            {redirect && <Redirect to='/' />}\n            <Form className=\"dadosPessoais\">\n                <div className=\"blocoDadosPessoais\">\n                    <h3 className=\"titleH3\">Dados pessoais</h3>\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"nome\" />\n                    <fieldset>\n                        <Field id=\"nome\" type=\"text\" name=\"name\" required />\n                        <label className=\"label\" htmlFor=\"nome\" >Nome completo</label>\n                    </fieldset>\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"nascimento\" />\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"nickname\" />\n                    <div className=\"doisCampos\">\n                        <fieldset>\n                            <Field name=\"date_birth\" render={({ field }) => {\n                                return <MaskedInput mask={[/[0-9]/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n                                    {...field}\n                                    id=\"nascimento\"\n                                    type=\"text\"\n                                    required />\n                            }} />\n                            <label className=\"label\" htmlFor=\"nascimento\">Nascimento</label>\n                        </fieldset>\n                        <fieldset>\n                            <Field id=\"nickname\" type=\"text\" name=\"nickname\" required />\n                            <label className=\"label\" htmlFor=\"nickname\" >Nickname</label>\n                        </fieldset>\n                    </div>\n                </div>\n                <div className=\"blocoEnderecoCompleto\">\n                    <h3 className=\"titleH3\">EndereÃ§o completo</h3>\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"uf\" />\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"cidade\" />\n                    <div className=\"doisCampos\">\n                        <fieldset>\n                            <Field id=\"uf\" name=\"state\" required component=\"select\">\n                                <option value=\"\">UF</option>\n                                {estados.map((estado, index) => <option value={estado} key={index}>{estado}</option>)}\n                            </Field>\n                            <label className=\"label\" htmlFor=\"uf\" />\n                        </fieldset>\n                        <fieldset>\n                            <Field id=\"cidade\" type=\"text\" name=\"city\" required />\n                            <label className=\"label\" htmlFor=\"cidade\">Cidade</label>\n                        </fieldset>\n                    </div>\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"bairro\" />\n                    <fieldset>\n                        <Field id=\"bairro\" type=\"text\" name=\"neighborhood\" required />\n                        <label className=\"label\" htmlFor=\"bairro\">Bairro</label>\n                    </fieldset>\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"rua\" />\n                    <fieldset>\n                        <Field id=\"rua\" type=\"text\" name=\"street\" required />\n                        <label className=\"label\" htmlFor=\"rua\">Rua</label>\n                    </fieldset>\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"numero\" />\n\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"cep\" />\n                    <div className=\"doisCampos\">\n                        <fieldset>\n                            <Field id=\"numero\" type=\"text\" name=\"street_number\" required />\n                            <label className=\"label\" htmlFor=\"numero\">NÃºmero</label>\n                        </fieldset>\n                        <fieldset>\n                            <Field name=\"postal_code\" render={({ field }) => {\n                                return <MaskedInput mask={[/[0-9]/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/]}\n                                    {...field}\n                                    id=\"cep\"\n                                    type=\"text\"\n                                    required />\n                            }} />\n                            <label className=\"label\" htmlFor=\"cep\">CEP</label>\n                        </fieldset>\n                    </div>\n                    <fieldset>\n                        <Field id=\"complemento\" type=\"text\" name=\"street_complement\"  />\n                        <label className=\"label\" htmlFor=\"complemento\">Complemento - <i>opcional</i></label>\n                    </fieldset>\n                    <div className=\"containerBtn\">\n                        <button className=\"btnCancel\" type=\"button\" onClick={() => setRedirect(true)}>Cancelar</button>\n                        <button className=\"btnSave\" type=\"submit\" >Salvar alteraÃ§Ãµes</button>\n                    </div>\n                </div>\n            </Form>\n        </>\n    )\n}\n\nconst SaveEdit = withRouter(withFormik({\n    mapPropsToValues({\n        name,\n        date_birth,\n        nickname,\n        state,\n        city,\n        neighborhood,\n        street,\n        street_number,\n        postal_code,\n        street_complement,\n        profile_image\n    }) {\n        return {\n            name: name || '',\n            date_birth: date_birth || '',\n            nickname: nickname || '',\n            state: state || '',\n            city: city || '',\n            neighborhood: neighborhood || '',\n            street: street || '',\n            street_number: street_number || '',\n            postal_code: postal_code || '',\n            street_complement: street_complement || '',\n            profile_image: profile_image || ''\n        }\n    },\n    validationSchema: Yup.object().shape({\n        name: Yup.string().required('Digite seu nome completo!'),\n        date_birth: BrDate.required('Digite sua data de nascimento!'),\n        nickname: Yup.string().required('Digite seu nickname!'),\n        state: Yup.string().required('Digite seu estado de origem!'),\n        city: Yup.string().required('Digite sua cidade!'),\n        neighborhood: Yup.string().required('Digite seu bairro!'),\n        street: Yup.string().required('Digite sua rua!'),\n        street_number: Yup.string().required('Digite o nÃºmero da sua casa!'),\n        postal_code: Yup.string().length(9).required(\"Campo obrigatÃ³rio\")\n    }),\n    handleSubmit(values, { props, setValues }) {\n        const options = {\n            body: {\n                user: {\n                    name: values.name,\n                    email: values.email,\n                    date_birth: values.date_birth,\n                    street: values.street,\n                    street_number: values.street_number,\n                    street_complement: values.street_complement,\n                    neighborhood: values.neighborhood,\n                    city: values.city,\n                    state: values.state,\n                    country: \"Brasil\",\n                    postal_code: values.postal_code,\n                    phone_number: values.phone_number,\n                    cpf: values.cpf,\n                    nickname: values.nickname,\n                    profile_image: values.profile_image\n                }\n            }\n        }\n        API.put(config.APIS.PLAYERSTARS, '/player', options)\n            .then(response => {\n                console.log(\":::::::OPTIONS:::::::\", options)\n                window.location.href = '/perfil'\n            })\n            .catch(error => {\n                console.log(\":::::::OPTIONS:::::::\", options)\n                window.alert('Erro fazendo PUT dos usuario!');\n            })\n    }\n})(EditarPerfil));\n\nexport default SaveEdit"]},"metadata":{},"sourceType":"module"}