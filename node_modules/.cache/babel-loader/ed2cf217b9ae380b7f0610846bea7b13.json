{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Converter/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport { API } from \"aws-amplify\";\nimport config from '../../config/constants';\nimport PageContainer from \"../../components/features/PageContainer\";\nimport Banner from '../../components/features/Header/Banner';\nimport imgBanner from '../../assets/images/compre-suas-stars-1280.png';\nimport imgRedStars from \"../../assets/images/red-star.png\";\nimport imgStarGold from \"../../assets/images/gold-star.png\";\nimport seta from \"../../assets/icons/seta.svg\";\nimport './styles.scss';\n\nconst Converter = () => {\n  const data = useSelector(state => state.user.data);\n  const alert = useAlert();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        quantidadeGold = _useState2[0],\n        setQuantidadeGold = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        quantidadeRed = _useState4[0],\n        setQuantidadeRed = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        taxa = _useState6[0],\n        setTaxa = _useState6[1];\n\n  const _useState7 = useState(\"#bbb\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        btn_color = _useState8[0],\n        setBtn_color = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        btn_disabled = _useState10[0],\n        setBtn_disabled = _useState10[1];\n\n  const on_input = () => {\n    if (quantidadeGold.length >= 5 && quantidadeRed.length >= 5) {\n      setBtn_disabled(false);\n      setBtn_color(\"#000\");\n    } else {\n      setBtn_disabled(true);\n      setBtn_color(\"#bbb\");\n    }\n  };\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/convert-rate').then(response => {\n      console.log(\"ESSE É O RESPONSE: \", response.data[0].convert_rate);\n      setTaxa(response.data[0].convert_rate);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \", error);\n    });\n  }, []);\n\n  const postConvert = () => {\n    const options = {\n      body: {\n        red_stars: parseInt(quantidadeGold * taxa),\n        gold_stars: parseInt(quantidadeGold)\n      }\n    };\n    API.post(config.APIS.PLAYERSTARS, '/player/convert-stars', options).then(response => {\n      console.log(response);\n      alert.success(\"Stars convertidas com sucesso!\");\n      setQuantidadeGold(\"\");\n      setQuantidadeRed(\"\");\n    }).catch(error => {\n      console.log(error);\n      window.alert('Erro fazendo post dos dados do usuário.');\n    });\n  };\n\n  const converterStars = () => {\n    if (quantidadeGold > data.golden_star_balance) {\n      alert.error(\"Star Gold insuficiente\");\n      return;\n    }\n\n    if (quantidadeGold === '0' || !quantidadeGold) {\n      alert.error(\"Informe um valor valido para ser convertido.\");\n      return;\n    }\n\n    if (quantidadeGold * taxa > quantidadeGold) {\n      postConvert();\n    }\n  };\n\n  const contentBanner = \"In tempor lectus eros, in tempor augue aliquam in\";\n  return React.createElement(PageContainer, {\n    public: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Banner, {\n    imagemBanner: imgBanner,\n    text: contentBanner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: \"containerConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"contentConverter\",\n    onChange: () => setBtn_color('#000'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"infoConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Converter Stars\"), React.createElement(\"p\", {\n    className: \"saldo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Seu saldo de Star Gold \\xE9 de: \", data.golden_star_balance), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam vestibulum, mi vel placerat auctor, tellus sapien congue ex, id ornare mi sem sit amet ex.\")), React.createElement(\"div\", {\n    className: \"converterStars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"img-star\",\n    src: imgStarGold,\n    alt: \"Stars Gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"GoldStars\",\n    value: parseInt(quantidadeGold),\n    onChange: e => {\n      setQuantidadeGold(e.target.value);\n      setQuantidadeRed(e.target.value && e.target.value * taxa);\n    },\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"GoldStars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Gold Stars\")), React.createElement(\"img\", {\n    className: \"seta\",\n    src: seta,\n    alt: \"conversao\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"RedStars\",\n    value: parseInt(quantidadeRed),\n    onChange: e => {\n      setQuantidadeRed(e.target.value);\n      setQuantidadeGold(e.target.value && e.target.value / taxa);\n    },\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"RedStars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Red Stars\")), React.createElement(\"img\", {\n    className: \"img-star\",\n    src: imgRedStars,\n    alt: \"Red Stars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: converterStars,\n    className: \"btnDefault\",\n    style: {\n      background: \"\".concat(btn_color)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Converter\"))));\n};\n\nexport default Converter;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Converter/index.js"],"names":["React","useState","useEffect","useSelector","useAlert","API","config","PageContainer","Banner","imgBanner","imgRedStars","imgStarGold","Converter","data","state","user","alert","quantidadeGold","setQuantidadeGold","quantidadeRed","setQuantidadeRed","taxa","setTaxa","btn_color","setBtn_color","btn_disabled","setBtn_disabled","on_input","length","get","APIS","PLAYERSTARS","then","response","console","log","convert_rate","catch","error","postConvert","options","body","red_stars","parseInt","gold_stars","post","success","window","converterStars","golden_star_balance","contentBanner","e","target","value","seta","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\n\nimport { API } from \"aws-amplify\"\nimport config from '../../config/constants';\nimport PageContainer from \"../../components/features/PageContainer\";\nimport Banner from '../../components/features/Header/Banner';\n\nimport imgBanner from '../../assets/images/compre-suas-stars-1280.png'\nimport imgRedStars from \"../../assets/images/red-star.png\";\nimport imgStarGold from \"../../assets/images/gold-star.png\";\nimport seta from \"../../assets/icons/seta.svg\";\n\nimport './styles.scss';\n\nconst Converter = () => {\n    \n    const data = useSelector(state => state.user.data); \n    const alert = useAlert()\n\n    const [quantidadeGold, setQuantidadeGold] = useState(\"\");\n    const [quantidadeRed, setQuantidadeRed] = useState(\"\");\n    const [taxa, setTaxa] = useState(\"\");\n    const [btn_color, setBtn_color] = useState(\"#bbb\");\n    const [btn_disabled, setBtn_disabled] = useState(true);\n\n    const on_input = () => {\n        if (quantidadeGold.length >= 5 && quantidadeRed.length >= 5) {\n          setBtn_disabled(false);\n          setBtn_color(\"#000\");\n        } else {\n          setBtn_disabled(true);\n          setBtn_color(\"#bbb\");\n        }\n      };\n    \n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/convert-rate')\n            .then(response => {\n                console.log(\"ESSE É O RESPONSE: \", response.data[0].convert_rate)\n                setTaxa(response.data[0].convert_rate)\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \", error)\n            })\n    }, [ ])\n\n    const postConvert = () => {\n        \n        const options = {\n            body:{\n                red_stars: parseInt(quantidadeGold * taxa),\n                gold_stars: parseInt(quantidadeGold) \n            }\n        }\n\n        API.post(config.APIS.PLAYERSTARS, '/player/convert-stars', options)\n        .then(response => {\n            console.log(response)\n            alert.success(\"Stars convertidas com sucesso!\");\n            setQuantidadeGold(\"\");\n            setQuantidadeRed(\"\");     \n        })\n        .catch(error => {\n            console.log(error)\n            window.alert('Erro fazendo post dos dados do usuário.');\n        })\n    }\n\n    const converterStars = () => {\n        if (quantidadeGold > data.golden_star_balance) {\n            alert.error(\"Star Gold insuficiente\");\n          return;\n        }\n        if (quantidadeGold === '0' || !quantidadeGold)  {\n            alert.error(\"Informe um valor valido para ser convertido.\");\n          return;\n        }\n        if (quantidadeGold * taxa > quantidadeGold) {\n            postConvert();\n        }\n    };\n    \n    const contentBanner = \"In tempor lectus eros, in tempor augue aliquam in\";        \n    \n    return (\n        <PageContainer public={false}>\n        <Banner imagemBanner={imgBanner} text={contentBanner} />\n            <section className=\"containerConverter\">       \n                <form className=\"contentConverter\" onChange={() => setBtn_color('#000')}>                   \n                    <div className=\"infoConverter\"> \n                        <h1>Converter Stars</h1>\n                        <p className=\"saldo\">Seu saldo de Star Gold é de: {data.golden_star_balance}</p>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n                        Nam vestibulum, mi vel placerat auctor, tellus sapien congue ex, id ornare mi sem sit amet ex.</p>\n                    </div>\n                    <div className=\"converterStars\">\n                        <img className=\"img-star\" src={imgStarGold} alt=\"Stars Gold\"></img>\n                        <fieldset>\n                            <input \n                            id=\"GoldStars\" \n                            value={parseInt(quantidadeGold)}\n                            onChange={(e) => {setQuantidadeGold(e.target.value); \n                                setQuantidadeRed(e.target.value && e.target.value * taxa)}}\n                            type=\"number\" \n                            required/>\n                            <label className=\"label\" htmlFor=\"GoldStars\">Gold Stars</label>\n                        </fieldset>\n                        <img className=\"seta\" src={seta} alt=\"conversao\"></img>\n                        <fieldset>\n                            <input \n                            id=\"RedStars\"\n                            value={parseInt(quantidadeRed)}\n                            onChange={(e) => {setQuantidadeRed(e.target.value)\n                                setQuantidadeGold(e.target.value && e.target.value / taxa)}}        \n                            type=\"number\" \n                            required/>\n                            <label className=\"label\" htmlFor=\"RedStars\">Red Stars</label>\n                        </fieldset>\n                        <img className=\"img-star\" src={imgRedStars} alt=\"Red Stars\"></img>\n                    </div>\n                        <button onClick={converterStars} className=\"btnDefault\" style={{ background: `${btn_color}` }}>Converter</button>\n                </form>\n            </section>\n        </PageContainer>       \n    )\n}\n\nexport default Converter;"]},"metadata":{},"sourceType":"module"}