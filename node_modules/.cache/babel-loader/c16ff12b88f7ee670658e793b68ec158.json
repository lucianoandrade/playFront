{"ast":null,"code":"import _defineProperty from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Perfil/EditarConsoles/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { API, Auth } from \"aws-amplify\";\nimport config from \"../../../config/constants\";\nimport { useSelector } from 'react-redux';\nimport './styles.scss';\n\nfunction EditarConsoles(props) {\n  const currentConsoles = useSelector(state => state.user.data.consoles);\n  console.log(currentConsoles);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userConsole = _useState2[0],\n        setUserConsole = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        form = _useState4[0],\n        setForm = _useState4[1];\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/console/').then(response => {\n      const mergedConsoles = response.data.map(item => {\n        return currentConsoles.find(myConsole => myConsole.entity_id === item.entity_id) || item;\n      });\n      console.log(\"ESSE E O RESPONSE\", mergedConsoles);\n      setUserConsole(mergedConsoles);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \");\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const findConsole = (consoles, platformName) => {\n    const _console = consoles.find(item => item.name === platformName);\n\n    return _console ? _console.tag_name : '';\n  };\n\n  const handleChangeInput = (ev, index) => {\n    const copyConsoles = Object.assign([], userConsole);\n    copyConsoles[index] = _objectSpread({}, copyConsoles[index], {\n      tag_name: ev.target.value\n    });\n    console.log(\"copyConsoles :: \", copyConsoles);\n    setUserConsole(copyConsoles);\n  };\n\n  const handleSubmit = ev => {\n    ev.preventDefault(); // const listConsoles = Object.keys(form).map(key=>{\n    //     return {\n    //         entity_id: form[key].entity_id,\n    //         tag_name: form[key].tag_name\n    //     }\n    // })\n\n    const userConsoleNotNull = userConsole.filter(item => !!item.tag_name);\n    console.log(\"userConsoleNotNull :: \", userConsoleNotNull);\n    return;\n    Auth.currentAuthenticatedUser().then(response => {\n      const options = {\n        body: {\n          consoles: userConsoleNotNull\n        }\n      };\n      API.put(config.APIS.PLAYERSTARS, '/player', options).then(response => {\n        props.history.push('/perfil');\n      }).catch(error => {\n        console.log('Esse é o retorno das options', options);\n        window.alert('Erro ao alterar os dados do usuário.');\n      });\n    }).catch(error => {\n      console.log(\"Erro obtendo usuario atual\", error);\n    });\n  };\n\n  return React.createElement(\"section\", {\n    className: \"containerEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titleEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Editar plataformas\"), React.createElement(\"p\", {\n    className: \"subTitleEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Quais plataformas voc\\xEA usa?\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"dadosConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, userConsole.length > 0 ? userConsole.map((platform, index) => React.createElement(\"fieldset\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: platform.name,\n    type: \"text\",\n    name: platform.name,\n    onChange: eventhandleChangeInput,\n    defaultValue: findConsole(currentConsoles, platform.name) // required\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: platform.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Tagname do \", platform.name))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"containerBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btnCancel\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Cancelar\"), React.createElement(\"button\", {\n    className: \"btnSave\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Salvar altera\\xE7\\xF5es\")))));\n}\n\nexport default EditarConsoles;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Perfil/EditarConsoles/index.js"],"names":["React","useState","useEffect","API","Auth","config","useSelector","EditarConsoles","props","currentConsoles","state","user","data","consoles","console","log","userConsole","setUserConsole","form","setForm","get","APIS","PLAYERSTARS","then","response","mergedConsoles","map","item","find","myConsole","entity_id","catch","error","findConsole","platformName","_console","name","tag_name","handleChangeInput","ev","index","copyConsoles","Object","assign","target","value","handleSubmit","preventDefault","userConsoleNotNull","filter","currentAuthenticatedUser","options","body","put","history","push","window","alert","length","platform","eventhandleChangeInput"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { API, Auth } from \"aws-amplify\"\nimport config from \"../../../config/constants\"\nimport { useSelector } from 'react-redux';\n\nimport './styles.scss';\n\nfunction EditarConsoles(props) {\n    const currentConsoles = useSelector(state => state.user.data.consoles);\n    console.log(currentConsoles)\n    const [userConsole, setUserConsole] = useState('');\n\n    const [form, setForm] = useState({}) \n    \n\n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/console/')\n            .then(response => {\n                const mergedConsoles = response.data.map(item => {\n                    return currentConsoles.find(myConsole => myConsole.entity_id === item.entity_id ) || item\n                })\n                console.log(\"ESSE E O RESPONSE\", mergedConsoles)\n                setUserConsole(mergedConsoles);\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \")\n            })\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const findConsole = (consoles, platformName) => {\n        const _console = consoles.find(item => item.name === platformName)\n        return _console ? _console.tag_name : ''   \n    }\n\n\n    const handleChangeInput = (ev, index) => {\n        const copyConsoles = Object.assign([], userConsole)\n        copyConsoles[index] = {\n            ...copyConsoles[index],\n            tag_name: ev.target.value\n        }\n        console.log(\"copyConsoles :: \", copyConsoles)\n        setUserConsole(copyConsoles)\n    }\n    const handleSubmit = (ev) => {\n        ev.preventDefault()\n        // const listConsoles = Object.keys(form).map(key=>{\n        //     return {\n        //         entity_id: form[key].entity_id,\n        //         tag_name: form[key].tag_name\n        //     }\n        // })\n\n        const userConsoleNotNull = userConsole.filter(item => !!item.tag_name)\n\n        console.log(\"userConsoleNotNull :: \", userConsoleNotNull)\n        return \n        Auth.currentAuthenticatedUser()\n        .then(response => {\n            const options = {\n                body: {\n                    consoles: userConsoleNotNull\n                }\n            }\n                API.put(config.APIS.PLAYERSTARS, '/player', options)\n                    .then(response => {\n                        props.history.push('/perfil');\n                    })\n                    .catch(error => {\n                        console.log('Esse é o retorno das options', options);\n                        window.alert('Erro ao alterar os dados do usuário.');\n                    })\n            })\n            .catch(error => {\n                console.log(\"Erro obtendo usuario atual\", error)\n            })\n    }\n\n  return (\n    <section className=\"containerEditConsole\">\n        <div className=\"contentEditConsole\">\n            <h2 className=\"titleEditConsole\">Editar plataformas</h2>\n            <p className=\"subTitleEditConsole\">Quais plataformas você usa?</p>\n            <form onSubmit={handleSubmit} className=\"dadosConsole\">\n                {userConsole.length > 0 ?\n                    userConsole.map((platform, index) => (\n                        <fieldset key={index}>\n                            <input \n                                id={platform.name} \n                                type=\"text\" \n                                name={platform.name}\n                                onChange={ eventhandleChangeInput} \n                                defaultValue={findConsole(currentConsoles, platform.name)}\n                                // required\n                                />\n                            <label className=\"label\" htmlFor={platform.name}>Tagname do {platform.name}</label>\n                        </fieldset>\n                    )) : <div></div>\n                }\n                <div className=\"containerBtn\">\n                    <button className=\"btnCancel\" type=\"button\">Cancelar</button>\n                    <button className=\"btnSave\" type=\"submit\" >Salvar alterações</button>\n                </div>\n            </form>\n        </div>\n    </section>\n  );\n}\n\nexport default EditarConsoles;"]},"metadata":{},"sourceType":"module"}