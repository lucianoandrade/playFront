{"ast":null,"code":"import _defineProperty from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/EditarConsoles/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { API, Auth } from \"aws-amplify\";\nimport config from \"../../config/constants\";\nimport PageContainer from \"../../components/features/PageContainer\";\nimport './styles.scss';\nimport { useAlert } from 'react-alert';\n\nfunction EditarConsoles(props) {\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/console/').then(response => {\n      console.log(response.data);\n      setUserConsole(response.data.map(item => {\n        return currentConsoles.map(myConsole => myConsole.console_id) === item.entity_id || item;\n      }));\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \", error);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const currentConsoles = useSelector(state => state.user.data.consoles);\n  console.log(currentConsoles);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userConsole = _useState2[0],\n        setUserConsole = _useState2[1];\n\n  const alert = useAlert();\n\n  const findConsole = (consoles, platformConsoleId) => {\n    const _console = consoles.find(item => item.console_id === platformConsoleId);\n\n    return _console ? _console.tag_name : '';\n  };\n\n  const handleChangeInput = (ev, index) => {\n    const copyConsoles = Object.assign([], userConsole);\n    copyConsoles[index] = _objectSpread({}, copyConsoles[index], {\n      tag_name: ev.target.value\n    });\n    console.log(\"copyConsoles :: \", copyConsoles);\n    setUserConsole(copyConsoles);\n  };\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const userConsoleNotNull = userConsole.filter(item => !!item.tag_name);\n    console.log(\"userConsoleNotNull :: \", userConsoleNotNull);\n    Auth.currentAuthenticatedUser().then(response => {\n      const options = {\n        body: {\n          consoles: userConsoleNotNull\n        }\n      };\n      API.put(config.APIS.PLAYERSTARS, '/player', options).then(response => {\n        window.location.href = '/perfil';\n      }).catch(error => {\n        console.log('Esse Ã© o retorno das options', options);\n        alert.error('Erro ao alterar os dados do usuario!');\n      });\n    }).catch(error => {\n      console.log(\"Erro obtendo usuario atual\", error);\n    });\n  };\n\n  return React.createElement(PageContainer, {\n    public: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"containerEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titleEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Editar plataformas\"), React.createElement(\"p\", {\n    className: \"subTitleEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Quais plataformas voc\\xEA usa?\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"dadosConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, userConsole.length > 0 ? userConsole.map((platform, index) => React.createElement(\"fieldset\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: platform.name,\n    type: \"text\",\n    name: platform.name,\n    onChange: event => handleChangeInput(event, index),\n    defaultValue: findConsole(currentConsoles, platform.entity_id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: platform.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Tagname do \", platform.name))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"containerBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btnCancel\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Cancelar\"), React.createElement(\"button\", {\n    className: \"btnSave\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Salvar altera\\xE7\\xF5es\"))))));\n}\n\nexport default EditarConsoles;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/EditarConsoles/index.js"],"names":["React","useState","useEffect","useSelector","API","Auth","config","PageContainer","useAlert","EditarConsoles","props","get","APIS","PLAYERSTARS","then","response","console","log","data","setUserConsole","map","item","currentConsoles","myConsole","console_id","entity_id","catch","error","state","user","consoles","userConsole","alert","findConsole","platformConsoleId","_console","find","tag_name","handleChangeInput","ev","index","copyConsoles","Object","assign","target","value","handleSubmit","preventDefault","userConsoleNotNull","filter","currentAuthenticatedUser","options","body","put","window","location","href","length","platform","name","event"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { API, Auth } from \"aws-amplify\";\nimport config from \"../../config/constants\";\nimport PageContainer from \"../../components/features/PageContainer\";\nimport './styles.scss';\nimport { useAlert } from 'react-alert';\n\nfunction EditarConsoles(props) {\n\n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/console/')\n            .then(response => {\n                console.log(response.data)\n                setUserConsole(response.data.map(item => {\n                    return currentConsoles.map(myConsole => myConsole.console_id) === item.entity_id || item\n                }))\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \", error)\n            })\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const currentConsoles = useSelector(state => state.user.data.consoles);\n    console.log(currentConsoles)\n    const [userConsole, setUserConsole] = useState('');\n    const alert = useAlert();\n\n    const findConsole = (consoles, platformConsoleId) => {\n        const _console = consoles.find(item => item.console_id === platformConsoleId)\n        return _console ? _console.tag_name : ''   \n    }\n\n\n    const handleChangeInput = (ev, index) => {\n        const copyConsoles = Object.assign([], userConsole)\n        copyConsoles[index] = {\n            ...copyConsoles[index],\n            tag_name: ev.target.value\n        }\n        console.log(\"copyConsoles :: \", copyConsoles)\n        setUserConsole(copyConsoles)\n    }\n    const handleSubmit = (ev) => {\n        ev.preventDefault()\n        const userConsoleNotNull = userConsole.filter(item => !!item.tag_name)\n        console.log(\"userConsoleNotNull :: \", userConsoleNotNull)\n        \n        Auth.currentAuthenticatedUser()\n        .then(response => {\n            const options = {\n                body: {\n                    consoles: userConsoleNotNull\n                }\n            }\n                API.put(config.APIS.PLAYERSTARS, '/player', options)\n                    .then(response => {\n                        window.location.href = '/perfil'\n                    })\n                    .catch(error => {\n                        console.log('Esse Ã© o retorno das options', options);\n                        alert.error('Erro ao alterar os dados do usuario!');\n                    })\n            })\n            .catch(error => {\n                console.log(\"Erro obtendo usuario atual\", error)\n            })\n    }\n\n  return (\n    <PageContainer public={false}>\n        <section className=\"containerEditConsole\">\n            <div className=\"contentEditConsole\">\n                <h2 className=\"titleEditConsole\">Editar plataformas</h2>\n                <p className=\"subTitleEditConsole\">Quais plataformas vocÃª usa?</p>\n                <form onSubmit={handleSubmit} className=\"dadosConsole\">\n                    {userConsole.length > 0 ?\n                        userConsole.map((platform, index) => (\n                            <fieldset key={index}>\n                                <input \n                                    id={platform.name} \n                                    type=\"text\" \n                                    name={platform.name}\n                                    onChange={ event => handleChangeInput(event, index)} \n                                    defaultValue={findConsole(currentConsoles, platform.entity_id)}\n                                    />\n                                <label className=\"label\" htmlFor={platform.name}>Tagname do {platform.name}</label>\n                            </fieldset>\n                        )) : <div></div>\n                    }\n                    <div className=\"containerBtn\">\n                        <button className=\"btnCancel\" type=\"button\">Cancelar</button>\n                        <button className=\"btnSave\" type=\"submit\" >Salvar alteraÃ§Ãµes</button>\n                    </div>\n                </form>\n            </div>\n        </section>\n    </PageContainer>\n  );\n}\n\nexport default EditarConsoles;"]},"metadata":{},"sourceType":"module"}