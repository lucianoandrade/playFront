{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js\";\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport iconNext from '../img/Direita.png';\nimport iconPreview from '../img/Esquerda.png';\nimport './styles.scss';\n\nconst Navigation = props => {\n  const _props$pagination = props.pagination,\n        page = _props$pagination.page,\n        total = _props$pagination.total,\n        per_page = _props$pagination.per_page;\n  console.log('::::::props.pagination::::::', props.pagination);\n\n  const handlePageClick = () => listPages.map((item, index) => {\n    props.setPage(index + 1);\n    return page;\n  });\n\n  const prevPage = () => {\n    if (page > 1) props.setPage(page - 1);\n  };\n\n  const nextPage = () => {\n    console.log(\"nextPage\");\n\n    if (page < countPages) {\n      props.setPage(page + 1);\n    }\n  };\n\n  const countPages = (total - total % per_page) / per_page + (total % per_page !== 0 ? 1 : 0);\n  console.log(\":::::CONUNT PAGE\", countPages);\n  const listPages = new Array(parseInt(countPages)).fill(null);\n  console.log(\":::::LIST PAGE\", listPages);\n  return React.createElement(ReactPaginate, {\n    previousLabel: React.createElement(\"div\", {\n      className: \"icon\",\n      onClick: prevPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: iconPreview,\n      alt: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })),\n    nextLabel: React.createElement(\"div\", {\n      className: \"icon\",\n      onClick: nextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: iconNext,\n      alt: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })),\n    breakLabel: '...',\n    pageCount: countPages // onPageChange={handlePageClick}\n    ,\n    forcePage: 0,\n    breakClassName: 'rest',\n    containerClassName: 'containerNavigation',\n    pageClassName: 'page',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n};\n\nexport default Navigation; // import React from 'react';\n// import iconNext from '../img/Direita.png';\n// import iconPreview from '../img/Esquerda.png';\n// import './styles.scss';\n// function Navigation(props) {\n//     // const { pagination, setPage } = props\n//     const { page, total, per_page } = props.pagination\n//     // const isActived = (_page) => {\n//     //     if (page === _page)\n//     //         return \"activated\"\n//     //     return \"\"\n//     // }\n//     const prevPage = () => {\n//         if(page > 1)\n//         props.setPage(page - 1)\n//     }\n//     const nextPage = () => {\n//         console.log(\"nextPage\")\n//         if(page < countPages ){\n//            props.setPage(page + 1)\n//         }\n//     }\n//     const countPages =  ((total - (total % per_page)) / per_page) +((total % per_page) !== 0 ? 1 : 0)\n//     console.log(\":::::CONUNT PAGE\", countPages )\n//     const listPages = new Array(parseInt(countPages)).fill(null)\n//     console.log(\":::::LIST PAGE\", listPages)\n//     // const marginOffset = () => {\n//     //     if(countPages - page < 4 && countPages > 3){\n//     //         return -((countPages-4)*42)\n//     //     }\n//     //     return -((page-1)*42)\n//     // }\n//     // const width = () => {\n//     //     if(countPages < 4){\n//     //         return countPages*42\n//     //     }\n//     //     return 4*42\n//     // }\n//     return (\n//         <div className=\"containerNavigation\">\n//             <div className=\"icon\" onClick={prevPage}><img src={iconPreview} alt=\"next\" /></div>\n//             <div className=\"navigationBody\" \n//             // style={{width: width()}}\n//             >\n//                 <div className=\"navigationList\" \n//                 // style={{marginLeft: marginOffset()}}\n//                 >\n//                     {listPages.map((item, index) => {\n//                         // const current = index + 1\n//                         return <span onClick={()=>props.setPage(index + 1)} key={index} \n//                         // className={`page ${isActived(current)}`}\n//                         > {index + 1} </span>\n//                     }\n//                     )}\n//                 </div>\n//             </div>\n//             {countPages > 4 && page < countPages - 3 && <span className={`page`}> ... </span>}\n//             <div className=\"icon\" onClick={nextPage}><img src={iconNext} alt=\"next\" /></div>\n//         </div>\n//     )\n// }\n// export default Navigation;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js"],"names":["React","ReactPaginate","iconNext","iconPreview","Navigation","props","pagination","page","total","per_page","console","log","handlePageClick","listPages","map","item","index","setPage","prevPage","nextPage","countPages","Array","parseInt","fill"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactPaginate from 'react-paginate';\n\nimport iconNext from '../img/Direita.png';\nimport iconPreview from '../img/Esquerda.png';\n\nimport './styles.scss';\n\nconst Navigation = (props) => {\n\n    const { page, total, per_page } = props.pagination\n    console.log('::::::props.pagination::::::', props.pagination )\n\n   const handlePageClick = () => listPages.map((item, index) => {\n       props.setPage(index + 1)\n       return page\n   })\n\n    const prevPage = () => {\n        if(page > 1)\n        props.setPage(page - 1)\n    }\n\n    const nextPage = () => {\n        console.log(\"nextPage\")\n        if(page < countPages ){\n           props.setPage(page + 1)\n        }\n    }\n\n    const countPages =  ((total - (total % per_page)) / per_page) + ((total % per_page) !== 0 ? 1 : 0)\n    console.log(\":::::CONUNT PAGE\", countPages )\n    const listPages = new Array(parseInt(countPages)).fill(null)\n    console.log(\":::::LIST PAGE\", listPages)\n  \n    return (\n        <ReactPaginate\n            previousLabel={<div className=\"icon\" onClick={prevPage}><img src={iconPreview} alt=\"next\" /></div>}\n            nextLabel={ <div className=\"icon\" onClick={nextPage}><img src={iconNext} alt=\"next\" /></div>}\n            breakLabel={'...'}\n            pageCount={countPages}\n            // onPageChange={handlePageClick}\n            forcePage={0}\n            breakClassName={'rest'}\n            containerClassName={'containerNavigation'}\n            pageClassName={'page'}\n        />\n    )\n}\n\nexport default Navigation;\n\n// import React from 'react';\n\n// import iconNext from '../img/Direita.png';\n// import iconPreview from '../img/Esquerda.png';\n\n// import './styles.scss';\n\n// function Navigation(props) {\n\n//     // const { pagination, setPage } = props\n//     const { page, total, per_page } = props.pagination\n\n//     // const isActived = (_page) => {\n//     //     if (page === _page)\n//     //         return \"activated\"\n//     //     return \"\"\n//     // }\n\n//     const prevPage = () => {\n//         if(page > 1)\n//         props.setPage(page - 1)\n//     }\n\n//     const nextPage = () => {\n//         console.log(\"nextPage\")\n//         if(page < countPages ){\n//            props.setPage(page + 1)\n//         }\n//     }\n\n//     const countPages =  ((total - (total % per_page)) / per_page) +((total % per_page) !== 0 ? 1 : 0)\n//     console.log(\":::::CONUNT PAGE\", countPages )\n//     const listPages = new Array(parseInt(countPages)).fill(null)\n//     console.log(\":::::LIST PAGE\", listPages)\n    \n//     // const marginOffset = () => {\n//     //     if(countPages - page < 4 && countPages > 3){\n//     //         return -((countPages-4)*42)\n//     //     }\n//     //     return -((page-1)*42)\n//     // }\n\n//     // const width = () => {\n//     //     if(countPages < 4){\n//     //         return countPages*42\n//     //     }\n//     //     return 4*42\n//     // }\n\n//     return (\n//         <div className=\"containerNavigation\">\n//             <div className=\"icon\" onClick={prevPage}><img src={iconPreview} alt=\"next\" /></div>\n//             <div className=\"navigationBody\" \n//             // style={{width: width()}}\n//             >\n//                 <div className=\"navigationList\" \n//                 // style={{marginLeft: marginOffset()}}\n//                 >\n//                     {listPages.map((item, index) => {\n//                         // const current = index + 1\n//                         return <span onClick={()=>props.setPage(index + 1)} key={index} \n//                         // className={`page ${isActived(current)}`}\n//                         > {index + 1} </span>\n//                     }\n//                     )}\n//                 </div>\n//             </div>\n//             {countPages > 4 && page < countPages - 3 && <span className={`page`}> ... </span>}\n\n//             <div className=\"icon\" onClick={nextPage}><img src={iconNext} alt=\"next\" /></div>\n//         </div>\n//     )\n// }\n\n// export default Navigation;\n"]},"metadata":{},"sourceType":"module"}