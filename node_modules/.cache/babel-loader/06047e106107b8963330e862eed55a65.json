{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/InicioDoCadastro/CodConfirmacao/index.js\";\nimport React from 'react';\nimport { Form, withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Auth } from \"aws-amplify\";\nimport smartphone from './img/smartphone.png';\nimport '../CodConfirmacao/styles.scss';\nimport { withRouter } from 'react-router-dom';\nimport FormField from \"../../FormField\";\n\nconst confirmSignUp = props => React.createElement(\"div\", {\n  className: \"containerCodConfirm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"lightBox\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"lightBoxContent\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: smartphone,\n  alt: \"Icone Cel\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}), React.createElement(\"h3\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Confirme seu n\\xFAmero de telefone\"), React.createElement(\"p\", {\n  className: \"paragraph\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Enviamos um c\\xF3digo de confirma\\xE7\\xE3o por SMS para voc\\xEA. Por favor, digite-o abaixo.\"), React.createElement(Form, {\n  className: \"formConfirm\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"inputInline\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(FormField, {\n  id: \"codConfirm\",\n  type: \"text\",\n  name: \"codigo\",\n  label: \"C\\xF3digo de confirma\\xE7\\xE3o\",\n  required: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n})), React.createElement(\"button\", {\n  className: \"btnDefault\",\n  type: \"submit\",\n  disabled: !props.isValid,\n  required: props.isSubmitting,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Confirmar\"), React.createElement(\"button\", {\n  className: \"btnSecundary\",\n  type: \"submit\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"Reenviar C\\xF3digo\")))));\n\nconst ConfirmSignupForm = withRouter(withFormik({\n  mapPropsToValues({\n    codigo\n  }) {\n    return {\n      codigo: codigo || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    codigo: Yup.string().required(\"Campo obrigatório\").length(6, 'Codigo inválido')\n  }),\n\n  handleSubmit({\n    codigo\n  }, {\n    props,\n    setFieldError,\n    setSubmitting\n  }) {\n    setSubmitting(true);\n    console.log('Dados: ', {\n      email: props.history.location.state.email,\n      codigo: codigo\n    });\n    Auth.confirmSignUp(props.history.location.state.email, codigo.toString()).then(result => {\n      setSubmitting(false);\n      props.history.push('/dadosuser', {\n        initCadastro: props.history.location.state.email,\n        codigoconfimacao: codigo\n      });\n      console.log(\"Minhas props no codigo de confirmação são\", props.history.location);\n    }).catch(error => {\n      console.log('Erro confirmando assinatura: ', error);\n      window.alert('Codigo de confirmação invalido');\n      setSubmitting(false);\n    });\n  }\n\n})(confirmSignUp));\nexport default ConfirmSignupForm;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/InicioDoCadastro/CodConfirmacao/index.js"],"names":["React","Form","withFormik","Yup","Auth","smartphone","withRouter","FormField","confirmSignUp","props","isValid","isSubmitting","ConfirmSignupForm","mapPropsToValues","codigo","validationSchema","object","shape","string","required","length","handleSubmit","setFieldError","setSubmitting","console","log","email","history","location","state","toString","then","result","push","initCadastro","codigoconfimacao","catch","error","window","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,QAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,+BAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAClB;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,GAAG,EAAEJ,UAAV;AAAsB,EAAA,GAAG,EAAC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAFJ,EAGI;AAAG,EAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAHJ,EAII,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,SAAD;AAAW,EAAA,EAAE,EAAC,YAAd;AAA2B,EAAA,IAAI,EAAC,MAAhC;AAAuC,EAAA,IAAI,EAAC,QAA5C;AAAqD,EAAA,KAAK,EAAC,gCAA3D;AAAmF,EAAA,QAAQ,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADJ,EAII;AAAQ,EAAA,SAAS,EAAC,YAAlB;AAA+B,EAAA,IAAI,EAAC,QAApC;AAA6C,EAAA,QAAQ,EAAG,CAACI,KAAK,CAACC,OAA/D;AAAyE,EAAA,QAAQ,EAAED,KAAK,CAACE,YAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,EAKI;AAAQ,EAAA,SAAS,EAAC,cAAlB;AAAiC,EAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,CAJJ,CADJ,CADJ,CADJ;;AAmBA,MAAMC,iBAAiB,GAAGN,UAAU,CAACJ,UAAU,CAAC;AAC5CW,EAAAA,gBAAgB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAa;AAC3B,WAAO;AACLA,MAAAA,MAAM,EAAEA,MAAM,IAAI;AADb,KAAP;AAGD,GAL2C;;AAM5CC,EAAAA,gBAAgB,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AACnCH,IAAAA,MAAM,EAAEX,GAAG,CAACe,MAAJ,GACLC,QADK,CACI,mBADJ,EAELC,MAFK,CAEE,CAFF,EAEK,iBAFL;AAD2B,GAAnB,CAN0B;;AAW5CC,EAAAA,YAAY,CAAC;AAAEP,IAAAA;AAAF,GAAD,EAAa;AAAEL,IAAAA,KAAF;AAASa,IAAAA,aAAT;AAAwBC,IAAAA;AAAxB,GAAb,EAAsD;AAChEA,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB;AAACC,MAAAA,KAAK,EAAEjB,KAAK,CAACkB,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BH,KAArC;AAA4CZ,MAAAA,MAAM,EAAEA;AAApD,KAAvB;AACAV,IAAAA,IAAI,CAACI,aAAL,CAAmBC,KAAK,CAACkB,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BH,KAAhD,EAAuDZ,MAAM,CAACgB,QAAP,EAAvD,EAA0EC,IAA1E,CAAgFC,MAAD,IAAY;AACvFT,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAd,MAAAA,KAAK,CAACkB,OAAN,CAAcM,IAAd,CAAmB,YAAnB,EAAiC;AAACC,QAAAA,YAAY,EAAEzB,KAAK,CAACkB,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BH,KAA5C;AAAmDS,QAAAA,gBAAgB,EAAErB;AAArE,OAAjC;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ,EAAyDhB,KAAK,CAACkB,OAAN,CAAcC,QAAvE;AACD,KAJH,EAKGQ,KALH,CAKSC,KAAK,IAAI;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CY,KAA7C;AACAC,MAAAA,MAAM,CAACC,KAAP,CAAa,gCAAb;AACAhB,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KATH;AAUD;;AAxB2C,CAAD,CAAV,CAyBhCf,aAzBgC,CAAD,CAApC;AA2BA,eAAeI,iBAAf","sourcesContent":["import React from 'react';\nimport { Form, withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Auth } from \"aws-amplify\";\n\nimport smartphone from './img/smartphone.png';\nimport '../CodConfirmacao/styles.scss';\nimport { withRouter } from 'react-router-dom';\n\nimport FormField from \"../../FormField\";\n\nconst confirmSignUp = (props) => (\n    <div className=\"containerCodConfirm\">\n        <div className=\"lightBox\">\n            <div className=\"lightBoxContent\">\n                <img src={smartphone} alt=\"Icone Cel\"/>\n                <h3>Confirme seu número de telefone</h3>\n                <p className=\"paragraph\">Enviamos um código de confirmação por SMS para você. Por favor, digite-o abaixo.</p>\n                <Form className=\"formConfirm\">\n                    <div className=\"inputInline\">\n                      <FormField id=\"codConfirm\" type=\"text\" name=\"codigo\" label=\"Código de confirmação\" required />\n                    </div>\n                    <button className=\"btnDefault\" type=\"submit\" disabled={ !props.isValid } required={props.isSubmitting}>Confirmar</button>\n                    <button className=\"btnSecundary\" type=\"submit\">Reenviar Código</button>\n                </Form>\n            </div>\n        </div>\n    </div>   \n);\n\nconst ConfirmSignupForm = withRouter(withFormik({\n    mapPropsToValues({ codigo }) {\n      return {\n        codigo: codigo || ''\n      }\n    },\n    validationSchema: Yup.object().shape({\n      codigo: Yup.string()\n        .required(\"Campo obrigatório\")\n        .length(6, 'Codigo inválido')\n    }),\n    handleSubmit({ codigo }, { props, setFieldError, setSubmitting }) {\n      setSubmitting(true);\n      console.log('Dados: ', {email: props.history.location.state.email, codigo: codigo});\n      Auth.confirmSignUp(props.history.location.state.email, codigo.toString()).then((result) => {\n          setSubmitting(false);\n          props.history.push('/dadosuser', {initCadastro: props.history.location.state.email, codigoconfimacao: codigo});\n          console.log(\"Minhas props no codigo de confirmação são\", props.history.location)\n        })\n        .catch(error => {\n          console.log('Erro confirmando assinatura: ', error);\n          window.alert('Codigo de confirmação invalido');\n          setSubmitting(false);\n        });\n    }\n  })(confirmSignUp));\n\nexport default ConfirmSignupForm;"]},"metadata":{},"sourceType":"module"}