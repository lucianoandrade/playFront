{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/features/PageContainer/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { Auth, API } from \"aws-amplify\";\nimport { connect } from \"react-redux\";\nimport { setUserData, setConsoles } from \"../../../store/actions/user.action\";\nimport config from \"../../../config/constants\";\nimport Loader from \"../../elements/Loader\";\nimport Menu from \"../Header/Menu\";\nimport Footer from \"../Footer\";\n\nfunction PageContainer(props) {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        redirect = _useState4[0],\n        setRedirect = _useState4[1];\n\n  const _useState5 = useState(undefined),\n        _useState6 = _slicedToArray(_useState5, 2),\n        user_data = _useState6[0],\n        setUser_data = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        to = _useState8[0],\n        setTo = _useState8[1];\n\n  useEffect(() => {\n    if (!has_user_data()) {\n      get_authenticated_user();\n    }\n  }, []);\n\n  const get_user_data = cognito_response => {\n    const user_id = cognito_response.attributes.sub;\n    console.log(\"USER_ID:\", user_id);\n    console.log(\"COGNITO RESPONSE: \", cognito_response);\n\n    if (props.user.data.entity_id) {\n      setLoading(false);\n      setUser_data({\n        cognito_user: cognito_response,\n        data: props.user\n      });\n      return;\n    }\n\n    API.get(config.APIS.PLAYERSTARS, \"/player/\".concat(user_id), {}).then(response => {\n      console.log(\"get user data bem sucedido. Response: \", response);\n      props.setUserData(response.data);\n      setLoading(false);\n      setUser_data({\n        cognito_user: cognito_response,\n        data: response.data\n      });\n    }).catch(error => {\n      console.log(\"get user data falhou: \", error);\n\n      if (error.response && error.response.status === 404) {\n        setRedirect(true);\n        setLoading(false);\n        setTo(\"/seus-dados\");\n      } else {\n        // this.redirect_to_error(\"Erro obtendo dados do usuário\");\n        setRedirect(true);\n        setLoading(false);\n        setTo(\"/\", {\n          state: {\n            message: error.message\n          }\n        });\n        console.log(\"Erro obtendo dados o usuário: \", error.response);\n      }\n    });\n    API.get(config.APIS.PLAYERSTARS, '/console/').then(response => {\n      console.log(\"ESSE E O RESPONSE\", response.data);\n      props.setConsoles(response.data);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \");\n    });\n  };\n\n  const get_authenticated_user = () => {\n    Auth.currentAuthenticatedUser().then(response => {\n      console.log(\"get_authenticated_user, response:\", response);\n\n      if (is_register_view()) {\n        setRedirect(true);\n        setLoading(false);\n        setTo(\"/\");\n        alert(\"Você já está no sistema\");\n      }\n\n      if (is_cadastro_view()) {\n        get_user_data(response);\n      } else {\n        setLoading(false);\n        setUserData({\n          cognito_user: response\n        });\n      }\n    }).catch(error => {\n      if (is_register_view()) {\n        setLoading(false);\n        setRedirect(false);\n      } else {\n        if (!is_public_view()) {\n          if (error === \"not authenticated\") {\n            setRedirect(true);\n            setLoading(false);\n            setTo(\"/login\");\n          } else {\n            setRedirect(true);\n            setLoading(false);\n            setTo(\"/\", {\n              state: {\n                message: error.message\n              }\n            });\n          }\n        } else {\n          setLoading(false);\n        }\n      }\n    });\n  };\n\n  const is_cadastro_view = () => {\n    return props.cadastro;\n  };\n\n  const is_register_view = () => {\n    return props.register;\n  };\n\n  const is_public_view = () => {\n    return props.public;\n  };\n\n  const has_user_data = () => {\n    return props.user_data !== undefined;\n  };\n\n  const renderLoading = () => {\n    return React.createElement(\"div\", {\n      className: \"Loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }));\n  };\n\n  const renderContent = () => {\n    const children = React.Children.map(props.children, child => React.cloneElement(child, {\n      user_data\n    }));\n    return React.createElement(React.Fragment, null, children);\n  };\n\n  const content = () => {\n    if (redirect) {\n      return React.createElement(Redirect, {\n        to: to,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }\n\n    return loading ? renderLoading() : renderContent();\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Menu, {\n    user_data: user_data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }), content, React.createElement(Footer, {\n    user_data: user_data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }));\n}\n\nPageContainer.propTypes = {\n  background: PropTypes.any,\n  backgroundHeight: PropTypes.string,\n  public: PropTypes.bool,\n  cadastro: PropTypes.bool\n};\nexport default connect(state => {\n  const user = state.user;\n  return {\n    user\n  };\n}, {\n  setUserData,\n  setConsoles\n})(PageContainer);","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/features/PageContainer/index.js"],"names":["React","useState","useEffect","PropTypes","Redirect","Auth","API","connect","setUserData","setConsoles","config","Loader","Menu","Footer","PageContainer","props","loading","setLoading","redirect","setRedirect","undefined","user_data","setUser_data","to","setTo","has_user_data","get_authenticated_user","get_user_data","cognito_response","user_id","attributes","sub","console","log","user","data","entity_id","cognito_user","get","APIS","PLAYERSTARS","then","response","catch","error","status","state","message","currentAuthenticatedUser","is_register_view","alert","is_cadastro_view","is_public_view","cadastro","register","public","renderLoading","renderContent","children","Children","map","child","cloneElement","content","propTypes","background","any","backgroundHeight","string","bool"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { Auth, API } from \"aws-amplify\";\nimport { connect } from \"react-redux\";\nimport { setUserData, setConsoles } from \"../../../store/actions/user.action\";\nimport config from \"../../../config/constants\";\nimport Loader from \"../../elements/Loader\";\nimport Menu from \"../Header/Menu\";\nimport Footer from \"../Footer\";\n\nfunction PageContainer (props) {\n  \n  const [loading, setLoading] = useState(true);\n  const [redirect, setRedirect] = useState(false);\n  const [user_data, setUser_data] = useState(undefined);\n  const [to, setTo] = useState(\"\");\n\n  useEffect(() => {\n    if (!has_user_data()) {\n      get_authenticated_user();\n    }\n  },[])\n\n\n  const get_user_data = (cognito_response) => {\n    \n    const user_id = cognito_response.attributes.sub;\n    console.log(\"USER_ID:\", user_id);\n    console.log(\"COGNITO RESPONSE: \", cognito_response);\n\n    if (props.user.data.entity_id) {\n      setLoading(false);\n      setUser_data({cognito_user: cognito_response, data:props.user})\n      return;\n    }\n\n    API.get(config.APIS.PLAYERSTARS, `/player/${user_id}`, {})\n      .then(response => {\n        console.log(\"get user data bem sucedido. Response: \", response);\n        props.setUserData(response.data);\n        setLoading(false);\n        setUser_data({cognito_user: cognito_response,data: response.data})\n      })\n      .catch(error => {\n        console.log(\"get user data falhou: \", error);\n        if (error.response && error.response.status === 404) {\n          setRedirect(true);\n          setLoading(false);\n          setTo(\"/seus-dados\")\n        } else {\n          // this.redirect_to_error(\"Erro obtendo dados do usuário\");\n          setRedirect(true);\n          setLoading(false);\n          setTo(\"/\", {state: {message: error.message}});\n          console.log(\"Erro obtendo dados o usuário: \", error.response);\n        }\n      });\n      API.get(config.APIS.PLAYERSTARS, '/console/')\n      .then(response => {\n          console.log(\"ESSE E O RESPONSE\", response.data)\n          props.setConsoles(response.data)\n      })\n      .catch(error => {\n          console.log(\"ERRO NO GET: \")\n      })\n  }\n\n  const get_authenticated_user = () => {\n    Auth.currentAuthenticatedUser()\n      .then(response => {\n        console.log(\"get_authenticated_user, response:\", response);\n        if (is_register_view()) {\n          setRedirect(true);\n          setLoading(false);\n          setTo(\"/\");\n          alert(\"Você já está no sistema\");\n        }\n        if (is_cadastro_view()) {\n          get_user_data(response);\n        } else {\n          setLoading(false);\n          setUserData({cognito_user: response});\n        }\n      })\n      .catch(error => {\n        if (is_register_view()) {\n          setLoading(false);\n          setRedirect(false);\n        } else {\n          if (!is_public_view()) {\n            if (error === \"not authenticated\") {\n              setRedirect(true);\n              setLoading(false);\n              setTo(\"/login\");\n            } else {\n              setRedirect(true);\n              setLoading(false);\n              setTo(\"/\", {state: {message: error.message}});\n            }\n          } else {\n            setLoading(false);\n          }\n        }\n      });\n  }\n\n  const is_cadastro_view = () => {\n    return props.cadastro;\n  }\n\n  const is_register_view = () => {\n    return props.register;\n  }\n\n  const is_public_view = () => {\n    return props.public;\n  }\n\n  const has_user_data = () => {\n    return props.user_data !== undefined;\n  }\n\n\n  const renderLoading = () => {\n    return (\n      <div className=\"Loading\">\n        <Loader />\n      </div>\n    );\n  }\n\n  const renderContent = () => {\n    const children = React.Children.map(props.children, child =>\n      React.cloneElement(child, { user_data })\n    );\n\n    return <>{children}</>;\n  }\n\n\n    const content = () => {\n      if (redirect) {\n        return <Redirect to={to} />;\n      }\n     return loading ? renderLoading() : renderContent();\n    }\n\n    return (\n      <>\n        <Menu user_data={user_data} />\n        {content}\n        <Footer user_data={user_data} />\n      </>\n    );  \n}\n\nPageContainer.propTypes = {\n  background: PropTypes.any,\n  backgroundHeight: PropTypes.string,\n  public: PropTypes.bool,\n  cadastro: PropTypes.bool\n};\n\nexport default connect(\n  state => {\n    const user = state.user;\n    return {\n      user\n    };\n  },\n  {\n    setUserData, setConsoles\n  }\n)(PageContainer);\n"]},"metadata":{},"sourceType":"module"}