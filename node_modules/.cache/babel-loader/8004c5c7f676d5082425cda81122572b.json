{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/NovaSenha/index.js\";\nimport React, { useState } from 'react';\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from 'react-router-dom';\nimport { useAlert } from 'react-alert';\nimport PageContainer from \"../../components/features/PageContainer\";\nimport newsenha from '../../assets/icons/nova-senha.png';\nimport './styles.scss';\nimport AlertMessage from '../../components/elements/AlertMessage';\n\nfunction NovaSenha(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        newPassword = _useState2[0],\n        setNewPassword = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        confNewPassword = _useState4[0],\n        setConfNewPassword = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        btn_disabled = _useState6[0],\n        setBtn_disabled = _useState6[1];\n\n  const _useState7 = useState('#BBB'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        btn_color = _useState8[0],\n        setBtn_color = _useState8[1];\n\n  const alert = useAlert;\n\n  const on_input = ev => {\n    if (newPassword.length >= 5 && confNewPassword.length >= 5) {\n      setBtn_disabled(false);\n      setBtn_color('#000');\n    } else {\n      setBtn_disabled(true);\n      setBtn_color('#BBB');\n    }\n  };\n\n  const forgotPasswordSubmit = ev => {\n    ev.preventDefault();\n\n    if (newPassword !== confNewPassword) {\n      alert.error(\"As senhas digitadas não estão idênticas.\");\n    } else {\n      Auth.forgotPasswordSubmit(props.history.location.state.email, props.history.location.state.code, newPassword).then(data => {\n        console.log('NOVO SENHA', data);\n        props.history.push('/login');\n        alert.success('Senha Trocada com Sucesso');\n      }).catch(err => {\n        console.log('ERROR', err);\n\n        if (err.code === 'CodeMismatchException') {\n          props.history.push('/codigo-de-confirmacao', {\n            email: props.history.location.state.email\n          });\n          alert.error(AlertMessage.CodeMismatchException);\n        } else {\n          alert.error(AlertMessage.tryAgain);\n          this.props.history.push('/');\n        }\n      });\n    }\n  };\n\n  return React.createElement(PageContainer, {\n    public: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerNovaSenha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lightBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lightBoxContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: newsenha,\n    alt: \"Icone Cel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Criar nova senha\"), React.createElement(\"p\", {\n    className: \"paragraph\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Agora \\xE9 s\\xF3 redefnir sua senha!\"), React.createElement(\"form\", {\n    className: \"formConfirm\",\n    onSubmit: forgotPasswordSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"newPassword\",\n    type: \"password\",\n    onInput: on_input,\n    onChange: e => setNewPassword(e.target.value),\n    name: \"newPassword\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"newPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Nova Senha\")), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"confNewPassword\",\n    type: \"password\",\n    onInput: on_input,\n    onChange: e => setConfNewPassword(e.target.value),\n    name: \"confNewPassword\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"confnewpassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Repetir nova senha\")), React.createElement(\"button\", {\n    className: \"btnDefault\",\n    disabled: btn_disabled,\n    style: {\n      background: \"\".concat(btn_color)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Confirmar\"))))));\n}\n\nexport default withRouter(NovaSenha);","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/NovaSenha/index.js"],"names":["React","useState","Auth","withRouter","useAlert","PageContainer","newsenha","AlertMessage","NovaSenha","props","newPassword","setNewPassword","confNewPassword","setConfNewPassword","btn_disabled","setBtn_disabled","btn_color","setBtn_color","alert","on_input","ev","length","forgotPasswordSubmit","preventDefault","error","history","location","state","email","code","then","data","console","log","push","success","catch","err","CodeMismatchException","tryAgain","e","target","value","background"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Auth } from \"aws-amplify\";\nimport { withRouter } from 'react-router-dom';\nimport { useAlert } from 'react-alert';\nimport PageContainer from \"../../components/features/PageContainer\";\nimport newsenha from '../../assets/icons/nova-senha.png';\n\nimport './styles.scss';\nimport AlertMessage from '../../components/elements/AlertMessage';\n\nfunction NovaSenha (props) {\n\n    const [newPassword, setNewPassword] = useState('');\n    const [confNewPassword, setConfNewPassword] = useState('');\n    const [btn_disabled, setBtn_disabled] = useState(true);\n    const [btn_color, setBtn_color] = useState('#BBB');\n    const alert = useAlert;\n     \n    const on_input = (ev) => {\n        if (newPassword.length >= 5 && confNewPassword.length >= 5) {\n            setBtn_disabled(false);\n            setBtn_color('#000')\n        } else {\n            setBtn_disabled(true);\n            setBtn_color('#BBB')\n        }\n    }\n\n    const forgotPasswordSubmit = (ev) => {\n        ev.preventDefault()\n        if (newPassword !== confNewPassword) {\n           alert.error(\"As senhas digitadas não estão idênticas.\");\n        } else {\n            Auth.forgotPasswordSubmit(props.history.location.state.email, props.history.location.state.code, newPassword)\n            .then(data => {\n                console.log('NOVO SENHA', data)\n                props.history.push('/login')\n                alert.success('Senha Trocada com Sucesso')\n            })\n            .catch(err => {\n                console.log('ERROR', err)\n                if(err.code === 'CodeMismatchException') {\n                    props.history.push('/codigo-de-confirmacao', { email: props.history.location.state.email });\n                    alert.error(AlertMessage.CodeMismatchException)\n                } else  {\n                    alert.error(AlertMessage.tryAgain);\n                    this.props.history.push('/');\n                }\n            })\n        }\n    }\n\n    return (\n        <PageContainer public={true}>\n        <div className=\"containerNovaSenha\">\n            <div className=\"lightBox\">\n                <div className=\"lightBoxContent\">\n                    <img src={newsenha} alt=\"Icone Cel\" />\n                    <h3>Criar nova senha</h3>\n                    <p className=\"paragraph\">Agora é só redefnir sua senha!</p>\n                    <form className=\"formConfirm\" onSubmit={forgotPasswordSubmit}>\n                        <fieldset>\n                            <input id=\"newPassword\" type=\"password\" onInput={on_input} onChange={e => setNewPassword(e.target.value)} name=\"newPassword\" required />\n                            <label className=\"label\" htmlFor=\"newPassword\">Nova Senha</label>\n                        </fieldset>\n                        <fieldset>\n                            <input id=\"confNewPassword\" type=\"password\" onInput={on_input} onChange={e => setConfNewPassword(e.target.value)} name=\"confNewPassword\" required />\n                            <label className=\"label\" htmlFor=\"confnewpassword\">Repetir nova senha</label>\n                        </fieldset>\n\n                        <button\n                            className=\"btnDefault\"\n                            disabled={btn_disabled}\n                            style={{ background: `${btn_color}` }}\n                        >Confirmar</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n        </PageContainer>\n    )\n}\n\nexport default withRouter(NovaSenha);"]},"metadata":{},"sourceType":"module"}