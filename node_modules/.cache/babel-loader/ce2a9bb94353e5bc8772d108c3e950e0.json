{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Ranking/Filter/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Select from '../../../components/elements/Select/index';\nimport './styles.scss';\n\nfunction Filter(props) {\n  let consolesRedux = useSelector(state => state.user.consoles);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        plataformSelected = _useState2[0],\n        setPlataformSelected = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        gameSelected = _useState4[0],\n        setGameSelected = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        categorySelected = _useState6[0],\n        setCategorySelected = _useState6[1];\n\n  const optionsCategory = [{\n    label: \"Individual\",\n    value: \"Individual\"\n  }, {\n    label: \"Por times\",\n    value: \"Por times\"\n  }, {\n    label: \"Meus times\",\n    value: \"Meus times\"\n  }];\n\n  let formattedConsoleGeneric = JSONValue => {\n    return JSONValue.map(consoleJSON => {\n      consoleJSON.value = consoleJSON.entity_id;\n      consoleJSON.label = consoleJSON.name;\n      return consoleJSON;\n    });\n  };\n\n  let FormattedJSONConsoles = formattedConsoleGeneric(consolesRedux);\n  let currentConsoleGames = !!plataformSelected.length && FormattedJSONConsoles.find(specificConsole => specificConsole.name === plataformSelected).games;\n  let FormattedJSONConsolesGames = !!plataformSelected.length && formattedConsoleGeneric(currentConsoleGames);\n  useEffect(() => {\n    setPlataformSelected(FormattedJSONConsoles[0].name);\n    setGameSelected(FormattedJSONConsolesGames[0] && FormattedJSONConsolesGames[0].name);\n    props.setFilter(\"platform\", FormattedJSONConsoles[0], \"game\", FormattedJSONConsolesGames[0]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    const platform = FormattedJSONConsoles.find(item => item.name === c.name && item.games);\n    if (plataformSelected) setGameSelected(FormattedJSONConsolesGames[0].name);\n    props.setFilter(\"platform\", platform, \"game\", FormattedJSONConsolesGames[0]); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [plataformSelected]);\n\n  function platformInitial(c) {\n    setPlataformSelected(c.name);\n  } // function changePlatform(c) {\n  //     const platform = FormattedJSONConsoles.find(item => item.name === c.name && item.games)\n  //     setPlataformSelected(c.name)\n  //     setGameSelected(platform.games[0].name)\n  //     props.setFilter(\"platform\", c, \"game\", platform.games[0])\n  // }\n\n\n  function changeGame(c) {\n    setGameSelected(c.name);\n    props.setFilter(\"game\", c);\n  }\n\n  function changeCategory(c) {\n    setCategorySelected(c.value);\n    props.setFilter(\"category\", c.value);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"containerFilter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelects\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: platformInitial,\n    width: '150px',\n    placeholder: FormattedJSONConsoles.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma',\n    options: FormattedJSONConsoles,\n    classNames: 'select-class',\n    name: \"platform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changeGame,\n    width: '150px',\n    placeholder: FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo',\n    options: !!plataformSelected.length ? FormattedJSONConsolesGames : [],\n    classNames: 'select-class',\n    name: \"game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerSelect\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Select, {\n    onChange: changeCategory,\n    width: '150px',\n    placeholder: optionsCategory.find(item => item.value === categorySelected) ? categorySelected : optionsCategory[0].value,\n    options: optionsCategory,\n    classNames: 'select-class',\n    name: \"categoria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))));\n}\n\nexport default Filter;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Ranking/Filter/index.js"],"names":["React","useState","useEffect","useSelector","Select","Filter","props","consolesRedux","state","user","consoles","plataformSelected","setPlataformSelected","gameSelected","setGameSelected","categorySelected","setCategorySelected","optionsCategory","label","value","formattedConsoleGeneric","JSONValue","map","consoleJSON","entity_id","name","FormattedJSONConsoles","currentConsoleGames","length","find","specificConsole","games","FormattedJSONConsolesGames","setFilter","platform","item","c","platformInitial","changeGame","changeCategory"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport Select from '../../../components/elements/Select/index';\n\nimport './styles.scss';\n\nfunction Filter(props) {\n    \n    let consolesRedux = useSelector(state => state.user.consoles)\n\n    const [plataformSelected, setPlataformSelected] = useState('')\n    const [gameSelected, setGameSelected] = useState('')\n    const [categorySelected, setCategorySelected] = useState('')\n\n    const optionsCategory = [\n        { label: \"Individual\", value: \"Individual\" },\n        { label: \"Por times\", value: \"Por times\" },\n        { label: \"Meus times\", value: \"Meus times\" },\n      ];\n    \n    let formattedConsoleGeneric = (JSONValue) => {\n        return JSONValue.map((consoleJSON) => {\n            consoleJSON.value = consoleJSON.entity_id;\n            consoleJSON.label = consoleJSON.name;\n            return consoleJSON\n        })\n    }\n\n    let FormattedJSONConsoles = formattedConsoleGeneric(consolesRedux);\n    let currentConsoleGames = !!plataformSelected.length && FormattedJSONConsoles.find((specificConsole) => specificConsole.name === plataformSelected).games\n    let FormattedJSONConsolesGames = !!plataformSelected.length && formattedConsoleGeneric(currentConsoleGames)\n\n    useEffect(() => {\n        setPlataformSelected(FormattedJSONConsoles[0].name)\n        setGameSelected(FormattedJSONConsolesGames[0] && FormattedJSONConsolesGames[0].name)\n        props.setFilter(\"platform\", FormattedJSONConsoles[0], \"game\", FormattedJSONConsolesGames[0])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        const platform = FormattedJSONConsoles.find(item => item.name === c.name && item.games)\n        if(plataformSelected)\n            setGameSelected(FormattedJSONConsolesGames[0].name)\n            props.setFilter(\"platform\", platform, \"game\", FormattedJSONConsolesGames[0])\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [plataformSelected])\n\n    function platformInitial(c) {\n        setPlataformSelected(c.name)\n    }\n\n    // function changePlatform(c) {\n    //     const platform = FormattedJSONConsoles.find(item => item.name === c.name && item.games)\n    //     setPlataformSelected(c.name)\n    //     setGameSelected(platform.games[0].name)\n    //     props.setFilter(\"platform\", c, \"game\", platform.games[0])\n    // }\n\n    function changeGame(c) {\n        setGameSelected(c.name)\n        props.setFilter(\"game\", c)\n    }\n\n    function changeCategory(c) {\n        setCategorySelected(c.value)\n        props.setFilter(\"category\", c.value)\n    }\n    return (\n        <div className=\"containerFilter\">\n            <div className=\"containerSelects\">\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={platformInitial}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsoles.find(item => item.name === plataformSelected) ? plataformSelected : 'Plataforma'}\n                        options={FormattedJSONConsoles}\n                        classNames={'select-class'}\n                        name=\"platform\"\n                    />\n                </div>\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changeGame}\n                        width={'150px'}\n                        placeholder={FormattedJSONConsolesGames && FormattedJSONConsolesGames.find(item => item.name === gameSelected) ? gameSelected : 'Jogo'}\n                        options={!!plataformSelected.length ? FormattedJSONConsolesGames : []}\n                        classNames={'select-class'}\n                        name=\"game\"\n                    />\n                </div>\n                <div className=\"containerSelect\">\n                    <Select\n                        onChange={changeCategory}\n                        width={'150px'}\n                        placeholder={optionsCategory.find(item => item.value === categorySelected) ? categorySelected : optionsCategory[0].value} \n                        options={optionsCategory}\n                        classNames={'select-class'}\n                        name=\"categoria\"\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Filter;"]},"metadata":{},"sourceType":"module"}