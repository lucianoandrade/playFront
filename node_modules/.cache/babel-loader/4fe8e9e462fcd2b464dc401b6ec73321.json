{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js\";\n// import React from 'react';\n// import iconNext from '../img/Direita.png';\n// import iconPreview from '../img/Esquerda.png';\n// import './styles.scss';\n// function Navigation(props) {\n//     // const { pagination, setPage } = props\n//     const { page, total, per_page } = props.pagination\n//     const isActived = (_page) => {\n//         if (page === _page)\n//             return \"activated\"\n//         return \"\"\n//     }\n//     const prevPage = () => {\n//         if(page > 1)\n//         props.setPage(page - 1)\n//     }\n//     const nextPage = () => {\n//         console.log(\"nextPage\")\n//         if(page < countPages ){\n//            props.setPage(page + 1)\n//         }\n//     }\n//     const countPages =  ((total - (total % per_page)) / per_page) +((total % per_page) !== 0 ? 1 : 0)\n//     console.log(\":::::CONUNT PAGE\", countPages )\n//     const listPages = new Array(parseInt(countPages)).fill(null)\n//     console.log(\":::::LIST PAGE\", listPages)\n//     const marginOffset = () => {\n//         if(countPages - page < 4 && countPages > 3){\n//             return -((countPages-4)*42)\n//         }\n//         return -((page-1)*42)\n//     }\n//     const width = () => {\n//         if(countPages < 4){\n//             return countPages*42\n//         }\n//         return 4*42\n//     }\n//     return (\n//         <div className=\"containerNavigation\">\n//             <div className=\"icon\" onClick={prevPage}><img src={iconPreview} alt=\"next\" /></div>\n//             <div className=\"navigationBody\" style={{width: width()}}>\n//                 <div className=\"navigationList\" style={{marginLeft: marginOffset()}}>\n//                     {listPages.map((item, index) => {\n//                         const current = index + 1\n//                         return <span onClick={()=>props.setPage(current)} key={index} className={`page ${isActived(current)}`}> {current} </span>\n//                     }\n//                     )}\n//                 </div>\n//             </div>\n//             {countPages > 4 && page < countPages - 3 && <span className={`page`}> ... </span>}\n//             <div className=\"icon\" onClick={nextPage}><img src={iconNext} alt=\"next\" /></div>\n//         </div>\n//     )\n// }\n// export default Navigation;\nimport React from \"react\";\nimport ReactNextPaging from \"react-next-paging\";\nconst buttonStyles = {\n  border: \"1px solid #ccc\",\n  background: \"#fff\",\n  fontSize: \"1em\",\n  padding: 10,\n  margin: 5,\n  width: 70\n};\n\nconst PaginacionTabla = ({\n  itemsperpage,\n  nocolumns,\n  items,\n  pagesspan\n}) => {\n  return React.createElement(ReactNextPaging, {\n    itemsperpage: itemsperpage,\n    nocolumns: nocolumns,\n    items: items,\n    pagesspan: pagesspan,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, ({\n    getBackButtonProps,\n    getFastBackButtonProps,\n    getFwdButtonProps,\n    getFastFwdButtonProps,\n    getSelPageButtonProps,\n    nopages,\n    inipagearray,\n    pagesforarray,\n    currentpage,\n    noitems,\n    initialitem,\n    lastitem,\n    goBackBdisabled,\n    goFastBackBdisabled,\n    goFwdBdisabled,\n    goFastFwdBdisabled\n  }) => React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, items.slice(initialitem, lastitem).map((item, index) => {\n    return item;\n  }), noitems > 0 ? [React.createElement(\"tr\", {\n    key: \"pagingrow\" + 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    colSpan: nocolumns,\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"button\", Object.assign({\n    style: buttonStyles\n  }, getFastBackButtonProps(), {\n    disabled: goFastBackBdisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), \"<<\"), React.createElement(\"button\", Object.assign({\n    style: buttonStyles\n  }, getBackButtonProps(), {\n    disabled: goBackBdisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), \"<\"), Array.from({\n    length: pagesforarray\n  }, (v, i) => i + inipagearray).map(page => {\n    return React.createElement(\"button\", Object.assign({\n      key: page\n    }, getSelPageButtonProps({\n      page: page\n    }), {\n      disabled: currentpage == page,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), page);\n  }), React.createElement(\"button\", Object.assign({\n    style: buttonStyles\n  }, getFwdButtonProps(), {\n    disabled: goFwdBdisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }), \">\"), React.createElement(\"button\", Object.assign({\n    style: buttonStyles\n  }, getFastFwdButtonProps(), {\n    disabled: goFastFwdBdisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), \">>\")))] : null));\n};\n\nexport default PaginacionTabla;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js"],"names":["React","ReactNextPaging","buttonStyles","border","background","fontSize","padding","margin","width","PaginacionTabla","itemsperpage","nocolumns","items","pagesspan","getBackButtonProps","getFastBackButtonProps","getFwdButtonProps","getFastFwdButtonProps","getSelPageButtonProps","nopages","inipagearray","pagesforarray","currentpage","noitems","initialitem","lastitem","goBackBdisabled","goFastBackBdisabled","goFwdBdisabled","goFastFwdBdisabled","slice","map","item","index","textAlign","Array","from","length","v","i","page"],"mappings":"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","sourcesContent":["// import React from 'react';\n\n// import iconNext from '../img/Direita.png';\n// import iconPreview from '../img/Esquerda.png';\n\n// import './styles.scss';\n\n// function Navigation(props) {\n\n//     // const { pagination, setPage } = props\n//     const { page, total, per_page } = props.pagination\n\n//     const isActived = (_page) => {\n//         if (page === _page)\n//             return \"activated\"\n//         return \"\"\n//     }\n\n//     const prevPage = () => {\n//         if(page > 1)\n//         props.setPage(page - 1)\n//     }\n\n//     const nextPage = () => {\n//         console.log(\"nextPage\")\n//         if(page < countPages ){\n//            props.setPage(page + 1)\n//         }\n//     }\n\n//     const countPages =  ((total - (total % per_page)) / per_page) +((total % per_page) !== 0 ? 1 : 0)\n//     console.log(\":::::CONUNT PAGE\", countPages )\n//     const listPages = new Array(parseInt(countPages)).fill(null)\n//     console.log(\":::::LIST PAGE\", listPages)\n//     const marginOffset = () => {\n//         if(countPages - page < 4 && countPages > 3){\n//             return -((countPages-4)*42)\n//         }\n//         return -((page-1)*42)\n//     }\n\n//     const width = () => {\n//         if(countPages < 4){\n//             return countPages*42\n//         }\n//         return 4*42\n//     }\n\n//     return (\n//         <div className=\"containerNavigation\">\n//             <div className=\"icon\" onClick={prevPage}><img src={iconPreview} alt=\"next\" /></div>\n//             <div className=\"navigationBody\" style={{width: width()}}>\n//                 <div className=\"navigationList\" style={{marginLeft: marginOffset()}}>\n//                     {listPages.map((item, index) => {\n//                         const current = index + 1\n//                         return <span onClick={()=>props.setPage(current)} key={index} className={`page ${isActived(current)}`}> {current} </span>\n//                     }\n//                     )}\n//                 </div>\n//             </div>\n//             {countPages > 4 && page < countPages - 3 && <span className={`page`}> ... </span>}\n\n//             <div className=\"icon\" onClick={nextPage}><img src={iconNext} alt=\"next\" /></div>\n//         </div>\n//     )\n// }\n\n// export default Navigation;\nimport React from \"react\";\nimport ReactNextPaging from \"react-next-paging\";\n\nconst buttonStyles = {\n  border: \"1px solid #ccc\",\n  background: \"#fff\",\n  fontSize: \"1em\",\n  padding: 10,\n  margin: 5,\n  width: 70\n};\n\nconst PaginacionTabla = ({ itemsperpage, nocolumns, items, pagesspan }) => {\n  return (\n    <ReactNextPaging\n      itemsperpage={itemsperpage}\n      nocolumns={nocolumns}\n      items={items}\n      pagesspan={pagesspan}\n    >\n      {({\n        getBackButtonProps,\n        getFastBackButtonProps,\n        getFwdButtonProps,\n        getFastFwdButtonProps,\n        getSelPageButtonProps,\n        nopages,\n        inipagearray,\n        pagesforarray,\n        currentpage,\n        noitems,\n        initialitem,\n        lastitem,\n        goBackBdisabled,\n        goFastBackBdisabled,\n        goFwdBdisabled,\n        goFastFwdBdisabled\n      }) => (\n        <tbody>\n          {items.slice(initialitem, lastitem).map((item, index) => {\n            return item;\n          })}\n          {noitems > 0\n            ? [\n                <tr key={\"pagingrow\" + 100}>\n                  <td colSpan={nocolumns} style={{ textAlign: \"center\" }}>\n                    <button\n                      style={buttonStyles}\n                      {...getFastBackButtonProps()}\n                      disabled={goFastBackBdisabled}\n                    >\n                      {\"<<\"}\n                    </button>\n                    <button\n                      style={buttonStyles}\n                      {...getBackButtonProps()}\n                      disabled={goBackBdisabled}\n                    >\n                      {\"<\"}\n                    </button>\n                    {Array.from(\n                      { length: pagesforarray },\n                      (v, i) => i + inipagearray\n                    ).map(page => {\n                      return (\n                        <button\n                          key={page}\n                          {...getSelPageButtonProps({ page: page })}\n                          disabled={currentpage == page}\n                        >\n                          {page}\n                        </button>\n                      );\n                    })}\n                    <button\n                      style={buttonStyles}\n                      {...getFwdButtonProps()}\n                      disabled={goFwdBdisabled}\n                    >\n                      {\">\"}\n                    </button>\n                    <button\n                      style={buttonStyles}\n                      {...getFastFwdButtonProps()}\n                      disabled={goFastFwdBdisabled}\n                    >\n                      {\">>\"}\n                    </button>\n                  </td>\n                </tr>\n              ]\n            : null}\n        </tbody>\n      )}\n    </ReactNextPaging>\n  );\n};\n\nexport default PaginacionTabla;"]},"metadata":{},"sourceType":"module"}