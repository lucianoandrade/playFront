{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js\";\n\n// import React from 'react';\n// import ReactPaginate from 'react-paginate';\n// import iconNext from '../img/Direita.png';\n// import iconPreview from '../img/Esquerda.png';\n// import './styles.scss';\n// const Navigation = (props) => {\n//     const { page, total, per_page } = props.pagination\n//     console.log('::::::props.pagination::::::', props.pagination )\n//    const handlePageClick = () => listPages.map((item, index) => {\n//        props.setPage(index + 1)\n//        return page\n//    })\nconst prevPage = () => {\n  if (page > 1) props.setPage(page - 1);\n};\n\nconst nextPage = () => {\n  console.log(\"nextPage\");\n\n  if (page < countPages) {\n    props.setPage(page + 1);\n  }\n}; //     const countPages =  ((total - (total % per_page)) / per_page) + ((total % per_page) !== 0 ? 1 : 0)\n//     console.log(\":::::CONUNT PAGE\", countPages )\n//     const listPages = new Array(parseInt(countPages)).fill(null)\n//     console.log(\":::::LIST PAGE\", listPages)\n//     return (\n//         <ReactPaginate\n//             previousLabel={<div className=\"icon\"><img src={iconPreview} alt=\"next\"/></div>}\n//             nextLabel={<div className=\"icon\"><img src={iconNext} alt=\"next\" /></div>}\n//             breakLabel={'...'}\n//             pageCount={countPages}\n//             onPageChange={handlePageClick}\n//             forcePage={0}\n//             breakClassName={'rest'}\n//             containerClassName={'containerNavigation'}\n//             pageClassName={'page'}\n//         />\n//     )\n// }\n// export default Navigation;\n\n\nimport React from 'react';\nimport iconNext from '../img/Direita.png';\nimport iconPreview from '../img/Esquerda.png';\nimport './styles.scss';\n\nfunction Navigation(props) {\n  // const { pagination, setPage } = props\n  const _props$pagination = props.pagination,\n        page = _props$pagination.page,\n        total = _props$pagination.total,\n        per_page = _props$pagination.per_page; // const isActived = (_page) => {\n  //     if (page === _page)\n  //         return \"activated\"\n  //     return \"\"\n  // }\n\n  const prevPage = () => {\n    if (page > 1) props.setPage(page - 1);\n  };\n\n  const nextPage = () => {\n    console.log(\"nextPage\");\n\n    if (page < countPages) {\n      props.setPage(page + 1);\n    }\n  };\n\n  const countPages = (total - total % per_page) / per_page + (total % per_page !== 0 ? 1 : 0);\n  console.log(\":::::CONUNT PAGE\", countPages);\n  const listPages = new Array(parseInt(countPages)).fill(null);\n  console.log(\":::::LIST PAGE\", listPages); // const marginOffset = () => {\n  //     if(countPages - page < 4 && countPages > 3){\n  //         return -((countPages-4)*42)\n  //     }\n  //     return -((page-1)*42)\n  // }\n  // const width = () => {\n  //     if(countPages < 4){\n  //         return countPages*42\n  //     }\n  //     return 4*42\n  // }\n\n  return React.createElement(\"div\", {\n    className: \"containerNavigation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"icon\",\n    onClick: prevPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: iconPreview,\n    alt: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"navigationBody\" // style={{width: width()}}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"navigationList\" // style={{marginLeft: marginOffset()}}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, listPages.map((item, index) => {\n    // const current = index + 1\n    return React.createElement(\"span\", {\n      onClick: () => props.setPage(index + 1),\n      key: index // className={`page ${isActived(current)}`}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" \", index + 1, \" \");\n  }))), countPages > 4 && page < countPages - 3 && React.createElement(\"span\", {\n    className: \"page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \" ... \"), React.createElement(\"div\", {\n    className: \"icon\",\n    onClick: nextPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: iconNext,\n    alt: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })));\n}\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js"],"names":["prevPage","page","props","setPage","nextPage","console","log","countPages","React","iconNext","iconPreview","Navigation","pagination","total","per_page","listPages","Array","parseInt","fill","map","item","index"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import ReactPaginate from 'react-paginate';\n\n// import iconNext from '../img/Direita.png';\n// import iconPreview from '../img/Esquerda.png';\n\n// import './styles.scss';\n\n// const Navigation = (props) => {\n\n//     const { page, total, per_page } = props.pagination\n//     console.log('::::::props.pagination::::::', props.pagination )\n\n//    const handlePageClick = () => listPages.map((item, index) => {\n//        props.setPage(index + 1)\n//        return page\n//    })\n\nconst prevPage = () => {\n    if(page > 1)\n    props.setPage(page - 1)\n}\n\nconst nextPage = () => {\n    console.log(\"nextPage\")\n    if(page < countPages ){\n       props.setPage(page + 1)\n    }\n}\n\n//     const countPages =  ((total - (total % per_page)) / per_page) + ((total % per_page) !== 0 ? 1 : 0)\n//     console.log(\":::::CONUNT PAGE\", countPages )\n//     const listPages = new Array(parseInt(countPages)).fill(null)\n//     console.log(\":::::LIST PAGE\", listPages)\n  \n//     return (\n//         <ReactPaginate\n//             previousLabel={<div className=\"icon\"><img src={iconPreview} alt=\"next\"/></div>}\n//             nextLabel={<div className=\"icon\"><img src={iconNext} alt=\"next\" /></div>}\n//             breakLabel={'...'}\n//             pageCount={countPages}\n//             onPageChange={handlePageClick}\n//             forcePage={0}\n//             breakClassName={'rest'}\n//             containerClassName={'containerNavigation'}\n//             pageClassName={'page'}\n//         />\n//     )\n// }\n\n// export default Navigation;\n\nimport React from 'react';\n\nimport iconNext from '../img/Direita.png';\nimport iconPreview from '../img/Esquerda.png';\n\nimport './styles.scss';\n\nfunction Navigation(props) {\n\n    // const { pagination, setPage } = props\n    const { page, total, per_page } = props.pagination\n\n    // const isActived = (_page) => {\n    //     if (page === _page)\n    //         return \"activated\"\n    //     return \"\"\n    // }\n\n    const prevPage = () => {\n        if(page > 1)\n        props.setPage(page - 1)\n    }\n\n    const nextPage = () => {\n        console.log(\"nextPage\")\n        if(page < countPages ){\n           props.setPage(page + 1)\n        }\n    }\n\n    const countPages =  ((total - (total % per_page)) / per_page) +((total % per_page) !== 0 ? 1 : 0)\n    console.log(\":::::CONUNT PAGE\", countPages )\n    const listPages = new Array(parseInt(countPages)).fill(null)\n    console.log(\":::::LIST PAGE\", listPages)\n    \n    // const marginOffset = () => {\n    //     if(countPages - page < 4 && countPages > 3){\n    //         return -((countPages-4)*42)\n    //     }\n    //     return -((page-1)*42)\n    // }\n\n    // const width = () => {\n    //     if(countPages < 4){\n    //         return countPages*42\n    //     }\n    //     return 4*42\n    // }\n\n    return (\n        <div className=\"containerNavigation\">\n            <div className=\"icon\" onClick={prevPage}><img src={iconPreview} alt=\"next\" /></div>\n            <div className=\"navigationBody\" \n            // style={{width: width()}}\n            >\n                <div className=\"navigationList\" \n                // style={{marginLeft: marginOffset()}}\n                >\n                    {listPages.map((item, index) => {\n                        // const current = index + 1\n                        return <span onClick={()=>props.setPage(index + 1)} key={index} \n                        // className={`page ${isActived(current)}`}\n                        > {index + 1} </span>\n                    }\n                    )}\n                </div>\n            </div>\n            {countPages > 4 && page < countPages - 3 && <span className={`page`}> ... </span>}\n\n            <div className=\"icon\" onClick={nextPage}><img src={iconNext} alt=\"next\" /></div>\n        </div>\n    )\n}\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}