{"ast":null,"code":"import _defineProperty from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Perfil/EditarConsoles/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { API } from \"aws-amplify\";\nimport config from \"../../../config/constants\";\nimport { useSelector } from 'react-redux';\nimport './styles.scss';\n\nfunction EditarConsoles() {\n  const currentConsoles = useSelector(state => state.user.data.consoles);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userConsole = _useState2[0],\n        setUserConsole = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        consoles = _useState4[0],\n        setConsoles = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        form = _useState6[0],\n        setForm = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isValid = _useState8[0],\n        setValidation = _useState8[1];\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/console/').then(response => {\n      console.log(\"ESSE E O RESPONSE\", response.data);\n      setUserConsole(response.data);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \");\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    setValidation(verifyValid(form)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [form]);\n\n  const handleChangeInput = ev => {\n    setForm(_objectSpread({}, form, {\n      [ev.target.name]: {\n        entity_id: ev.target.id,\n        tag_name: ev.target.value\n      }\n    }));\n  };\n\n  const verifyValid = _form => {\n    return !!Object.keys(form).find(key => {\n      return !!form[key].tag_name;\n    });\n  };\n\n  const handleSubmit = () => {\n    API.put(config.APIS.PLAYERSTARS, '/player/console-data', options).then(response => {\n      props.history.push('/perfil');\n    }).catch(error => {\n      console.log('Esse é o retorno das options', options);\n      window.alert('Erro fazendo post dos dados do usuário.');\n    });\n  };\n\n  return React.createElement(\"section\", {\n    className: \"containerEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titleEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Editar plataformas\"), React.createElement(\"p\", {\n    className: \"subTitleEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Quais plataformas voc\\xEA usa?\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"dadosConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, userConsole.length > 0 ? userConsole.map((platform, index) => React.createElement(\"fieldset\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: platform.name,\n    type: \"text\",\n    name: platform.name,\n    defaultValue: findConsole(currentConsoles, platform.name) // required\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: platform.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Tagname do \", platform.name))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"containerBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btnCancel\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Cancelar\"), React.createElement(\"button\", {\n    className: \"btnSave\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Salvar altera\\xE7\\xF5es\")))));\n}\n\nexport default EditarConsoles;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Perfil/EditarConsoles/index.js"],"names":["React","useState","useEffect","API","config","useSelector","EditarConsoles","currentConsoles","state","user","data","consoles","userConsole","setUserConsole","setConsoles","form","setForm","isValid","setValidation","get","APIS","PLAYERSTARS","then","response","console","log","catch","error","verifyValid","handleChangeInput","ev","target","name","entity_id","id","tag_name","value","_form","Object","keys","find","key","handleSubmit","put","options","props","history","push","window","alert","length","map","platform","index","findConsole"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,eAAP;;AAEA,SAASC,cAAT,GAA0B;AACtB,QAAMC,eAAe,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,QAA1B,CAAnC;;AADsB,oBAEgBV,QAAQ,CAAC,EAAD,CAFxB;AAAA;AAAA,QAEfW,WAFe;AAAA,QAEFC,cAFE;;AAAA,qBAIUZ,QAAQ,CAAC,EAAD,CAJlB;AAAA;AAAA,QAIfU,QAJe;AAAA,QAILG,WAJK;;AAAA,qBAKEb,QAAQ,CAAC,EAAD,CALV;AAAA;AAAA,QAKfc,IALe;AAAA,QAKTC,OALS;;AAAA,qBAMWf,QAAQ,CAAC,KAAD,CANnB;AAAA;AAAA,QAMfgB,OANe;AAAA,QAMNC,aANM;;AAQtBhB,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,GAAG,CAACgB,GAAJ,CAAQf,MAAM,CAACgB,IAAP,CAAYC,WAApB,EAAiC,WAAjC,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,QAAQ,CAACb,IAA1C;AACAG,MAAAA,cAAc,CAACU,QAAQ,CAACb,IAAV,CAAd;AACH,KAJL,EAKKgB,KALL,CAKWC,KAAK,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KAPL,EADY,CASR;AACP,GAVQ,EAUN,EAVM,CAAT;AAcAvB,EAAAA,SAAS,CAAC,MAAI;AACVgB,IAAAA,aAAa,CAACU,WAAW,CAACb,IAAD,CAAZ,CAAb,CADU,CAEV;AACH,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;;AAKA,QAAMc,iBAAiB,GAAIC,EAAD,IAAQ;AAC9Bd,IAAAA,OAAO,mBACAD,IADA;AAEH,OAACe,EAAE,CAACC,MAAH,CAAUC,IAAX,GAAkB;AACdC,QAAAA,SAAS,EAAEH,EAAE,CAACC,MAAH,CAAUG,EADP;AAEdC,QAAAA,QAAQ,EAAEL,EAAE,CAACC,MAAH,CAAUK;AAFN;AAFf,OAAP;AAOH,GARD;;AAUA,QAAMR,WAAW,GAAIS,KAAD,IAAW;AAC5B,WAAO,CAAC,CAACC,MAAM,CAACC,IAAP,CAAYxB,IAAZ,EAAkByB,IAAlB,CAAuBC,GAAG,IAAE;AAChC,aAAO,CAAC,CAAC1B,IAAI,CAAC0B,GAAD,CAAJ,CAAUN,QAAnB;AACH,KAFO,CAAT;AAGF,GAJD;;AAMA,QAAMO,YAAY,GAAG,MAAM;AAEvBvC,IAAAA,GAAG,CAACwC,GAAJ,CAAQvC,MAAM,CAACgB,IAAP,CAAYC,WAApB,EAAiC,sBAAjC,EAAyDuB,OAAzD,EACKtB,IADL,CACUC,QAAQ,IAAI;AACdsB,MAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACP,KAHD,EAIKrB,KAJL,CAIWC,KAAK,IAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CmB,OAA5C;AACAI,MAAAA,MAAM,CAACC,KAAP,CAAa,yCAAb;AACP,KAPD;AAQH,GAVD;;AAYF,SACE;AAAS,IAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,EAGI;AAAM,IAAA,QAAQ,EAAEP,YAAhB;AAA8B,IAAA,SAAS,EAAC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9B,WAAW,CAACsC,MAAZ,GAAqB,CAArB,GACGtC,WAAW,CAACuC,GAAZ,CAAgB,CAACC,QAAD,EAAWC,KAAX,KACZ;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,EAAE,EAAED,QAAQ,CAACpB,IADjB;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAEoB,QAAQ,CAACpB,IAHnB;AAII,IAAA,YAAY,EAAEsB,WAAW,CAAC/C,eAAD,EAAkB6C,QAAQ,CAACpB,IAA3B,CAJ7B,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAEoB,QAAQ,CAACpB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6DoB,QAAQ,CAACpB,IAAtE,CARJ,CADJ,CADH,GAYQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbb,EAeI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,CAfJ,CAHJ,CADJ,CADF;AA4BD;;AAED,eAAe1B,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { API } from \"aws-amplify\"\nimport config from \"../../../config/constants\"\nimport { useSelector } from 'react-redux';\n\nimport './styles.scss';\n\nfunction EditarConsoles() {\n    const currentConsoles = useSelector(state => state.user.data.consoles);\n    const [userConsole, setUserConsole] = useState('');\n\n    const [consoles, setConsoles] = useState(\"\")\n    const [form, setForm] = useState({}) \n    const [isValid, setValidation] = useState(false)\n\n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/console/')\n            .then(response => {\n                console.log(\"ESSE E O RESPONSE\", response.data)\n                setUserConsole(response.data);\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \")\n            })\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    \n\n    useEffect(()=>{\n        setValidation(verifyValid(form))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [form])\n\n    const handleChangeInput = (ev) => {\n        setForm({\n            ...form,\n            [ev.target.name]: {\n                entity_id: ev.target.id,\n                tag_name: ev.target.value\n            }\n        })\n    }\n\n    const verifyValid = (_form) => {\n       return !!Object.keys(form).find(key=>{\n            return !!form[key].tag_name\n        })\n    }\n\n    const handleSubmit = () => {\n\n        API.put(config.APIS.PLAYERSTARS, '/player/console-data', options)\n            .then(response => {\n                props.history.push('/perfil');\n        })\n            .catch(error => {\n                console.log('Esse é o retorno das options', options);\n                window.alert('Erro fazendo post dos dados do usuário.');\n        })   \n    }\n\n  return (\n    <section className=\"containerEditConsole\">\n        <div className=\"contentEditConsole\">\n            <h2 className=\"titleEditConsole\">Editar plataformas</h2>\n            <p className=\"subTitleEditConsole\">Quais plataformas você usa?</p>\n            <form onSubmit={handleSubmit} className=\"dadosConsole\">\n                {userConsole.length > 0 ?\n                    userConsole.map((platform, index) => (\n                        <fieldset key={index}>\n                            <input \n                                id={platform.name} \n                                type=\"text\" \n                                name={platform.name} \n                                defaultValue={findConsole(currentConsoles, platform.name)}\n                                // required\n                                />\n                            <label className=\"label\" htmlFor={platform.name}>Tagname do {platform.name}</label>\n                        </fieldset>\n                    )) : <div></div>\n                }\n                <div className=\"containerBtn\">\n                    <button className=\"btnCancel\" type=\"button\">Cancelar</button>\n                    <button className=\"btnSave\" type=\"submit\" >Salvar alterações</button>\n                </div>\n            </form>\n        </div>\n    </section>\n  );\n}\n\nexport default EditarConsoles;"]},"metadata":{},"sourceType":"module"}