{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Perfil/EditarConsoles/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { API } from \"aws-amplify\";\nimport config from \"../../../config/constants\";\nimport { useSelector } from 'react-redux';\nimport './styles.scss';\n\nfunction EditarConsoles() {\n  const currentConsoles = useSelector(state => state.user.data.consoles);\n  console.log(currentConsoles);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userConsole = _useState2[0],\n        setUserConsole = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        filterConsole = _useState4[0],\n        SetFilterConsole = _useState4[1];\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/console/').then(response => {\n      console.log(\"ESSE E O RESPONSE\", response.data);\n      setUserConsole(response.data);\n      SetFilterConsole(response.data.filter(item => item.name != \"\"));\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \");\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  console.log(filterConsole);\n  return React.createElement(\"section\", {\n    className: \"containerEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titleEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Editar plataformas\"), React.createElement(\"p\", {\n    className: \"subTitleEditConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Quais plataformas voc\\xEA usa?\"), React.createElement(\"form\", {\n    className: \"dadosConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, userConsole.length > 0 ? userConsole.map((platform, index) => React.createElement(\"fieldset\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: platform.name,\n    type: \"text\",\n    name: platform.name // defaultValue={\n    // } \n    // required\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: platform.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Tagname do \", platform.name))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"containerBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btnCancel\",\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Cancelar\"), React.createElement(\"button\", {\n    className: \"btnSave\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Salvar altera\\xE7\\xF5es\")))));\n}\n\nexport default EditarConsoles;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Perfil/EditarConsoles/index.js"],"names":["React","useState","useEffect","API","config","useSelector","EditarConsoles","currentConsoles","state","user","data","consoles","console","log","userConsole","setUserConsole","filterConsole","SetFilterConsole","get","APIS","PLAYERSTARS","then","response","filter","item","name","catch","error","length","map","platform","index"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAO,eAAP;;AAEA,SAASC,cAAT,GAA0B;AACtB,QAAMC,eAAe,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAAX,CAAgBC,QAA1B,CAAnC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,eAAZ;;AAFsB,oBAIgBN,QAAQ,CAAC,EAAD,CAJxB;AAAA;AAAA,QAIfa,WAJe;AAAA,QAIFC,cAJE;;AAAA,qBAKoBd,QAAQ,CAAC,EAAD,CAL5B;AAAA;AAAA,QAKfe,aALe;AAAA,QAKAC,gBALA;;AAOtBf,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,GAAG,CAACe,GAAJ,CAAQd,MAAM,CAACe,IAAP,CAAYC,WAApB,EAAiC,WAAjC,EACKC,IADL,CACUC,QAAQ,IAAI;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCS,QAAQ,CAACZ,IAA1C;AACAK,MAAAA,cAAc,CAACO,QAAQ,CAACZ,IAAV,CAAd;AACAO,MAAAA,gBAAgB,CAACK,QAAQ,CAACZ,IAAT,CAAca,MAAd,CAAqBC,IAAI,IAAIA,IAAI,CAACC,IAAL,IAAa,EAA1C,CAAD,CAAhB;AACH,KALL,EAMKC,KANL,CAMWC,KAAK,IAAI;AACZf,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KARL,EADY,CAUR;AACP,GAXQ,EAWN,EAXM,CAAT;AAaAD,EAAAA,OAAO,CAACC,GAAR,CAAYG,aAAZ;AAEF,SACE;AAAS,IAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,EAGI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,WAAW,CAACc,MAAZ,GAAqB,CAArB,GACGd,WAAW,CAACe,GAAZ,CAAgB,CAACC,QAAD,EAAWC,KAAX,KACZ;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,EAAE,EAAED,QAAQ,CAACL,IADjB;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAEK,QAAQ,CAACL,IAHnB,CAII;AAEA;AACA;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAEK,QAAQ,CAACL,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6DK,QAAQ,CAACL,IAAtE,CAVJ,CADJ,CADH,GAcQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfb,EAiBI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,CAjBJ,CAHJ,CADJ,CADF;AA8BD;;AAED,eAAenB,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { API } from \"aws-amplify\"\nimport config from \"../../../config/constants\"\nimport { useSelector } from 'react-redux';\n\nimport './styles.scss';\n\nfunction EditarConsoles() {\n    const currentConsoles = useSelector(state => state.user.data.consoles);\n    console.log(currentConsoles)\n\n    const [userConsole, setUserConsole] = useState('');\n    const [filterConsole, SetFilterConsole] = useState('');\n\n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/console/')\n            .then(response => {\n                console.log(\"ESSE E O RESPONSE\", response.data)\n                setUserConsole(response.data);\n                SetFilterConsole(response.data.filter(item => item.name != \"\"))\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \")\n            })\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    console.log(filterConsole)\n \n  return (\n    <section className=\"containerEditConsole\">\n        <div className=\"contentEditConsole\">\n            <h2 className=\"titleEditConsole\">Editar plataformas</h2>\n            <p className=\"subTitleEditConsole\">Quais plataformas você usa?</p>\n            <form className=\"dadosConsole\">\n                {userConsole.length > 0 ?\n                    userConsole.map((platform, index) => (\n                        <fieldset key={index}>\n                            <input \n                                id={platform.name} \n                                type=\"text\" \n                                name={platform.name} \n                                // defaultValue={\n                                    \n                                // } \n                                // required\n                                />\n                            <label className=\"label\" htmlFor={platform.name}>Tagname do {platform.name}</label>\n                        </fieldset>\n                    )) : <div></div>\n                }\n                <div className=\"containerBtn\">\n                    <button className=\"btnCancel\" type=\"button\">Cancelar</button>\n                    <button className=\"btnSave\" type=\"submit\" >Salvar alterações</button>\n                </div>\n            </form>\n        </div>\n    </section>\n  );\n}\n\nexport default EditarConsoles;"]},"metadata":{},"sourceType":"module"}