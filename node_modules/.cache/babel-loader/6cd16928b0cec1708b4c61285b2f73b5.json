{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Historico/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport './styles.scss';\nimport { API } from \"aws-amplify\";\nimport config from '../../config/constants';\nimport Card from './Card/index'; // import Select from '../Select';\n\nfunction ComponentHistorico() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        historico = _useState2[0],\n        setHistorico = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        statusSelected = _useState4[0],\n        setStatusSelected = _useState4[1];\n\n  useEffect(() => {\n    getHistory(); // eslint-disable-next-line \n  }, []);\n\n  const getHistory = () => {\n    API.get(config.APIS.PLAYERSTARS, '/duel/get-my-duels/finished-under_review').then(response => {\n      console.log(\"ESSE É O RESPONSE DO HISTORY: \", response.data);\n      setHistorico(response.data);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \", error);\n      setHistorico(false);\n    });\n  };\n\n  const changeStatus = e => {\n    setStatusSelected(e);\n    setHistorico(historico.filter(item => {\n      if (item == item.find(item => item.status)) {\n        return item;\n      }\n    }));\n  };\n\n  return React.createElement(\"section\", {\n    className: \"containerHistorico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"titleHistorico\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"MEUS DUELOS\"), historico ? historico.map((item, index) => React.createElement(Card, {\n    key: index,\n    imageGame: item.gameImage,\n    nomeGame: item.gameName,\n    platform: item.consoleName,\n    matchType: item.matchType,\n    matchTitle: item.matchTitle,\n    date: item.date,\n    duration: item.durationMax,\n    bet: item.bet,\n    premium: item.reward,\n    members: item.members,\n    ranking: item.ranking,\n    match: item.match,\n    starType: item.star_type,\n    winner: item.winner,\n    opponentName: item.opponent_name,\n    opponentType: item.opponent_type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })) : React.createElement(\"p\", {\n    className: \"descriptionDuels\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Voc\\xEA ainda n\\xE3o duelou! Depois que enfrentar oponentes no app, os jogos dos quais tiver participado aparecer\\xE3o aqui.\"));\n}\n\nexport default ComponentHistorico;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Historico/index.js"],"names":["React","useEffect","useState","API","config","Card","ComponentHistorico","historico","setHistorico","statusSelected","setStatusSelected","getHistory","get","APIS","PLAYERSTARS","then","response","console","log","data","catch","error","changeStatus","e","filter","item","find","status","map","index","gameImage","gameName","consoleName","matchType","matchTitle","date","durationMax","bet","reward","members","ranking","match","star_type","winner","opponent_name","opponent_type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './styles.scss';\nimport { API } from \"aws-amplify\"\nimport config from '../../config/constants';\nimport Card from './Card/index';\n// import Select from '../Select';\n\nfunction ComponentHistorico () {\n    \n    const [historico, setHistorico] = useState([]);\n    const [statusSelected, setStatusSelected] = useState('');\n     \n    useEffect(() => {\n         getHistory()\n         // eslint-disable-next-line \n    }, []) \n         \n    const getHistory = () => {\n        API.get(config.APIS.PLAYERSTARS, '/duel/get-my-duels/finished-under_review')\n            .then(response => {\n                console.log(\"ESSE É O RESPONSE DO HISTORY: \", response.data)\n                setHistorico(response.data);\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \", error)\n                setHistorico(false)\n            })\n    }\n\n    const changeStatus = (e) => {\n        setStatusSelected(e)\n        setHistorico(historico.filter((item) => {\n          if (item == item.find(item => item.status)) {\n              return item\n          }\n        }))\n    }\n\n    return (\n        <section className=\"containerHistorico\">\n            <h1 className=\"titleHistorico\">MEUS DUELOS</h1>\n            {/* <div className=\"containerFilter\">\n                <div className=\"containerSelects\">\n                    <div className=\"containerSelect\">\n                        <Select\n                            onChange={changeStatus}\n                            width={'150px'}\n                            placeholder={\u001d}\n                            options={hitorico.map(item => item.status)}\n                            classNames={'select-class'}\n                            name=\"platform\"\n                        />\n                    </div>\n                </div>\n            </div>     */}\n            {historico ? historico.map((item , index) => <Card \n                key={index}\n                imageGame={item.gameImage}\n                nomeGame={item.gameName}\n                platform={item.consoleName}\n                matchType={item.matchType}\n                matchTitle={item.matchTitle}\n                date={item.date}\n                duration={item.durationMax}\n                bet={item.bet}\n                premium={item.reward}\n                members={item.members}\n                ranking={item.ranking}\n                match={item.match}\n                starType={item.star_type}\n                winner={item.winner}\n                opponentName={item.opponent_name}\n                opponentType={item.opponent_type}\n            />) : <p className=\"descriptionDuels\">Você ainda não duelou! Depois que enfrentar oponentes no app, os jogos dos quais tiver participado aparecerão aqui.</p> }\n        </section>\n    )\n}\n\nexport default ComponentHistorico;"]},"metadata":{},"sourceType":"module"}