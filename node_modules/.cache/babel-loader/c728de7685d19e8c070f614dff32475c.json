{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js\";\n// import React, { useState } from 'react';\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\nimport iconNext from '../img/Direita.png';\nimport iconPreview from '../img/Esquerda.png';\nimport './styles.scss';\n\nconst Navigation = props => {\n  const _props$pagination = props.pagination,\n        page = _props$pagination.page,\n        total = _props$pagination.total,\n        per_page = _props$pagination.per_page;\n  console.log('::::::props.pagination::::::', props.pagination); // const handlePageClick = () => listPages.map((item, index) => {\n  //     const current = index + 1;\n  //     return props.setPage(current) \n  // });\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        offset = _useState4[0],\n        setOffset = _useState4[1];\n\n  handlePageClick = data => {\n    let selected = data.selected;\n    let offset = Math.ceil(selected * this.props.perPage);\n    this.setState({\n      offset: offset\n    }, () => {\n      this.loadCommentsFromServer();\n    });\n  };\n\n  const countPages = (total - total % per_page) / per_page + (total % per_page !== 0 ? 1 : 0);\n  console.log(\":::::CONUNT PAGE\", countPages);\n  const listPages = new Array(parseInt(countPages)).fill(null);\n  console.log(\":::::LIST PAGE\", listPages);\n  return React.createElement(ReactPaginate, {\n    previousLabel: React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: iconPreview,\n      alt: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })),\n    nextLabel: React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: iconNext,\n      alt: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })),\n    breakLabel: '...',\n    pageCount: countPages,\n    onPageChange: handlePageClick,\n    forcePage: page - 1,\n    breakClassName: 'rest',\n    containerClassName: 'containerNavigation',\n    pageClassName: 'page',\n    marginPagesDisplayed: 2,\n    pageRangeDisplayed: 5,\n    activeClassName: 'active',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  });\n};\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js"],"names":["React","ReactPaginate","iconNext","iconPreview","Navigation","props","pagination","page","total","per_page","console","log","useState","data","setData","offset","setOffset","handlePageClick","selected","Math","ceil","perPage","setState","loadCommentsFromServer","countPages","listPages","Array","parseInt","fill"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,OAAO,eAAP;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA,4BAEQA,KAAK,CAACC,UAFd;AAAA,QAElBC,IAFkB,qBAElBA,IAFkB;AAAA,QAEZC,KAFY,qBAEZA,KAFY;AAAA,QAELC,QAFK,qBAELA,QAFK;AAG1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CN,KAAK,CAACC,UAAlD,EAH0B,CAK1B;AACA;AACA;AACA;;AAR0B,oBAUFM,QAAQ,CAAC,EAAD,CAVN;AAAA;AAAA,QAUnBC,IAVmB;AAAA,QAUbC,OAVa;;AAAA,qBAWEF,QAAQ,CAAC,CAAD,CAXV;AAAA;AAAA,QAWnBG,MAXmB;AAAA,QAWXC,SAXW;;AAa1BC,EAAAA,eAAe,GAAGJ,IAAI,IAAI;AACtB,QAAIK,QAAQ,GAAGL,IAAI,CAACK,QAApB;AACA,QAAIH,MAAM,GAAGI,IAAI,CAACC,IAAL,CAAUF,QAAQ,GAAG,KAAKb,KAAL,CAAWgB,OAAhC,CAAb;AAEA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAEA;AAAV,KAAd,EAAkC,MAAM;AACtC,WAAKQ,sBAAL;AACD,KAFD;AAGD,GAPH;;AASA,QAAMC,UAAU,GAAK,CAAChB,KAAK,GAAIA,KAAK,GAAGC,QAAlB,IAA+BA,QAAhC,IAA8CD,KAAK,GAAGC,QAAT,KAAuB,CAAvB,GAA2B,CAA3B,GAA+B,CAA5E,CAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCa,UAAhC;AACA,QAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAUC,QAAQ,CAACH,UAAD,CAAlB,EAAgCI,IAAhC,CAAqC,IAArC,CAAlB;AACAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bc,SAA9B;AAEA,SACI,oBAAC,aAAD;AACI,IAAA,aAAa,EAAE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB;AAAK,MAAA,GAAG,EAAEtB,WAAV;AAAuB,MAAA,GAAG,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CADnB;AAEI,IAAA,SAAS,EAAG;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB;AAAK,MAAA,GAAG,EAAED,QAAV;AAAoB,MAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAtB,CAFhB;AAGI,IAAA,UAAU,EAAE,KAHhB;AAII,IAAA,SAAS,EAAEsB,UAJf;AAKI,IAAA,YAAY,EAAEP,eALlB;AAMI,IAAA,SAAS,EAAEV,IAAI,GAAG,CANtB;AAOI,IAAA,cAAc,EAAE,MAPpB;AAQI,IAAA,kBAAkB,EAAE,qBARxB;AASI,IAAA,aAAa,EAAE,MATnB;AAUI,IAAA,oBAAoB,EAAE,CAV1B;AAWI,IAAA,kBAAkB,EAAE,CAXxB;AAYI,IAAA,eAAe,EAAE,QAZrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBH,CA3CD;;AA6CA,eAAeH,UAAf","sourcesContent":["// import React, { useState } from 'react';\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\n\nimport iconNext from '../img/Direita.png';\nimport iconPreview from '../img/Esquerda.png';\n\nimport './styles.scss';\n\nconst Navigation = (props) => {\n\n    const { page, total, per_page } = props.pagination\n    console.log('::::::props.pagination::::::', props.pagination )\n\n    // const handlePageClick = () => listPages.map((item, index) => {\n    //     const current = index + 1;\n    //     return props.setPage(current) \n    // });\n\n    const [data, setData] = useState([]);\n    const [offset, setOffset] = useState(0);\n\n    handlePageClick = data => {\n        let selected = data.selected;\n        let offset = Math.ceil(selected * this.props.perPage);\n    \n        this.setState({ offset: offset }, () => {\n          this.loadCommentsFromServer();\n        });\n      };\n\n    const countPages =  ((total - (total % per_page)) / per_page) + ((total % per_page) !== 0 ? 1 : 0)\n    console.log(\":::::CONUNT PAGE\", countPages )\n    const listPages = new Array(parseInt(countPages)).fill(null)\n    console.log(\":::::LIST PAGE\", listPages)\n  \n    return (\n        <ReactPaginate\n            previousLabel={<div className=\"icon\"><img src={iconPreview} alt=\"next\" /></div>}\n            nextLabel={ <div className=\"icon\"><img src={iconNext} alt=\"next\" /></div>}\n            breakLabel={'...'}\n            pageCount={countPages}\n            onPageChange={handlePageClick}\n            forcePage={page - 1}\n            breakClassName={'rest'}\n            containerClassName={'containerNavigation'}\n            pageClassName={'page'}\n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            activeClassName={'active'}\n        />\n    )\n}\n\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}