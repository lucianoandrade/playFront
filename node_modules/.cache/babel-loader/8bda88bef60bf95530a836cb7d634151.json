{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/views/view/view.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from \"react-router-dom\";\nimport { Auth, API } from \"aws-amplify\";\nimport Menu from \"../../components/Header/Menu\";\nimport Footer from \"../../components/Footer\"; // import {FireworkSpinner} from \"react-spinners-kit\"\n\nimport config from \"../../config/constants\";\n\nclass View extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      redirect: false,\n      user_data: undefined\n    };\n  }\n\n  redirect_to_error(error_message) {\n    this.setState({\n      redirect: true,\n      loading: false,\n      to: {\n        pathname: \"/\",\n        state: {\n          message: error_message\n        }\n      }\n    });\n  }\n\n  redirect_to_login() {\n    this.setState({\n      redirect: true,\n      loading: false,\n      to: {\n        pathname: \"/login\"\n      }\n    });\n  }\n\n  redirect_to_cadastro() {\n    this.setState({\n      loading: false,\n      redirect: true,\n      to: {\n        pathname: \"/dadosuser\"\n      }\n    });\n  }\n\n  get_user_data(cognito_response) {\n    const user_id = cognito_response.attributes.sub;\n    console.log(\"USER_ID:\", user_id);\n    console.log(\"COGNITO RESPONSE: \", cognito_response);\n    API.get(config.APIS.PLAYERSTARS, \"/player/\".concat(user_id), {}).then(response => {\n      console.log('get user data bem sucedido. Response: ', response);\n      this.setState({\n        loading: false,\n        user_data: {\n          cognito_user: cognito_response,\n          data: response.data\n        }\n      });\n    }).catch(error => {\n      console.log('get user data falhou: ', error);\n\n      if (error.response && error.response.status === 404) {\n        this.redirect_to_cadastro();\n      } else {\n        this.redirect_to_error('Erro obtendo dados do usuário'); //error.response.message)\n\n        console.log('Erro obtendo dados o usuário: ', error.response);\n      }\n    });\n  }\n\n  get_authenticated_user() {\n    Auth.currentAuthenticatedUser().then(response => {\n      console.log('get_authenticated_user, response:', response);\n      console.log('Is cadastro view?', this.is_cadastro_view());\n\n      if (!this.is_cadastro_view()) {\n        this.get_user_data(response);\n      } else {\n        this.setState({\n          loading: false,\n          user_data: {\n            cognito_user: response\n          }\n        });\n      }\n    }).catch(error => {\n      if (!this.is_public_view()) {\n        if (error === \"not authenticated\") {\n          this.redirect_to_login();\n        } else {\n          this.redirect_to_error(error);\n        }\n      } else {\n        this.setState({\n          loading: false\n        });\n      }\n    });\n  }\n\n  is_cadastro_view() {\n    return this.props.cadastro;\n  }\n\n  is_public_view() {\n    return this.props.public;\n  }\n\n  has_user_data() {\n    return this.props.user_data !== undefined;\n  }\n\n  componentDidMount() {\n    if (!this.has_user_data()) {\n      this.get_authenticated_user();\n    }\n  } // noinspection JSMethodCanBeStatic\n\n\n  renderLoading() {\n    return React.createElement(\"div\", {\n      className: \"Loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Carregando...\")));\n  }\n\n  renderContent() {\n    const children = React.Children.map(this.props.children, child => React.cloneElement(child, {\n      user_data: this.state.user_data\n    }));\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, children);\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: this.state.to,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      });\n    }\n\n    const content = this.state.loading ? this.renderLoading() : this.renderContent();\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      user_data: this.state.user_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), content, React.createElement(Footer, {\n      user_data: this.state.user_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }));\n  }\n\n}\n\nView.propTypes = {\n  background: PropTypes.any,\n  backgroundHeight: PropTypes.string,\n  public: PropTypes.bool,\n  cadastro: PropTypes.bool\n};\nexport default View;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/views/view/view.js"],"names":["React","Component","PropTypes","Redirect","Auth","API","Menu","Footer","config","View","state","loading","redirect","user_data","undefined","redirect_to_error","error_message","setState","to","pathname","message","redirect_to_login","redirect_to_cadastro","get_user_data","cognito_response","user_id","attributes","sub","console","log","get","APIS","PLAYERSTARS","then","response","cognito_user","data","catch","error","status","get_authenticated_user","currentAuthenticatedUser","is_cadastro_view","is_public_view","props","cadastro","public","has_user_data","componentDidMount","renderLoading","renderContent","children","Children","map","child","cloneElement","render","content","propTypes","background","any","backgroundHeight","string","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect } from \"react-router-dom\"\n\nimport { Auth, API } from \"aws-amplify\"\nimport Menu from \"../../components/Header/Menu\"\nimport Footer from \"../../components/Footer\"\n// import {FireworkSpinner} from \"react-spinners-kit\"\nimport config from \"../../config/constants\"\n\n\n\nclass View extends Component {\n  state = {\n    loading: true,\n    redirect: false,\n    user_data: undefined\n  };\n\n  redirect_to_error(error_message) {\n    this.setState({\n      redirect: true,\n      loading: false,\n      to: {\n        pathname: \"/\",\n        state: {\n          message: error_message\n        }\n      }\n    })\n  }\n\n  redirect_to_login() {\n    this.setState({\n      redirect: true,\n      loading: false,\n      to: {\n        pathname: \"/login\"\n      }\n    })\n  }\n\n  redirect_to_cadastro() {\n    this.setState({\n      loading: false,\n      redirect: true,\n      to: {pathname: \"/dadosuser\"}\n    })\n  }\n\n  get_user_data(cognito_response) {\n    const user_id = cognito_response.attributes.sub;\n    console.log(\"USER_ID:\", user_id)\n    console.log(\"COGNITO RESPONSE: \", cognito_response);\n    API.get(config.APIS.PLAYERSTARS, `/player/${user_id}`, {})\n      .then(response => {\n        console.log('get user data bem sucedido. Response: ', response)\n        this.setState({\n          loading: false,\n          user_data: {\n            cognito_user: cognito_response,\n            data: response.data\n          }\n        })\n      })\n      .catch(error => {\n        console.log('get user data falhou: ', error)\n        if (error.response && error.response.status === 404) {\n          this.redirect_to_cadastro()\n        } else {\n          this.redirect_to_error('Erro obtendo dados do usuário')//error.response.message)\n          console.log('Erro obtendo dados o usuário: ', error.response)\n        }\n      })\n  }\n\n  get_authenticated_user() {\n    Auth.currentAuthenticatedUser()\n      .then(response => {\n        console.log('get_authenticated_user, response:', response)\n        console.log('Is cadastro view?', this.is_cadastro_view())\n        if(!this.is_cadastro_view()) {\n          this.get_user_data(response)\n        }\n        else {\n          this.setState({\n            loading: false,\n            user_data: {\n              cognito_user: response\n            }\n          })\n        }\n      })\n      .catch(error => {\n        if(!this.is_public_view()) {\n          if (error === \"not authenticated\") {\n            this.redirect_to_login()\n          } else {\n            this.redirect_to_error(error)\n          }\n        }\n        else {\n          this.setState({loading: false})\n        }\n      })\n  }\n\n  is_cadastro_view() {\n    return this.props.cadastro\n  }\n\n  is_public_view() {\n    return this.props.public\n  }\n\n  has_user_data() {\n    return this.props.user_data !== undefined\n  }\n  componentDidMount() {\n    if(!this.has_user_data()) {\n      this.get_authenticated_user()\n    }\n  }\n\n  // noinspection JSMethodCanBeStatic\n  renderLoading() {\n    return (\n      <div className=\"Loading\">\n        <div><p >Carregando...</p></div>\n      </div>\n    )\n  }\n\n  renderContent() {\n    const children = React.Children.map(this.props.children,\n      child => React.cloneElement(child, {user_data: this.state.user_data}))\n\n    return (\n      <React.Fragment>\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.to}/>\n    }\n\n    const content = (this.state.loading) ? (this.renderLoading()) : (this.renderContent())\n    return (\n      <React.Fragment>\n        <Menu user_data={this.state.user_data}/>\n        {content}\n        <Footer user_data={this.state.user_data}/>\n      </React.Fragment>\n    )\n  }\n}\n\nView.propTypes = {\n  background: PropTypes.any,\n  backgroundHeight: PropTypes.string,\n  public: PropTypes.bool,\n  cadastro: PropTypes.bool\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}