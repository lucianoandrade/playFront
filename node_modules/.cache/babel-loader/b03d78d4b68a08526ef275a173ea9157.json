{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Contato/index.js\";\nimport React, { useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport config from \"../../config/constants\";\nimport PageContainer from \"../../components/features/PageContainer\";\nimport { useAlert } from \"react-alert\";\nimport \"./styles.scss\";\nimport { useSelector } from \"react-redux\";\n\nconst Contato = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        nome = _useState2[0],\n        setNome = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        assunto = _useState6[0],\n        setAssunto = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mensagem = _useState8[0],\n        setMensagem = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        btn_disabled = _useState10[0],\n        setBtn_disabled = _useState10[1];\n\n  const _useState11 = useState(\"#BBB\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        btn_color = _useState12[0],\n        setBtn_color = _useState12[1]; // const nameUser = useSelector(state => state.user.data.user.name);\n  // const emailUser = useSelector(state => state.user.data.user.email);\n\n\n  const alert = useAlert();\n\n  const on_input = () => {\n    if (nome.length >= 3 && email.length >= 3 && assunto.length >= 3 && mensagem.length >= 3) {\n      setBtn_disabled(false);\n      setBtn_color(\"#000\");\n    } else {\n      setBtn_disabled(true);\n      setBtn_color(\"#BBB\");\n    }\n  };\n\n  const sendContact = e => {\n    e.preventDefault();\n    const options = {\n      body: {\n        subject: assunto,\n        contact_message: mensagem,\n        data: []\n      }\n    };\n    API.post(config.APIS.PLAYERSTARS, \"/contact-email/send\", options).then(response => {\n      console.log(\"RESPONSE: \", response);\n      alert.success(\"Mensagem enviada\");\n      setNome(\"\");\n      setEmail(\"\");\n      setAssunto(\"\");\n      setMensagem(\"\");\n    }).catch(error => {\n      console.log(\"ERROR: \", error);\n      alert.error(\"Erro fazendo post do contato do usu√°rio.\");\n    });\n  };\n\n  return (// <PageContainer public={true}>\n    React.createElement(\"section\", {\n      className: \"containerContato\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contentContato\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"titleContato\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Contato\"), React.createElement(\"p\", {\n      className: \"paragrafyContato\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Mollis nisl. Maecenas pulvinar turpis at faucibus posuere. Maecenas ut nibh non mauris dictum.\"), React.createElement(\"form\", {\n      className: \"formContato\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"nome\",\n      type: \"text\",\n      name: \"nome\",\n      value: nameUser ? nameUser : nome,\n      onChange: e => setNome(e.target.value),\n      onInput: on_input,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Nome\")), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      value: emailUser ? emailUser : email,\n      onChange: e => setEmail(e.target.value),\n      onInput: on_input,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"E-mail\")), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"assunto\",\n      type: \"text\",\n      name: \"assunto\",\n      value: assunto,\n      onChange: e => setAssunto(e.target.value),\n      onInput: on_input,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"assunto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Assunto\")), React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: \"mensagem\",\n      name: \"mensagem\",\n      value: mensagem,\n      onChange: e => setMensagem(e.target.value),\n      onInput: on_input,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label\",\n      htmlFor: \"mensagem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Mensagem\")), React.createElement(\"button\", {\n      className: \"btnEnviar\",\n      type: \"submit\",\n      onClick: sendContact,\n      disabled: btn_disabled,\n      style: {\n        background: \"\".concat(btn_color)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Enviar\")))) // {/* </PageContainer> */}\n\n  );\n};\n\nconst PageContato = () => {\n  const nameUser = useSelector(state => state.user.data.user.name);\n  const emailUser = useSelector(state => state.user.data.user.email);\n  return React.createElement(PageContainer, {\n    public: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, contato());\n};\n\nexport default PageContato;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Contato/index.js"],"names":["React","useState","API","config","PageContainer","useAlert","useSelector","Contato","nome","setNome","email","setEmail","assunto","setAssunto","mensagem","setMensagem","btn_disabled","setBtn_disabled","btn_color","setBtn_color","alert","on_input","length","sendContact","e","preventDefault","options","body","subject","contact_message","data","post","APIS","PLAYERSTARS","then","response","console","log","success","catch","error","nameUser","target","value","emailUser","background","PageContato","state","user","name","contato"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport config from \"../../config/constants\";\nimport PageContainer from \"../../components/features/PageContainer\"\nimport { useAlert } from \"react-alert\";\nimport \"./styles.scss\";\nimport { useSelector } from \"react-redux\";\n\nconst Contato = () => {\n  const [nome, setNome] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [assunto, setAssunto] = useState(\"\");\n  const [mensagem, setMensagem] = useState(\"\");\n  const [btn_disabled, setBtn_disabled] = useState(true);\n  const [btn_color, setBtn_color] = useState(\"#BBB\");\n  // const nameUser = useSelector(state => state.user.data.user.name);\n  // const emailUser = useSelector(state => state.user.data.user.email);\n  const alert = useAlert();\n\n  const on_input = () => {\n    if (nome.length >= 3 && email.length >= 3 && assunto.length >= 3 && mensagem.length >= 3) {\n      setBtn_disabled(false);\n      setBtn_color(\"#000\");\n    } else {\n      setBtn_disabled(true);\n      setBtn_color(\"#BBB\");\n    }\n  };\n\n  const sendContact = (e) => {\n    e.preventDefault();\n    const options = {\n      body: {\n        subject: assunto,\n        contact_message: mensagem,\n        data: [],\n      },\n    };\n\n    API.post(config.APIS.PLAYERSTARS, \"/contact-email/send\", options)\n      .then((response) => {\n        console.log(\"RESPONSE: \", response);\n        alert.success(\"Mensagem enviada\");\n        setNome(\"\");\n        setEmail(\"\");\n        setAssunto(\"\");\n        setMensagem(\"\");\n      })\n      .catch((error) => {\n        console.log(\"ERROR: \", error);\n        alert.error(\"Erro fazendo post do contato do usu√°rio.\");\n      });\n  };\n  \n  return (\n    // <PageContainer public={true}>\n      <section className=\"containerContato\">\n        <div className=\"contentContato\">\n          <h1 className=\"titleContato\">Contato</h1>\n          <p className=\"paragrafyContato\">\n            Mollis nisl. Maecenas pulvinar turpis at faucibus posuere. Maecenas\n            ut nibh non mauris dictum.\n          </p>\n          <form className=\"formContato\">\n            <fieldset>\n              <input\n                id=\"nome\"\n                type=\"text\"\n                name=\"nome\"\n                value={nameUser ? nameUser : nome}\n                onChange={(e) => setNome(e.target.value)}\n                onInput={on_input}\n                required\n              />\n              <label className=\"label\" htmlFor=\"nome\">\n                Nome\n              </label>\n            </fieldset>\n            <fieldset>\n              <input\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={emailUser ? emailUser : email}\n                onChange={(e) => setEmail(e.target.value)}\n                onInput={on_input}\n                required\n              />\n              <label className=\"label\" htmlFor=\"email\">\n                E-mail\n              </label>\n            </fieldset>\n            <fieldset>\n              <input\n                id=\"assunto\"\n                type=\"text\"\n                name=\"assunto\"\n                value={assunto}\n                onChange={(e) => setAssunto(e.target.value)}\n                onInput={on_input}\n                required\n              />\n              <label className=\"label\" htmlFor=\"assunto\">\n                Assunto\n              </label>\n            </fieldset>\n            <fieldset>\n              <textarea\n                id=\"mensagem\"\n                name=\"mensagem\"\n                value={mensagem}\n                onChange={(e) => setMensagem(e.target.value)}\n                onInput={on_input}\n                required\n              ></textarea>\n              <label className=\"label\" htmlFor=\"mensagem\">\n                Mensagem\n              </label>\n            </fieldset>\n            <button\n              className=\"btnEnviar\"\n              type=\"submit\"\n              onClick={sendContact}\n              disabled={btn_disabled}\n              style={{ background: `${btn_color}` }}\n            >\n              Enviar\n            </button>\n          </form>\n        </div>\n      </section>\n    // {/* </PageContainer> */}\n  );\n}\n\nconst PageContato = () => {\n  const nameUser = useSelector(state => state.user.data.user.name);\n  const emailUser = useSelector(state => state.user.data.user.email);\n  return (\n    <PageContainer public={true}>\n      {contato()}\n    </PageContainer>\n  )\n}\n\nexport default PageContato;"]},"metadata":{},"sourceType":"module"}