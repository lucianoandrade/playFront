{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Contato/index.js\";\nimport React, { useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport config from \"../../config/constants\";\nimport PageContainer from \"../../components/features/PageContainer\";\nimport { useAlert } from \"react-alert\";\nimport \"./styles.scss\";\nimport AlertMessage from \"../../components/elements/AlertMessage\";\nimport { useSelector } from \"react-redux\";\n\nfunction Contato() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        nome = _useState2[0],\n        setNome = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        assunto = _useState6[0],\n        setAssunto = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        mensagem = _useState8[0],\n        setMensagem = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        btn_disabled = _useState10[0],\n        setBtn_disabled = _useState10[1];\n\n  const _useState11 = useState(\"#BBB\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        btn_color = _useState12[0],\n        setBtn_color = _useState12[1];\n\n  const userData = useSelector(state => state.user.data);\n  console.log(userData);\n  const alert = useAlert();\n\n  const on_input = () => {\n    if (nome.length >= 3 && email.length >= 3 && assunto.length >= 3 && mensagem.length >= 3) {\n      setBtn_disabled(false);\n      setBtn_color(\"#000\");\n    } else {\n      setBtn_disabled(true);\n      setBtn_color(\"#BBB\");\n    }\n  };\n\n  const sendContact = e => {\n    e.preventDefault();\n    const options = {\n      body: {\n        subject: assunto,\n        contact_message: mensagem,\n        data: []\n      }\n    };\n    API.post(config.APIS.PLAYERSTARS, \"/contact-email/send\", options).then(response => {\n      console.log(\"RESPONSE: \", response);\n      alert.success(AlertMessage.sendMensage);\n      setNome(\"\");\n      setEmail(\"\");\n      setAssunto(\"\");\n      setMensagem(\"\");\n    }).catch(error => {\n      console.log(\"ERROR: \", error);\n      alert.error(AlertMessage.tryAgain);\n    });\n  };\n\n  return React.createElement(PageContainer, {\n    public: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"containerContato\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentContato\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"titleContato\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Contato\"), React.createElement(\"p\", {\n    className: \"paragrafyContato\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Mollis nisl. Maecenas pulvinar turpis at faucibus posuere. Maecenas ut nibh non mauris dictum.\"), React.createElement(\"form\", {\n    className: \"formContato\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"nome\",\n    type: \"text\",\n    name: \"nome\",\n    value: nome,\n    onChange: e => setNome(e.target.value),\n    onInput: on_input,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"nome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Nome\")), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    name: \"email\",\n    value: userData.email ? userData.email : email,\n    onChange: e => setEmail(e.target.value),\n    onInput: on_input,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"E-mail\")), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"assunto\",\n    type: \"text\",\n    name: \"assunto\",\n    value: assunto,\n    onChange: e => setAssunto(e.target.value),\n    onInput: on_input,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"assunto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Assunto\")), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    id: \"mensagem\",\n    name: \"mensagem\",\n    value: mensagem,\n    onChange: e => setMensagem(e.target.value),\n    onInput: on_input,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"mensagem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Mensagem\")), React.createElement(\"button\", {\n    className: \"btnEnviar\",\n    type: \"submit\",\n    onClick: sendContact,\n    disabled: btn_disabled,\n    style: {\n      background: \"\".concat(btn_color)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Enviar\")))));\n}\n\nexport default Contato;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/Contato/index.js"],"names":["React","useState","API","config","PageContainer","useAlert","AlertMessage","useSelector","Contato","nome","setNome","email","setEmail","assunto","setAssunto","mensagem","setMensagem","btn_disabled","setBtn_disabled","btn_color","setBtn_color","userData","state","user","data","console","log","alert","on_input","length","sendContact","e","preventDefault","options","body","subject","contact_message","post","APIS","PLAYERSTARS","then","response","success","sendMensage","catch","error","tryAgain","target","value","background"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport config from \"../../config/constants\";\nimport PageContainer from \"../../components/features/PageContainer\"\nimport { useAlert } from \"react-alert\";\nimport \"./styles.scss\";\nimport AlertMessage from \"../../components/elements/AlertMessage\";\nimport { useSelector } from \"react-redux\";\n\nfunction Contato() {\n  const [nome, setNome] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [assunto, setAssunto] = useState(\"\");\n  const [mensagem, setMensagem] = useState(\"\");\n  const [btn_disabled, setBtn_disabled] = useState(true);\n  const [btn_color, setBtn_color] = useState(\"#BBB\");\n  const userData = useSelector(state => state.user.data)\n  console.log(userData)\n  const alert = useAlert();\n\n  const on_input = () => {\n    if (nome.length >= 3 && email.length >= 3 && assunto.length >= 3 && mensagem.length >= 3) {\n      setBtn_disabled(false);\n      setBtn_color(\"#000\");\n    } else {\n      setBtn_disabled(true);\n      setBtn_color(\"#BBB\");\n    }\n  };\n\n  const sendContact = (e) => {\n    e.preventDefault();\n    const options = {\n      body: {\n        subject: assunto,\n        contact_message: mensagem,\n        data: [],\n      },\n    };\n\n    API.post(config.APIS.PLAYERSTARS, \"/contact-email/send\", options)\n      .then((response) => {\n        console.log(\"RESPONSE: \", response);\n        alert.success(AlertMessage.sendMensage);\n        setNome(\"\");\n        setEmail(\"\");\n        setAssunto(\"\");\n        setMensagem(\"\");\n      })\n      .catch((error) => {\n        console.log(\"ERROR: \", error);\n        alert.error(AlertMessage.tryAgain);\n      });\n  };\n  return (\n    <PageContainer public={true}>\n      <section className=\"containerContato\">\n        <div className=\"contentContato\">\n          <h1 className=\"titleContato\">Contato</h1>\n          <p className=\"paragrafyContato\">\n            Mollis nisl. Maecenas pulvinar turpis at faucibus posuere. Maecenas\n            ut nibh non mauris dictum.\n          </p>\n          <form className=\"formContato\">\n            <fieldset>\n              <input\n                id=\"nome\"\n                type=\"text\"\n                name=\"nome\"\n                value={nome}\n                onChange={(e) => setNome(e.target.value)}\n                onInput={on_input}\n                required\n              />\n              <label className=\"label\" htmlFor=\"nome\">\n                Nome\n              </label>\n            </fieldset>\n            <fieldset>\n              <input\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={userData.email ?  userData.email : email}\n                onChange={(e) => setEmail(e.target.value)}\n                onInput={on_input}\n                required\n              />\n              <label className=\"label\" htmlFor=\"email\">\n                E-mail\n              </label>\n            </fieldset>\n            <fieldset>\n              <input\n                id=\"assunto\"\n                type=\"text\"\n                name=\"assunto\"\n                value={assunto}\n                onChange={(e) => setAssunto(e.target.value)}\n                onInput={on_input}\n                required\n              />\n              <label className=\"label\" htmlFor=\"assunto\">\n                Assunto\n              </label>\n            </fieldset>\n            <fieldset>\n              <textarea\n                id=\"mensagem\"\n                name=\"mensagem\"\n                value={mensagem}\n                onChange={(e) => setMensagem(e.target.value)}\n                onInput={on_input}\n                required\n              ></textarea>\n              <label className=\"label\" htmlFor=\"mensagem\">\n                Mensagem\n              </label>\n            </fieldset>\n            <button\n              className=\"btnEnviar\"\n              type=\"submit\"\n              onClick={sendContact}\n              disabled={btn_disabled}\n              style={{ background: `${btn_color}` }}\n            >\n              Enviar\n            </button>\n          </form>\n        </div>\n      </section>\n    </PageContainer>\n  );\n}\n\nexport default Contato;\n"]},"metadata":{},"sourceType":"module"}