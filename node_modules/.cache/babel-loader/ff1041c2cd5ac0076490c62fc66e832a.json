{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/CodConfirmacao/index.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport { Form, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport PageContainer from \"../../components/features/PageContainer\";\nimport smartphone from \"../../assets/icons/smartphone.png\";\nimport FormField from \"../../components/elements/FormField\";\nimport \"./styles.scss\";\n\nconst confirmSignUp = props => {\n  return React.createElement(React.Fragment, null, React.createElement(PageContainer, {\n    register: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerCodConfirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lightBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lightBoxContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: smartphone,\n    alt: \"Icone Cel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Confirme seu n\\xFAmero de telefone\"), React.createElement(\"p\", {\n    className: \"paragraph\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Enviamos um c\\xF3digo de confirma\\xE7\\xE3o por SMS para voc\\xEA. Por favor, digite-o abaixo.\"), React.createElement(Form, {\n    className: \"formConfirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputInline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"codConfirm\",\n    type: \"text\",\n    name: \"codigo\",\n    label: \"C\\xF3digo de confirma\\xE7\\xE3o\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btnDefault\",\n    type: \"submit\",\n    style: atv(),\n    disabled: !props.isValid,\n    required: props.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Confirmar\"), React.createElement(\"button\", {\n    className: \"btnSecundary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Reenviar C\\xF3digo\")))))));\n\n  function atv() {\n    const x = props.isValid;\n\n    if (x === true) {\n      return {\n        background: \"#000\"\n      };\n    } else {\n      return {\n        background: \"#BBB\"\n      };\n    }\n  }\n};\n\nconst ConfirmSignupForm = withRouter(withFormik({\n  mapPropsToValues({\n    codigo\n  }) {\n    return {\n      codigo: codigo || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    codigo: Yup.string().required(\"Campo obrigatório\").length(6, \"Codigo inválido\")\n  }),\n\n  handleSubmit({\n    codigo\n  }, {\n    props,\n    setFieldError,\n    setSubmitting\n  }) {\n    setSubmitting(true);\n    console.log(\"Dados: \", {\n      email: props.history.location.state.email,\n      codigo: codigo\n    });\n    Auth.confirmSignUp(props.history.location.state.email, codigo.toString()).then(result => {\n      setSubmitting(false);\n      Auth.signIn(props.history.location.state.email, props.history.location.state.senha).then(response => {\n        props.history.push(\"/dadosuser\", {\n          initCadastro: props.history.location.state.email,\n          senha: props.history.location.state.senha,\n          codigoconfimacao: codigo\n        });\n        console.log(\"Minhas props no codigo de confirmação são\", props.history.location);\n      }).catch(error => {\n        console.log(\"Erro \", error);\n        const messageDefault = \"Ocorreu um erro inesperado.\";\n        const selectErrorMessage = {\n          NotAuthorizedException: \"E-mail ou senha incorretos.\",\n          UserNotFoundException: \"O usuário não foi encontrado.\",\n          PasswordResetRequiredException: 'A sua senha foi resetada. Crie uma nova em \"esqueci minha senha\".',\n          InvalidPasswordException: \"A senha deve conter ao mínimo 8 dígitos.\"\n        };\n        return selectErrorMessage[error.code] || messageDefault;\n      });\n    }).catch(error => {\n      console.log(\"Erro confirmando assinatura: \", error);\n      window.alert(\"Codigo de confirmação invalido\");\n      setSubmitting(false);\n    });\n  }\n\n})(confirmSignUp));\nexport default ConfirmSignupForm;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/CodConfirmacao/index.js"],"names":["React","withRouter","Auth","Form","withFormik","Yup","PageContainer","smartphone","FormField","confirmSignUp","props","atv","isValid","isSubmitting","x","background","ConfirmSignupForm","mapPropsToValues","codigo","validationSchema","object","shape","string","required","length","handleSubmit","setFieldError","setSubmitting","console","log","email","history","location","state","toString","then","result","signIn","senha","response","push","initCadastro","codigoconfimacao","catch","error","messageDefault","selectErrorMessage","NotAuthorizedException","UserNotFoundException","PasswordResetRequiredException","InvalidPasswordException","code","window","alert"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Auth } from \"aws-amplify\";\nimport { Form, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport PageContainer from \"../../components/features/PageContainer\";\nimport smartphone from \"../../assets/icons/smartphone.png\";\nimport FormField from \"../../components/elements/FormField\";\n\nimport \"./styles.scss\";\n\nconst confirmSignUp = (props) => {\n  return (\n    <>\n      <PageContainer register={true}>\n        <div className=\"containerCodConfirm\">\n          <div className=\"lightBox\">\n            <div className=\"lightBoxContent\">\n              <img src={smartphone} alt=\"Icone Cel\" />\n              <h3>Confirme seu número de telefone</h3>\n              <p className=\"paragraph\">\n                Enviamos um código de confirmação por SMS para você. Por favor,\n                digite-o abaixo.\n              </p>\n              <Form className=\"formConfirm\">\n                <div className=\"inputInline\">\n                  <FormField\n                    id=\"codConfirm\"\n                    type=\"text\"\n                    name=\"codigo\"\n                    label=\"Código de confirmação\"\n                    required\n                  />\n                </div>\n                <button\n                  className=\"btnDefault\"\n                  type=\"submit\"\n                  style={atv()}\n                  disabled={!props.isValid}\n                  required={props.isSubmitting}\n                >\n                  Confirmar\n                </button>\n                <button className=\"btnSecundary\" type=\"submit\">\n                  Reenviar Código\n                </button>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </PageContainer>\n    </>\n  );\n  function atv() {\n    const x = props.isValid;\n    if (x === true) {\n      return { background: `#000` };\n    } else {\n      return { background: `#BBB` };\n    }\n  }\n};\n\nconst ConfirmSignupForm = withRouter(\n  withFormik({\n    mapPropsToValues({ codigo }) {\n      return {\n        codigo: codigo || \"\",\n      };\n    },\n    validationSchema: Yup.object().shape({\n      codigo: Yup.string()\n        .required(\"Campo obrigatório\")\n        .length(6, \"Codigo inválido\"),\n    }),\n    handleSubmit({ codigo }, { props, setFieldError, setSubmitting }) {\n      setSubmitting(true);\n      console.log(\"Dados: \", {\n        email: props.history.location.state.email,\n        codigo: codigo,\n      });\n      Auth.confirmSignUp(props.history.location.state.email, codigo.toString())\n        .then((result) => {\n          setSubmitting(false);\n          Auth.signIn(\n            props.history.location.state.email,\n            props.history.location.state.senha\n          )\n            .then((response) => {\n              props.history.push(\"/dadosuser\", {\n                initCadastro: props.history.location.state.email,\n                senha: props.history.location.state.senha,\n                codigoconfimacao: codigo,\n              });\n              console.log(\n                \"Minhas props no codigo de confirmação são\",\n                props.history.location\n              );\n            })\n            .catch((error) => {\n              console.log(\"Erro \", error);\n              const messageDefault = \"Ocorreu um erro inesperado.\";\n\n              const selectErrorMessage = {\n                NotAuthorizedException: \"E-mail ou senha incorretos.\",\n                UserNotFoundException: \"O usuário não foi encontrado.\",\n                PasswordResetRequiredException:\n                  'A sua senha foi resetada. Crie uma nova em \"esqueci minha senha\".',\n                InvalidPasswordException:\n                  \"A senha deve conter ao mínimo 8 dígitos.\",\n              };\n\n              return selectErrorMessage[error.code] || messageDefault;\n            });\n        })\n        .catch((error) => {\n          console.log(\"Erro confirmando assinatura: \", error);\n          window.alert(\"Codigo de confirmação invalido\");\n          setSubmitting(false);\n        });\n    },\n  })(confirmSignUp)\n);\n\nexport default ConfirmSignupForm;\n"]},"metadata":{},"sourceType":"module"}