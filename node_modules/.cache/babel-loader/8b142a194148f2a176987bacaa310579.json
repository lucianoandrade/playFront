{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Converter/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport imgStarBlue from \"../Converter/img/star-blue.png\";\nimport imgStarGold from \"../Converter/img/star-gold.png\";\nimport seta from \"../Converter/img/seta.svg\";\nimport './styles.scss';\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Converter = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        quantidade = _useState2[0],\n        setQuantidade = _useState2[1];\n\n  const data = useSelector(state => state.user.data);\n  const conversao = 1;\n\n  handleChange = e => {\n    this.setState({\n      quantidade: e.target.value\n    });\n  };\n\n  converterPremio = async () => {\n    if (quantidade > data.golden_star_balance) {\n      toast.error(\"Saldo insuficiente.\");\n      return;\n    }\n\n    if (quantidade === 0 || !quantidade) {\n      toast.warn(\"Informe um valor para ser convertido.\");\n      return;\n    }\n\n    const success = await this.props.handleConverterPremio(quantidade);\n\n    if (success) {\n      this.props.getUser();\n      toast.success(\"PrÃªmio convertido com sucesso!\");\n      this.setState({\n        quantidade: \"\"\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ToastContainer, {\n    style: {\n      fontSize: \"16px\"\n    },\n    autoClose: 5000,\n    hideProgressBar: false,\n    newestOnTop: false,\n    closeOnClick: true,\n    rtl: false,\n    pauseOnVisibilityChange: true,\n    draggable: true,\n    pauseOnHover: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: \"containerConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"infoConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Converter Stars\"), React.createElement(\"p\", {\n    className: \"saldo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Seu saldo de Star Gold \\xE9 de: \", data.golden_star_balance), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam vestibulum, mi vel placerat auctor, tellus sapien congue ex, id ornare mi sem sit amet ex.\")), React.createElement(\"div\", {\n    className: \"converterStars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"img-star\",\n    src: imgStarGold,\n    alt: \"Stars Gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"inputStar\",\n    onChange: this.handleChange,\n    value: quantidade,\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"StarsBlue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Stars Gold\")), React.createElement(\"img\", {\n    className: \"seta\",\n    src: seta,\n    alt: \"conversao\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"inputStar\",\n    onChange: this.handleChange,\n    value: quantidade && quantidade * conversao,\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"StarsBlue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Stars Blue\")), React.createElement(\"img\", {\n    className: \"img-star\",\n    src: imgStarBlue,\n    alt: \"Stars Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btnDefault\",\n    onClick: this.converterPremio,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Converter\"))));\n};\n\nexport default Converter;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Converter/index.js"],"names":["React","useState","useEffect","useSelector","imgStarBlue","imgStarGold","ToastContainer","toast","Converter","quantidade","setQuantidade","data","state","user","conversao","handleChange","e","setState","target","value","converterPremio","golden_star_balance","error","warn","success","props","handleConverterPremio","getUser","fontSize","seta"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux';\nimport imgStarBlue from \"../Converter/img/star-blue.png\";\nimport imgStarGold from \"../Converter/img/star-gold.png\";\nimport seta from \"../Converter/img/seta.svg\";\nimport './styles.scss';\nimport { ToastContainer, toast } from \"react-toastify\";\n\nconst Converter = () => {\n    \n    const [quantidade, setQuantidade] = useState(\"\"); \n    const data = useSelector(state => state.user.data);\n    const conversao = 1;\n\n    handleChange = e => {\n        this.setState({ quantidade: e.target.value });\n      };\n\n      converterPremio = async () => {\n        if (quantidade > data.golden_star_balance) {\n          toast.error(\"Saldo insuficiente.\");\n          return;\n        }\n        if (quantidade === 0 || !quantidade) {\n          toast.warn(\"Informe um valor para ser convertido.\");\n    \n          return;\n        }\n        const success = await this.props.handleConverterPremio(\n          quantidade\n        );\n        if (success) {\n          this.props.getUser();\n          toast.success(\"PrÃªmio convertido com sucesso!\");\n          this.setState({ quantidade: \"\" });\n        }\n      };\n           \n    return (\n        <React.Fragment>\n            \n            <ToastContainer\n          style={{ fontSize: \"16px\" }}\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n       \n            <section className=\"containerConverter\">       \n                <div className=\"contentConverter\">                   \n                    <div className=\"infoConverter\"> \n                        <h1>Converter Stars</h1>\n                        <p className=\"saldo\">Seu saldo de Star Gold Ã© de: {data.golden_star_balance}</p>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n                        Nam vestibulum, mi vel placerat auctor, tellus sapien congue ex, id ornare mi sem sit amet ex.</p>\n                    </div>\n                    <div className=\"converterStars\">\n                        <img className=\"img-star\" src={imgStarGold} alt=\"Stars Gold\"></img>\n                        <fieldset>\n                            <input \n                            className=\"inputStar\" \n                            onChange={this.handleChange}\n                            value={quantidade}\n                            type=\"number\" \n                            required/>\n                            <label className=\"label\" htmlFor=\"StarsBlue\">Stars Gold</label>\n                        </fieldset>\n                        <img className=\"seta\" src={seta} alt=\"conversao\"></img>\n                        <fieldset>\n                            <input \n                            className=\"inputStar\" \n                            onChange={this.handleChange}\n                            value={quantidade && quantidade * conversao}         \n                            type=\"number\" \n                            required/>\n                            <label className=\"label\" htmlFor=\"StarsBlue\">Stars Blue</label>\n                        </fieldset>\n                        <img className=\"img-star\" src={imgStarBlue} alt=\"Stars Blue\"></img>\n                    </div>\n                        <button className=\"btnDefault\"  onClick={this.converterPremio}>Converter</button>                              \n                </div>\n            </section>\n        </React.Fragment>        \n    )\n}\n\nexport default Converter"]},"metadata":{},"sourceType":"module"}