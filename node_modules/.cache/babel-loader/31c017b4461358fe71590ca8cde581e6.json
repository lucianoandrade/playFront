{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js\";\nimport React from 'react';\nimport iconNext from '../img/Direita.png';\nimport iconPreview from '../img/Esquerda.png';\nimport ReactPaginate from 'react-paginate';\nimport './styles.scss';\n\nfunction Navigation(props) {\n  // const { pagination, setPage } = props\n  const _props$pagination = props.pagination,\n        page = _props$pagination.page,\n        total = _props$pagination.total,\n        per_page = _props$pagination.per_page;\n\n  const isActived = _page => {\n    if (page === _page) return \"activated\";\n    return \"\";\n  };\n\n  const prevPage = () => {\n    if (page > 1) props.setPage(page - 1);\n  };\n\n  const nextPage = () => {\n    console.log(\"nextPage\");\n\n    if (page < countPages) {\n      props.setPage(page + 1);\n    }\n  };\n\n  const countPages = (total - total % per_page) / per_page + (total % per_page !== 0 ? 1 : 0);\n  console.log(\":::::CONUNT PAGE\", countPages);\n  const listPages = new Array(parseInt(countPages)).fill(null);\n  console.log(\":::::LIST PAGE\", listPages);\n\n  const marginOffset = () => {\n    if (countPages - page < 4 && countPages > 3) {\n      return -((countPages - 4) * 42);\n    }\n\n    return -((page - 1) * 42);\n  };\n\n  const width = () => {\n    if (countPages < 4) {\n      return countPages * 42;\n    }\n\n    return 4 * 42;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"containerNavigation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"icon\",\n    onClick: prevPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: iconPreview,\n    alt: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"navigationBody\",\n    style: {\n      width: width()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"navigationList\",\n    style: {\n      marginLeft: marginOffset()\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, listPages.map((item, index) => {\n    const current = index + 1;\n    return;\n    React.createElement(\"span\", {\n      onClick: () => props.setPage(current),\n      key: index,\n      className: \"page \".concat(isActived(current)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ReactPaginate, {\n      previousLabel: 'previous',\n      nextLabel: 'next',\n      breakLabel: '...',\n      breakClassName: 'break-me' // pageCount={this.state.pageCount}\n      ,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5 // onPageChange={this.handlePageClick}\n      ,\n      containerClassName: 'pagination',\n      subContainerClassName: 'pages pagination',\n      activeClassName: 'active',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), \" \");\n  }))), countPages > 4 && page < countPages - 3 && React.createElement(\"span\", {\n    className: \"page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" ... \"), React.createElement(\"div\", {\n    className: \"icon\",\n    onClick: nextPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: iconNext,\n    alt: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n}\n\nexport default Navigation;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Ranking/Navigation/index.js"],"names":["React","iconNext","iconPreview","ReactPaginate","Navigation","props","pagination","page","total","per_page","isActived","_page","prevPage","setPage","nextPage","console","log","countPages","listPages","Array","parseInt","fill","marginOffset","width","marginLeft","map","item","index","current"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport iconNext from '../img/Direita.png';\nimport iconPreview from '../img/Esquerda.png';\nimport ReactPaginate from 'react-paginate';\n\n\nimport './styles.scss';\n\nfunction Navigation(props) {\n\n    // const { pagination, setPage } = props\n    const { page, total, per_page } = props.pagination\n\n    const isActived = (_page) => {\n        if (page === _page)\n            return \"activated\"\n        return \"\"\n    }\n\n    const prevPage = () => {\n        if(page > 1)\n        props.setPage(page - 1)\n    }\n\n    const nextPage = () => {\n        console.log(\"nextPage\")\n        if(page < countPages ){\n           props.setPage(page + 1)\n        }\n    }\n\n    const countPages =  ((total - (total % per_page)) / per_page) +((total % per_page) !== 0 ? 1 : 0)\n    console.log(\":::::CONUNT PAGE\", countPages )\n    const listPages = new Array(parseInt(countPages)).fill(null)\n    console.log(\":::::LIST PAGE\", listPages)\n    const marginOffset = () => {\n        if(countPages - page < 4 && countPages > 3){\n            return -((countPages-4)*42)\n        }\n        return -((page-1)*42)\n    }\n\n    const width = () => {\n        if(countPages < 4){\n            return countPages*42\n        }\n        return 4*42\n    }\n\n    return (\n        <div className=\"containerNavigation\">\n            <div className=\"icon\" onClick={prevPage}><img src={iconPreview} alt=\"next\" /></div>\n            <div className=\"navigationBody\" style={{width: width()}}>\n                <div className=\"navigationList\" style={{marginLeft: marginOffset()}}>\n                    {listPages.map((item, index) => {\n                        const current = index + 1\n                        return \n                <span onClick={()=>props.setPage(current)} key={index} className={`page ${isActived(current)}`}> \n                    <ReactPaginate\n                        previousLabel={'previous'}\n                        nextLabel={'next'}\n                        breakLabel={'...'}\n                        breakClassName={'break-me'}\n                        // pageCount={this.state.pageCount}\n                        marginPagesDisplayed={2}\n                        pageRangeDisplayed={5}\n                        // onPageChange={this.handlePageClick}\n                        containerClassName={'pagination'}\n                        subContainerClassName={'pages pagination'}\n                        activeClassName={'active'}\n                      /> </span>\n                    }\n                    )}\n                </div>\n            </div>\n            {countPages > 4 && page < countPages - 3 && <span className={`page`}> ... </span>}\n\n            <div className=\"icon\" onClick={nextPage}><img src={iconNext} alt=\"next\" /></div>\n        </div>\n    )\n}\n\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}