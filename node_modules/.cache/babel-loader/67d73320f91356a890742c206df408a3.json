{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/HistoricoDuelos/Card/index.js\";\nimport React from 'react';\nimport starGold from \"../../../assets/icons/star-red.svg\";\nimport win from '../../../assets/images/vitoria.png';\nimport review from '../../../assets/images/review.png';\nimport './styles.scss';\n\nconst renderTitle = props => {\n  console.log(\"PROPS ::  \", props);\n  let text = \" \".concat(props.platform, \" \\xB7 \").concat(props.matchTitle);\n  if (props.matchTitle === \"Duelo Individual\") text = \" \".concat(props.platform, \" \\xB7 Individual\");\n  return text;\n};\n\nconst renderStarType = props => {\n  let starType = \"\".concat(props.starType);\n\n  if (props.starType === \"RED_STAR\") {\n    starType = \"Red Star\";\n    return starType;\n  } else {\n    starType = \"Gold Star\";\n    return starType;\n  }\n};\n\nconst renderWinner = props => {\n  const _props$winner = props.winner,\n        winner = _props$winner === void 0 ? {} : _props$winner;\n  let textWinner = \"\".concat(winner && winner.i_am_winner);\n\n  if (winner && winner.i_am_winner === true) {\n    textWinner = \"voc\\xEA venceu \".concat(props.opponentName, \"!\");\n    return textWinner;\n  } else {\n    textWinner = \"Vitoria de \".concat(props.opponentName);\n    return textWinner;\n  }\n};\n\nconst Card = props => {\n  console.log(\"ESSAS SAO AS PROPS: \", props);\n  return React.createElement(\"div\", {\n    className: \"containerCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerImage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"imageGame\",\n    src: props.imageGame,\n    alt: \"Game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"headerInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"nameGame\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.nomeGame), React.createElement(\"span\", {\n    className: \"typeMatch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, renderTitle(props))), React.createElement(\"div\", {\n    className: \"contentInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerBetPremium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerBet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentBet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"contentTextInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.status === \"under_review\" ? \"Apurando resultado\" : renderWinner(props)))), React.createElement(\"div\", {\n    className: \"containerPremium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: starGold,\n    alt: \"Star Gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"contentPremium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"subTextInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Pr\\xEAmio\"), React.createElement(\"span\", {\n    className: \"contentTextInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.premium, \" \", renderStarType(props))))), React.createElement(\"div\", {\n    className: \"containerDataDuration\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentData\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"subTextInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Data\"), React.createElement(\"span\", {\n    className: \"contentTextInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, props.date))))), React.createElement(\"div\", {\n    className: \"containerWin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.status === \"under_review\" ? React.createElement(\"img\", {\n    src: review,\n    alt: \"Em apura\\xE7\\xE3o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }) : React.createElement(\"img\", {\n    src: win,\n    alt: \"Vit\\xF3ria\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })));\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/HistoricoDuelos/Card/index.js"],"names":["React","win","review","renderTitle","props","console","log","text","platform","matchTitle","renderStarType","starType","renderWinner","winner","textWinner","i_am_winner","opponentName","Card","imageGame","nomeGame","status","starGold","premium","date"],"mappings":"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","sourcesContent":["import React from 'react'\nimport starGold from '../../../assets/icons/star-red.svg';\nimport win from '../../../assets/images/vitoria.png';\nimport review from '../../../assets/images/review.png';\n\nimport './styles.scss';\n\nconst renderTitle = props => {\n    console.log(\"PROPS ::  \", props)\n    let text = ` ${props.platform} · ${props.matchTitle}`\n    if(props.matchTitle === \"Duelo Individual\")\n        text = ` ${props.platform} · Individual`\n    return text\n}\n\nconst renderStarType = props => {\n    let starType = `${props.starType}`\n    if(props.starType === \"RED_STAR\") {\n        starType = `Red Star`\n        return starType\n    } else {\n        starType = `Gold Star`\n        return starType\n    }\n}\n\nconst renderWinner = props => {\n    const { winner = {}} = props\n    let textWinner = `${winner && winner.i_am_winner}`\n    if(winner && winner.i_am_winner === true){\n        textWinner = `você venceu ${props.opponentName}!`\n        return textWinner\n    } else {\n        textWinner = `Vitoria de ${props.opponentName}`\n        return textWinner\n    }\n}\n\nconst Card = (props) => {\n        console.log(\"ESSAS SAO AS PROPS: \", props)\n        return (\n            <div className=\"containerCard\">\n                {/* Primeira coluna */}\n                <div className=\"containerImage\">\n                    <img className=\"imageGame\" src={props.imageGame} alt=\"Game\"></img>\n                </div>\n                {/* Final da primeira coluna */}\n\n                {/* Segunda coluna */}\n                <div className=\"containerInfo\">\n                    <div className=\"headerInfo\">\n                        <h3 className=\"nameGame\">{props.nomeGame}</h3>\n                        <span className=\"typeMatch\">{renderTitle(props)}</span>\n                    </div>\n                    <div className=\"contentInfo\">\n                        <div className=\"containerBetPremium\">\n                            <div className=\"containerBet\">\n                                <div className=\"contentBet\">\n                                    <span className=\"contentTextInfo\">{ props.status === \"under_review\" ? \"Apurando resultado\" :renderWinner(props)}</span>\n                                </div>\n                            </div>\n                            <div className=\"containerPremium\">\n                                <img src={starGold} alt=\"Star Gold\"></img>\n                                <div className=\"contentPremium\">\n                                    <span className=\"subTextInfo\">Prêmio</span>\n                                    <span className=\"contentTextInfo\">{props.premium} {renderStarType(props)}</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"containerDataDuration\">\n                            <div className=\"contentData\">\n                                <span className=\"subTextInfo\">Data</span>\n                                <span className=\"contentTextInfo\">{props.date}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {/* Final da segunda coluna */}\n\n                {/* Terceira coluna  */}               \n                <div className=\"containerWin\">\n                    { props.status === \"under_review\" ? <img src={review} alt=\"Em apuração\"/> : <img src={win} alt=\"Vitória\"/> }\n                </div>  \n               \n                {/* Final Terceira coluna */}\n            </div>\n            \n        ) \n}\nexport default Card;"]},"metadata":{},"sourceType":"module"}