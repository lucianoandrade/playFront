{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/RecuperaSenha/CodigoConfirmacao/index.js\";\nimport React from 'react';\nimport { Auth } from \"aws-amplify\";\nimport smartphone from '../../Cadastro/InicioDoCadastro/CodConfirmacao/img/smartphone.png';\nimport '../../Cadastro/InicioDoCadastro/CodConfirmacao/styles.scss';\nimport { withRouter } from 'react-router-dom';\n\nconst confirmCodigo = () => {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerCodConfirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lightBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"lightBoxContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: smartphone,\n    alt: \"Icone Cel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Confirme seu n\\xFAmero de telefone\"), React.createElement(\"p\", {\n    className: \"paragraph\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Enviamos um c\\xF3digo de confirma\\xE7\\xE3o por SMS para voc\\xEA. Por favor, digite-o abaixo.\"), React.createElement(\"form\", {\n    className: \"formConfirm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputInline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"codConfirm\",\n    type: \"text\",\n    name: \"codigo\",\n    label: \"C\\xF3digo de confirma\\xE7\\xE3o\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"btnDefault\",\n    type: \"submit\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Confirmar\"), React.createElement(\"button\", {\n    className: \"btnSecundary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Reenviar C\\xF3digo\"))))));\n};\n\nconst ConfirmCodigoForm = withRouter(withFormik({\n  mapPropsToValues({\n    codigo\n  }) {\n    return {\n      codigo: codigo || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    codigo: Yup.string().required(\"Campo obrigatório\").length(6, 'Codigo inválido')\n  }),\n\n  handleSubmit({\n    codigo\n  }, {\n    props,\n    setFieldError,\n    setSubmitting\n  }) {\n    setSubmitting(true);\n    console.log('Dados: ', {\n      email: props.history.location.state.email,\n      codigo: codigo\n    });\n    Auth.confirmSignUp(props.history.location.state.email, codigo.toString()).then(result => {\n      setSubmitting(false);\n      props.history.push('/dadosuser', {\n        initCadastro: props.history.location.state.email,\n        codigoconfimacao: codigo\n      });\n      console.log(\"Minhas props no codigo de confirmação são\", props.history.location);\n    }).catch(error => {\n      console.log('Erro confirmando assinatura: ', error);\n      window.alert('Codigo de confirmação invalido');\n      setSubmitting(false);\n    });\n  }\n\n})(confirmCodigo));\nexport default ConfirmSignupForm;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/RecuperaSenha/CodigoConfirmacao/index.js"],"names":["React","Auth","smartphone","withRouter","confirmCodigo","ConfirmCodigoForm","withFormik","mapPropsToValues","codigo","validationSchema","Yup","object","shape","string","required","length","handleSubmit","props","setFieldError","setSubmitting","console","log","email","history","location","state","confirmSignUp","toString","then","result","push","initCadastro","codigoconfimacao","catch","error","window","alert","ConfirmSignupForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Auth } from \"aws-amplify\";\n\nimport smartphone from '../../Cadastro/InicioDoCadastro/CodConfirmacao/img/smartphone.png';\nimport '../../Cadastro/InicioDoCadastro/CodConfirmacao/styles.scss';\nimport { withRouter } from 'react-router-dom';\n\nconst confirmCodigo = () => {\n  \n  return (\n        <React.Fragment>\n            <div className=\"containerCodConfirm\">\n                <div className=\"lightBox\">\n                    <div className=\"lightBoxContent\">\n                        <img src={smartphone} alt=\"Icone Cel\"/>\n                        <h3>Confirme seu número de telefone</h3>\n                        <p className=\"paragraph\">Enviamos um código de confirmação por SMS para você. Por favor, digite-o abaixo.</p>\n                        <form className=\"formConfirm\">\n                            <div className=\"inputInline\">\n                                <input id=\"codConfirm\" type=\"text\" name=\"codigo\" label=\"Código de confirmação\" required/>\n                            </div>\n                            <button className=\"btnDefault\" type=\"submit\" required>Confirmar</button>\n                            <button className=\"btnSecundary\" type=\"submit\">Reenviar Código</button> \n                        </form>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n};\n\nconst ConfirmCodigoForm = withRouter(withFormik({\n    mapPropsToValues({ codigo }) {\n      return {\n        codigo: codigo || ''\n      }\n    },\n    validationSchema: Yup.object().shape({\n      codigo: Yup.string()\n        .required(\"Campo obrigatório\")\n        .length(6, 'Codigo inválido')\n    }),\n    handleSubmit({ codigo }, { props, setFieldError, setSubmitting }) {\n      setSubmitting(true);\n      console.log('Dados: ', {email: props.history.location.state.email, codigo: codigo});\n      Auth.confirmSignUp(props.history.location.state.email, codigo.toString()).then((result) => {\n          setSubmitting(false);\n          props.history.push('/dadosuser', {initCadastro: props.history.location.state.email, codigoconfimacao: codigo});\n          console.log(\"Minhas props no codigo de confirmação são\", props.history.location)\n        })\n        .catch(error => {\n          console.log('Erro confirmando assinatura: ', error);\n          window.alert('Codigo de confirmação invalido');\n          setSubmitting(false);\n        });\n    }\n  })(confirmCodigo));\n\nexport default ConfirmSignupForm;\n"]},"metadata":{},"sourceType":"module"}