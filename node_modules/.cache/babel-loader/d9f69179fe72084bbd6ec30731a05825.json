{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Converter/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\nimport { API } from \"aws-amplify\";\nimport config from '../../config/constants';\nimport imgStarBlue from \"../Converter/img/star-blue.png\";\nimport imgStarGold from \"../Converter/img/star-gold.png\";\nimport seta from \"../Converter/img/seta.svg\";\nimport './styles.scss';\n\nconst Converter = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        quantidade = _useState2[0],\n        setQuantidade = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        taxa = _useState4[0],\n        setTaxa = _useState4[1];\n\n  const data = useSelector(state => state.user.data);\n  const alert = useAlert();\n\n  const handleChange = e => {\n    setQuantidade(e.target.value);\n  };\n\n  const converterStars = () => {\n    if (quantidade > data.golden_star_balance) {\n      alert.show(\"Star Gold insuficiente\");\n      return;\n    }\n\n    if (quantidade === '0' || !quantidade) {\n      alert.error(\"Informe um valor valido para ser convertido.\");\n      return;\n    }\n\n    if (quantidade * taxa > quantidade) {\n      alert.success(\"Stars convertidas com sucesso!\");\n      console.log(\"\u001c:::::::::\", quantidade);\n      setQuantidade(\"\");\n    }\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"containerConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"infoConverter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Converter Stars\"), React.createElement(\"p\", {\n    className: \"saldo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Seu saldo de Star Gold \\xE9 de: \", data.golden_star_balance), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam vestibulum, mi vel placerat auctor, tellus sapien congue ex, id ornare mi sem sit amet ex.\")), React.createElement(\"div\", {\n    className: \"converterStars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"img-star\",\n    src: imgStarGold,\n    alt: \"Stars Gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"StarsGold\",\n    onChange: handleChange,\n    value: quantidade,\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"StarsGold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Stars Gold\")), React.createElement(\"img\", {\n    className: \"seta\",\n    src: seta,\n    alt: \"conversao\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"StarsBlue\",\n    onChange: handleChange,\n    value: quantidade && quantidade * taxa,\n    type: \"number\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"StarsBlue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Stars Blue\")), React.createElement(\"img\", {\n    className: \"img-star\",\n    src: imgStarBlue,\n    alt: \"Stars Blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: converterStars,\n    className: \"btnDefault\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Converter\"))));\n};\n\nexport default Converter;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Converter/index.js"],"names":["React","useState","useEffect","useSelector","useAlert","API","config","imgStarBlue","imgStarGold","Converter","quantidade","setQuantidade","taxa","setTaxa","data","state","user","alert","handleChange","e","target","value","converterStars","golden_star_balance","show","error","success","console","log","seta"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux';\nimport { useAlert } from 'react-alert';\n\nimport { API } from \"aws-amplify\"\nimport config from '../../config/constants';\n\nimport imgStarBlue from \"../Converter/img/star-blue.png\";\nimport imgStarGold from \"../Converter/img/star-gold.png\";\nimport seta from \"../Converter/img/seta.svg\";\n\nimport './styles.scss';\n\n\n\nconst Converter = () => {\n    \n    const [quantidade, setQuantidade] = useState(\"\");\n    const [taxa, setTaxa] = useState(\"\");\n    const data = useSelector(state => state.user.data); \n    const alert = useAlert()\n       \n    const handleChange = e => {\n        setQuantidade(e.target.value);\n      };\n\n    const converterStars = () => {\n        if (quantidade > data.golden_star_balance) {\n            alert.show(\"Star Gold insuficiente\");\n          return;\n        }\n\n        if (quantidade === '0' || !quantidade)  {\n            alert.error(\"Informe um valor valido para ser convertido.\");\n          return;\n        }\n\n        if (quantidade * taxa > quantidade) {\n            alert.success(\"Stars convertidas com sucesso!\");\n            console.log(\"\u001c:::::::::\", quantidade)\n          setQuantidade(\"\");\n        }\n    };\n\n    \n\n\n        \n    return (\n        <React.Fragment>\n            <section className=\"containerConverter\">       \n                <div className=\"contentConverter\">                   \n                    <div className=\"infoConverter\"> \n                        <h1>Converter Stars</h1>\n                        <p className=\"saldo\">Seu saldo de Star Gold é de: {data.golden_star_balance}</p>\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n                        Nam vestibulum, mi vel placerat auctor, tellus sapien congue ex, id ornare mi sem sit amet ex.</p>\n                    </div>\n                    <div className=\"converterStars\">\n                        <img className=\"img-star\" src={imgStarGold} alt=\"Stars Gold\"></img>\n                        <fieldset>\n                            <input \n                            id=\"StarsGold\" \n                            onChange={handleChange}\n                            value={quantidade}\n                            type=\"number\" \n                            required/>\n                            <label className=\"label\" htmlFor=\"StarsGold\">Stars Gold</label>\n                        </fieldset>\n                        <img className=\"seta\" src={seta} alt=\"conversao\"></img>\n                        <fieldset>\n                            <input \n                            id=\"StarsBlue\" \n                            onChange={handleChange}\n                            value={quantidade && quantidade * taxa}         \n                            type=\"number\" \n                            required/>\n                            <label className=\"label\" htmlFor=\"StarsBlue\">Stars Blue</label>\n                        </fieldset>\n                        <img className=\"img-star\" src={imgStarBlue} alt=\"Stars Blue\"></img>\n                    </div>\n                        <button onClick={converterStars} className=\"btnDefault\">Converter</button>\n                </div>\n            </section>\n        </React.Fragment>        \n    )\n}\n\nexport default Converter"]},"metadata":{},"sourceType":"module"}