{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Perfil/EditarConsoles/index.js\";\n// import React, { useState, useEffect } from 'react';\n// import { API } from \"aws-amplify\"\n// import config from \"../../../config/constants\"\n// function EditarConsoles() {\n//     const [userConsole, setUserConsole] = useState('');\n//     useEffect(() => {\n//         API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile')\n//             .then(response => {\n//                 console.log(\"ESSE E O RESPONSE\", response.data.player.consoles)\n//                 setUserConsole(response.data.player.consoles);\n//             })\n//             .catch(error => {\n//                 console.log(\"ERRO NO GET: \", error)\n//             })\n//     }, []);\n//   return (\n//     <section className=\"containerEditConsole\">\n//         <div className=\"contentEditConsole\">\n//             <h2 className=\"titleEditConsole\">Editar plataformas</h2>\n//             <p>Quais plataformas você usa?</p>\n//         </div>\n//     </section>\n//   );\n// }\n// export default EditarConsoles;\nimport React, { useState, useEffect } from 'react';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport config from '../../../config/constants';\nimport { API } from \"aws-amplify\";\n\nfunction EditarPerfil(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1]; // const userOld = useSelector(state => state.user.data.user);\n\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile').then(response => {\n      console.log(response.data.player.consoles);\n      setUser(response.data.player.consoles);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \", error);\n    });\n  }, []); // useEffect(() => {\n  //     props.setValues(userOld)\n  //      // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [userOld])\n\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: \"containerEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titleEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Editar Plataformas\"), EditForm(user))));\n}\n\nfunction EditForm() {\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        redirect = _useState4[0],\n        setRedirect = _useState4[1];\n\n  return React.createElement(React.Fragment, null, redirect && React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Form, {\n    className: \"dadosPessoais\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"blocoDadosPessoais\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"titleH3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Quais plataformas voc\\xEA usa?\"), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"nome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"nome\",\n    type: \"text\",\n    name: \"name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"nome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Nome completo\")), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"nascimento\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"nickname\",\n    type: \"text\",\n    name: \"nickname\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Nickname\")))), React.createElement(\"div\", {\n    className: \"blocoEnderecoCompleto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btnCancel\",\n    type: \"button\",\n    onClick: () => setRedirect(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Cancelar\"), React.createElement(\"button\", {\n    className: \"btnSave\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Salvar altera\\xE7\\xF5es\")))));\n}\n\nconst SaveEdit = withRouter(withFormik({\n  mapPropsToValues({\n    name,\n    date_birth,\n    nickname,\n    state,\n    city,\n    neighborhood,\n    street,\n    street_number,\n    postal_code,\n    street_complement,\n    profile_image\n  }) {\n    return {\n      name: name || '',\n      date_birth: date_birth || '',\n      nickname: nickname || '',\n      state: state || '',\n      city: city || '',\n      neighborhood: neighborhood || '',\n      street: street || '',\n      street_number: street_number || '',\n      postal_code: postal_code || '',\n      street_complement: street_complement || '',\n      profile_image: profile_image || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Digite seu nome completo!'),\n    nickname: Yup.string().required('Digite seu nickname!'),\n    state: Yup.string().required('Digite seu estado de origem!'),\n    city: Yup.string().required('Digite sua cidade!'),\n    neighborhood: Yup.string().required('Digite seu bairro!'),\n    street: Yup.string().required('Digite sua rua!'),\n    street_number: Yup.string().required('Digite o número da sua casa!'),\n    postal_code: Yup.string().length(9).required(\"Campo obrigatório\")\n  }),\n\n  handleSubmit(values, {\n    props,\n    setValues\n  }) {\n    const options = {\n      body: {\n        user: {\n          name: values.name,\n          email: values.email,\n          date_birth: values.date_birth,\n          street: values.street,\n          street_number: values.street_number,\n          street_complement: values.street_complement,\n          neighborhood: values.neighborhood,\n          city: values.city,\n          state: values.state,\n          country: \"Brasil\",\n          postal_code: values.postal_code,\n          phone_number: values.phone_number,\n          cpf: values.cpf,\n          nickname: values.nickname,\n          profile_image: values.profile_image\n        }\n      }\n    };\n    API.put(config.APIS.PLAYERSTARS, '/player', options).then(response => {\n      console.log(\":::::::OPTIONS:::::::\", options);\n      window.location.href = '/perfil';\n    }).catch(error => {\n      console.log(\":::::::OPTIONS:::::::\", options);\n      window.alert('Erro fazendo PUT dos usuario!');\n    });\n  }\n\n})(EditarPerfil));\nexport default SaveEdit;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Perfil/EditarConsoles/index.js"],"names":["React","useState","useEffect","withRouter","Redirect","useSelector","withFormik","Form","Field","ErrorMessage","Yup","config","API","EditarPerfil","props","user","setUser","get","APIS","PLAYERSTARS","then","response","console","log","data","player","consoles","catch","error","EditForm","redirect","setRedirect","SaveEdit","mapPropsToValues","name","date_birth","nickname","state","city","neighborhood","street","street_number","postal_code","street_complement","profile_image","validationSchema","object","shape","string","required","length","handleSubmit","values","setValues","options","body","email","country","phone_number","cpf","put","window","location","href","alert"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { API } from \"aws-amplify\"\n// import config from \"../../../config/constants\"\n\n// function EditarConsoles() {\n\n//     const [userConsole, setUserConsole] = useState('');\n\n//     useEffect(() => {\n//         API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile')\n//             .then(response => {\n//                 console.log(\"ESSE E O RESPONSE\", response.data.player.consoles)\n//                 setUserConsole(response.data.player.consoles);\n//             })\n//             .catch(error => {\n//                 console.log(\"ERRO NO GET: \", error)\n//             })\n//     }, []);\n \n//   return (\n//     <section className=\"containerEditConsole\">\n//         <div className=\"contentEditConsole\">\n//             <h2 className=\"titleEditConsole\">Editar plataformas</h2>\n//             <p>Quais plataformas você usa?</p>\n//         </div>\n//     </section>\n//   );\n// }\n\n// export default EditarConsoles;\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport config from '../../../config/constants';\nimport { API } from \"aws-amplify\";\n\n\nfunction EditarPerfil(props) {\n    const [user, setUser] = useState([]);\n    // const userOld = useSelector(state => state.user.data.user);\n    \n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile')\n            .then(response => {\n                console.log(response.data.player.consoles)\n                setUser(response.data.player.consoles);\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \", error)\n            })\n    }, []);\n\n    // useEffect(() => {\n    //     props.setValues(userOld)\n    //      // eslint-disable-next-line react-hooks/exhaustive-deps\n    // }, [userOld])\n\n\n    return (\n        <>\n            <section className=\"containerEditProfile\">\n                <div className=\"contentEditProfile\">\n                    <h2 className=\"titleEditProfile\">Editar Plataformas</h2>\n                    {EditForm(user)}\n                </div>\n            </section>\n        </>\n    )\n}\n\nfunction EditForm() {\n    const [redirect, setRedirect] = useState(false)\n    return (\n        <>\n            {redirect && <Redirect to='/' />}\n            <Form className=\"dadosPessoais\">\n                <div className=\"blocoDadosPessoais\">\n                    <h3 className=\"titleH3\">Quais plataformas você usa?</h3>\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"nome\" />\n                    <fieldset>\n                        <Field id=\"nome\" type=\"text\" name=\"name\" required />\n                        <label className=\"label\" htmlFor=\"nome\" >Nome completo</label>\n                    </fieldset>\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"nascimento\" />\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"nickname\" />\n                    <div>\n                        <fieldset>\n                            <Field id=\"nickname\" type=\"text\" name=\"nickname\" required />\n                            <label className=\"label\" htmlFor=\"nickname\" >Nickname</label>\n                        </fieldset>\n                    </div>\n                </div>\n                <div className=\"blocoEnderecoCompleto\">\n                    <div className=\"containerBtn\">\n                        <button className=\"btnCancel\" type=\"button\" onClick={() => setRedirect(true)}>Cancelar</button>\n                        <button className=\"btnSave\" type=\"submit\" >Salvar alterações</button>\n                    </div>\n                </div>\n            </Form>\n        </>\n    )\n}\n\nconst SaveEdit = withRouter(withFormik({\n    mapPropsToValues({\n        name,\n        date_birth,\n        nickname,\n        state,\n        city,\n        neighborhood,\n        street,\n        street_number,\n        postal_code,\n        street_complement,\n        profile_image\n    }) {\n        return {\n            name: name || '',\n            date_birth: date_birth || '',\n            nickname: nickname || '',\n            state: state || '',\n            city: city || '',\n            neighborhood: neighborhood || '',\n            street: street || '',\n            street_number: street_number || '',\n            postal_code: postal_code || '',\n            street_complement: street_complement || '',\n            profile_image: profile_image || ''\n        }\n    },\n    validationSchema: Yup.object().shape({\n        name: Yup.string().required('Digite seu nome completo!'),\n        nickname: Yup.string().required('Digite seu nickname!'),\n        state: Yup.string().required('Digite seu estado de origem!'),\n        city: Yup.string().required('Digite sua cidade!'),\n        neighborhood: Yup.string().required('Digite seu bairro!'),\n        street: Yup.string().required('Digite sua rua!'),\n        street_number: Yup.string().required('Digite o número da sua casa!'),\n        postal_code: Yup.string().length(9).required(\"Campo obrigatório\")\n    }),\n    handleSubmit(values, { props, setValues }) {\n        const options = {\n            body: {\n                user: {\n                    name: values.name,\n                    email: values.email,\n                    date_birth: values.date_birth,\n                    street: values.street,\n                    street_number: values.street_number,\n                    street_complement: values.street_complement,\n                    neighborhood: values.neighborhood,\n                    city: values.city,\n                    state: values.state,\n                    country: \"Brasil\",\n                    postal_code: values.postal_code,\n                    phone_number: values.phone_number,\n                    cpf: values.cpf,\n                    nickname: values.nickname,\n                    profile_image: values.profile_image\n                }\n            }\n        }\n        API.put(config.APIS.PLAYERSTARS, '/player', options)\n            .then(response => {\n                console.log(\":::::::OPTIONS:::::::\", options)\n                window.location.href = '/perfil'\n            })\n            .catch(error => {\n                console.log(\":::::::OPTIONS:::::::\", options)\n                window.alert('Erro fazendo PUT dos usuario!');\n            })\n    }\n})(EditarPerfil));\n\nexport default SaveEdit"]},"metadata":{},"sourceType":"module"}