{"ast":null,"code":"var _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/InicioDoCadastro/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Auth } from \"aws-amplify\";\nimport { withRouter, Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\nimport PageContainer from \"../../components/features/PageContainer\";\nimport FormField from \"../../components/elements/FormField\";\nimport logoPlaystars from \"../../assets/images/logo_playerStars.svg\";\nimport iconFacebook from \"../../assets/icons/facebook.svg\";\nimport iconGoogle from \"../../assets/icons/google_plus.svg\";\nimport './styles.scss';\nFormField.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string\n};\n\nconst Signup = props => {\n  return React.createElement(PageContainer, {\n    register: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"telaCadastro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cadastro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"logoPrincipal\",\n    src: logoPlaystars,\n    alt: \"Logo PlayStarts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"h2\", {\n    className: \"tituloLogo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Ol\\xE1 Vamos come\\xE7ar seu cadastro?\"), React.createElement(Form, {\n    className: \"dados\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"inputInline\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"email\",\n    name: \"email\",\n    type: \"text\",\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"inputInline\",\n    name: \"senha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"senha\",\n    name: \"senha\",\n    type: \"password\",\n    label: \"Senha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"inputInline\",\n    name: \"senha2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(FormField, {\n    id: \"senha2\",\n    name: \"senha2\",\n    type: \"password\",\n    label: \"Confirme a senha\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"continuar\",\n    type: \"submit\",\n    style: atv(),\n    disabled: !props.isValid,\n    required: props.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Continuar\")), React.createElement(\"div\", {\n    className: \"redes-sociais\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Link, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"facebook-icon\",\n    src: iconFacebook,\n    alt: \"Icone Facebook\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(Link, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"google-icon\",\n    src: iconGoogle,\n    alt: \"Icone Google plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))))));\n\n  function atv() {\n    const x = props.isValid;\n\n    if (x === true) {\n      return {\n        background: \"#000\"\n      };\n    } else {\n      return {\n        background: \"#BBB\"\n      };\n    }\n  }\n\n  ;\n};\n\nconst SignupForm = withRouter(withFormik({\n  mapPropsToValues({\n    email,\n    senha,\n    senha2\n  }) {\n    return {\n      email: email || '',\n      senha: senha || '',\n      senha2: senha2 || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required(\"Campo obrigatório\").email('Email inválido'),\n    senha: Yup.string().required(\"Campo obrigatório\").min(8, \"Mínimo 8 caracteres\"),\n    senha2: Yup.string().required(\"Campo obrigatório\")\n  }),\n\n  handleSubmit({\n    email,\n    senha,\n    senha2\n  }, {\n    props,\n    setFieldError,\n    setSubmitting\n  }) {\n    console.log(props);\n\n    if (senha !== senha2) {\n      setFieldError(\"senha\", \"As senhas digitadas não estão idênticas.\");\n      setFieldError(\"senha2\", \"As senhas digitadas não estão idênticas.\");\n      return;\n    }\n\n    setSubmitting(true);\n    Auth.signUp(email, senha).then(result => {\n      console.log('Resultado do signup: ', result);\n      console.log('funcionou');\n      props.history.push('/codconfirmacao', {\n        email: email,\n        senha: senha\n      });\n      console.log('Minhas props no inicio do cadastro:', props);\n    }).catch(error => {\n      switch (error.code) {\n        case \"UsernameExistsException\":\n          setFieldError(\"email\", \"Email já está em uso.\");\n          break;\n\n        default:\n          console.log('Erro fazendo signup: ', error);\n          window.alert('Erro fazendo signup');\n          break;\n      }\n\n      setSubmitting(false);\n    });\n  }\n\n})(Signup));\nexport default SignupForm;","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/InicioDoCadastro/index.js"],"names":["React","PropTypes","Auth","withRouter","Link","Yup","withFormik","Form","PageContainer","FormField","propTypes","id","string","isRequired","name","label","type","Signup","props","logoPlaystars","atv","isValid","isSubmitting","iconFacebook","iconGoogle","x","background","SignupForm","mapPropsToValues","email","senha","senha2","validationSchema","object","shape","required","min","handleSubmit","setFieldError","setSubmitting","console","log","signUp","then","result","history","push","catch","error","code","window","alert"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Auth } from \"aws-amplify\";\nimport { withRouter, Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { withFormik, Form } from 'formik';\n\nimport PageContainer from \"../../components/features/PageContainer\"\nimport FormField from \"../../components/elements/FormField\";\n\nimport logoPlaystars from '../../assets/images/logo_playerStars.svg';\nimport iconFacebook from '../../assets/icons/facebook.svg';\nimport iconGoogle from '../../assets/icons/google_plus.svg';\nimport './styles.scss';\n\nFormField.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    type: PropTypes.string,\n  };\n\nconst Signup = (props) => {\n  \n  return (\n    <PageContainer register={true}>\n      <section className=\"telaCadastro\">\n          <div className=\"cadastro\">\n              <img className=\"logoPrincipal\" src={logoPlaystars} alt=\"Logo PlayStarts\" />\n              <h2 className=\"tituloLogo\">Olá Vamos começar seu cadastro?</h2>           \n              <Form className=\"dados\">\n                  <div className=\"inputInline\" name=\"email\">\n                      <FormField id=\"email\" name=\"email\" type=\"text\" label=\"Email\"/>\n                  </div>\n                  <div className=\"inputInline\" name=\"senha\">\n                      <FormField id=\"senha\" name=\"senha\" type=\"password\" label=\"Senha\"/>\n                  </div>\n                  <div className=\"inputInline\"  name=\"senha2\">\n                    <FormField id=\"senha2\" name=\"senha2\" type=\"password\" label=\"Confirme a senha\"/>\n                  </div>                  \n                  <button className=\"continuar\"  \n                  type=\"submit\"\n                  style={atv()}\n                  disabled={!props.isValid}\n                  required={props.isSubmitting}>Continuar</button>\n              </Form>\n              <div className=\"redes-sociais\">\n                  <Link><img className=\"facebook-icon\" src={iconFacebook} alt=\"Icone Facebook\"></img></Link> \n                  <Link><img className=\"google-icon\" src={iconGoogle} alt=\"Icone Google plus\"></img></Link>\n              </div>\n            </div>\n      </section>\n    </PageContainer>  \n  )\n  function atv() { const x = props.isValid; \n    if (x === true) {return({background: `#000`})} else {return({background: `#BBB`}) }\n  };\n}\n\nconst SignupForm = withRouter(withFormik({\n    mapPropsToValues({\n                       email,\n                       senha,\n                       senha2\n                     }) {\n      return {\n        email: email || '',\n        senha: senha || '',\n        senha2: senha2 || ''\n      }\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string()\n        .required(\"Campo obrigatório\")\n        .email('Email inválido'),\n      senha: Yup.string()\n        .required(\"Campo obrigatório\")\n        .min(8, \"Mínimo 8 caracteres\"),\n      senha2: Yup.string()\n        .required(\"Campo obrigatório\")\n    }),\n      \n    handleSubmit({ email, senha, senha2 }, { props, setFieldError, setSubmitting }) {\n      console.log(props);\n      if(senha !== senha2) {\n        setFieldError(\"senha\", \"As senhas digitadas não estão idênticas.\");\n        setFieldError(\"senha2\", \"As senhas digitadas não estão idênticas.\");\n        return;\n      } \n      setSubmitting(true);\n  \n      Auth.signUp(email, senha)\n        .then((result) => {\n          console.log('Resultado do signup: ', result)\n          console.log('funcionou')\n          props.history.push('/codconfirmacao', { email: email, senha: senha });\n          console.log('Minhas props no inicio do cadastro:',props)\n        })\n        .catch(error => {\n          switch(error.code) {\n            case \"UsernameExistsException\":\n              setFieldError(\"email\", \"Email já está em uso.\");\n              break;\n            default:\n              console.log('Erro fazendo signup: ', error);\n              window.alert('Erro fazendo signup');\n              break;\n          }\n          setSubmitting(false);\n  \n        });\n    }\n  })(Signup));\n  \nexport default SignupForm;"]},"metadata":{},"sourceType":"module"}