{"ast":null,"code":"import _defineProperty from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/Consoles/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { API, Auth } from \"aws-amplify\";\nimport { withRouter } from \"react-router-dom\";\nimport config from \"../../../config/constants\";\nimport TimelineCadastro from '../TimelineCadastro';\nimport './styles.scss';\n\nfunction ConsoleComponent(props) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        consoles = _useState2[0],\n        setConsoles = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        form = _useState4[0],\n        setForm = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isValid = _useState6[0],\n        setValidation = _useState6[1];\n\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/console/').then(response => {\n      setConsoles(response.data);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \", consoles);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    setValidation(verifyValid(form)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [form]);\n\n  const handleChangeInput = ev => {\n    setForm(_objectSpread({}, form, {\n      [ev.target.name]: {\n        entity_id: ev.target.id,\n        tag_name: ev.target.value\n      }\n    }));\n  };\n\n  const verifyValid = _form => {\n    return !!Object.keys(form).find(key => {\n      return !!form[key].tag_name;\n    });\n  };\n\n  const handleSubmit = ev => {\n    ev.preventDefault();\n    const listConsoles = Object.keys(form).map(key => {\n      return {\n        entity_id: form[key].entity_id,\n        tag_name: form[key].tag_name\n      };\n    });\n    Auth.currentAuthenticatedUser().then(response => {\n      const options = {\n        body: {\n          consoles: listConsoles\n        }\n      };\n      API.post(config.APIS.PLAYERSTARS, '/player/console-data', options).then(response => {\n        props.history.push('/termos');\n      }).catch(error => {\n        console.log('Esse é o retorno das options', options);\n        window.alert('Erro fazendo post dos dados do usuário.');\n      });\n    }).catch(error => {\n      console.log(\"Erro obtendo usuario atual\", error);\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: \"telaConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(TimelineCadastro, {\n    current: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"consoles\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"titleH3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Insira a Tagname de suas plataformas\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"dadosConsole\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, consoles.length > 0 ? consoles.map((platform, index) => React.createElement(\"fieldset\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: handleChangeInput,\n    id: platform.entity_id,\n    type: \"text\",\n    name: platform.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: platform.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Tagname do \", platform.name))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"continuar\",\n    type: \"submit\",\n    style: atv(),\n    disabled: !isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Continuar\")))));\n\n  function atv() {\n    const x = isValid;\n\n    if (x === true) {\n      return {\n        background: \"#000\"\n      };\n    } else {\n      return {\n        background: \"#BBB\"\n      };\n    }\n  }\n\n  ;\n}\n\nexport default withRouter(ConsoleComponent);","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/components/Cadastro/Consoles/index.js"],"names":["React","useState","useEffect","API","Auth","withRouter","config","TimelineCadastro","ConsoleComponent","props","consoles","setConsoles","form","setForm","isValid","setValidation","get","APIS","PLAYERSTARS","then","response","data","catch","error","console","log","verifyValid","handleChangeInput","ev","target","name","entity_id","id","tag_name","value","_form","Object","keys","find","key","handleSubmit","preventDefault","listConsoles","map","currentAuthenticatedUser","options","body","post","history","push","window","alert","length","platform","index","atv","x","background"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AAEA,OAAO,eAAP;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA,oBAEGR,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,QAEtBS,QAFsB;AAAA,QAEZC,WAFY;;AAAA,qBAGLV,QAAQ,CAAC,EAAD,CAHH;AAAA;AAAA,QAGtBW,IAHsB;AAAA,QAGhBC,OAHgB;;AAAA,qBAIIZ,QAAQ,CAAC,KAAD,CAJZ;AAAA;AAAA,QAItBa,OAJsB;AAAA,QAIbC,aAJa;;AAM7Bb,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,GAAG,CAACa,GAAJ,CAAQV,MAAM,CAACW,IAAP,CAAYC,WAApB,EAAiC,WAAjC,EACKC,IADL,CACUC,QAAQ,IAAI;AACdT,MAAAA,WAAW,CAACS,QAAQ,CAACC,IAAV,CAAX;AACH,KAHL,EAIKC,KAJL,CAIWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bf,QAA7B;AACH,KANL,EADY,CAQR;AACP,GATQ,EASN,EATM,CAAT;AAWAR,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,aAAa,CAACW,WAAW,CAACd,IAAD,CAAZ,CAAb,CADU,CAEV;AACH,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;;AAKA,QAAMe,iBAAiB,GAAIC,EAAD,IAAQ;AAC9Bf,IAAAA,OAAO,mBACAD,IADA;AAEH,OAACgB,EAAE,CAACC,MAAH,CAAUC,IAAX,GAAkB;AACdC,QAAAA,SAAS,EAAEH,EAAE,CAACC,MAAH,CAAUG,EADP;AAEdC,QAAAA,QAAQ,EAAEL,EAAE,CAACC,MAAH,CAAUK;AAFN;AAFf,OAAP;AAOH,GARD;;AAUA,QAAMR,WAAW,GAAIS,KAAD,IAAW;AAC5B,WAAO,CAAC,CAACC,MAAM,CAACC,IAAP,CAAYzB,IAAZ,EAAkB0B,IAAlB,CAAuBC,GAAG,IAAE;AAChC,aAAO,CAAC,CAAC3B,IAAI,CAAC2B,GAAD,CAAJ,CAAUN,QAAnB;AACH,KAFO,CAAT;AAGF,GAJD;;AAMA,QAAMO,YAAY,GAAIZ,EAAD,IAAQ;AACzBA,IAAAA,EAAE,CAACa,cAAH;AACA,UAAMC,YAAY,GAAGN,MAAM,CAACC,IAAP,CAAYzB,IAAZ,EAAkB+B,GAAlB,CAAsBJ,GAAG,IAAE;AAC5C,aAAO;AACHR,QAAAA,SAAS,EAAEnB,IAAI,CAAC2B,GAAD,CAAJ,CAAUR,SADlB;AAEHE,QAAAA,QAAQ,EAAErB,IAAI,CAAC2B,GAAD,CAAJ,CAAUN;AAFjB,OAAP;AAIH,KALoB,CAArB;AAMA7B,IAAAA,IAAI,CAACwC,wBAAL,GACKzB,IADL,CACUC,QAAQ,IAAI;AACd,YAAMyB,OAAO,GAAG;AACZC,QAAAA,IAAI,EAAE;AACFpC,UAAAA,QAAQ,EAAEgC;AADR;AADM,OAAhB;AAKAvC,MAAAA,GAAG,CAAC4C,IAAJ,CAASzC,MAAM,CAACW,IAAP,CAAYC,WAArB,EAAkC,sBAAlC,EAA0D2B,OAA1D,EACK1B,IADL,CACUC,QAAQ,IAAI;AACdX,QAAAA,KAAK,CAACuC,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACH,OAHL,EAIK3B,KAJL,CAIWC,KAAK,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CoB,OAA5C;AACAK,QAAAA,MAAM,CAACC,KAAP,CAAa,yCAAb;AACH,OAPL;AAQH,KAfL,EAgBK7B,KAhBL,CAgBWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,KAA1C;AACH,KAlBL;AAmBH,GA3BD;;AA6BA,SACI,0CAEI;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADJ,EAEI;AAAM,IAAA,QAAQ,EAAEiB,YAAhB;AAA8B,IAAA,SAAS,EAAC,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9B,QAAQ,CAAC0C,MAAT,GAAkB,CAAlB,GACG1C,QAAQ,CAACiC,GAAT,CAAa,CAACU,QAAD,EAAWC,KAAX,KACT;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,QAAQ,EAAE3B,iBAAjB;AAAoC,IAAA,EAAE,EAAE0B,QAAQ,CAACtB,SAAjD;AAA4D,IAAA,IAAI,EAAC,MAAjE;AAAwE,IAAA,IAAI,EAAEsB,QAAQ,CAACvB,IAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAEuB,QAAQ,CAACvB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA6DuB,QAAQ,CAACvB,IAAtE,CAFJ,CADJ,CADH,GAMQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPb,EASI;AACI,IAAA,SAAS,EAAC,WADd;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,KAAK,EAAEyB,GAAG,EAHd;AAII,IAAA,QAAQ,EAAE,CAACzC,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBATJ,CAFJ,CAFJ,CAFJ,CADJ;;AA6BA,WAASyC,GAAT,GAAe;AACX,UAAMC,CAAC,GAAG1C,OAAV;;AACA,QAAI0C,CAAC,KAAK,IAAV,EAAgB;AAAE,aAAQ;AAAEC,QAAAA,UAAU;AAAZ,OAAR;AAAiC,KAAnD,MAAyD;AAAE,aAAQ;AAAEA,QAAAA,UAAU;AAAZ,OAAR;AAAiC;AAC/F;;AAAA;AACJ;;AAGD,eAAepD,UAAU,CAACG,gBAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { API, Auth } from \"aws-amplify\"\nimport { withRouter } from \"react-router-dom\"\nimport config from \"../../../config/constants\"\nimport TimelineCadastro from '../TimelineCadastro';\n\nimport './styles.scss'\n\nfunction ConsoleComponent(props) {\n\n    const [consoles, setConsoles] = useState(\"\")\n    const [form, setForm] = useState({}) \n    const [isValid, setValidation] = useState(false)\n\n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/console/')\n            .then(response => {\n                setConsoles(response.data);\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \", consoles)\n            })\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(()=>{\n        setValidation(verifyValid(form))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [form])\n\n    const handleChangeInput = (ev) => {\n        setForm({\n            ...form,\n            [ev.target.name]: {\n                entity_id: ev.target.id,\n                tag_name: ev.target.value\n            }\n        })\n    }\n\n    const verifyValid = (_form) => {\n       return !!Object.keys(form).find(key=>{\n            return !!form[key].tag_name\n        })\n    }\n\n    const handleSubmit = (ev) => {\n        ev.preventDefault()\n        const listConsoles = Object.keys(form).map(key=>{\n            return {\n                entity_id: form[key].entity_id,\n                tag_name: form[key].tag_name\n            }\n        })\n        Auth.currentAuthenticatedUser()\n            .then(response => {\n                const options = {\n                    body: {\n                        consoles: listConsoles\n                    }\n                }\n                API.post(config.APIS.PLAYERSTARS, '/player/console-data', options)\n                    .then(response => {\n                        props.history.push('/termos');\n                    })\n                    .catch(error => {\n                        console.log('Esse é o retorno das options', options);\n                        window.alert('Erro fazendo post dos dados do usuário.');\n                    })\n            })\n            .catch(error => {\n                console.log(\"Erro obtendo usuario atual\", error)\n            })\n    }\n\n    return (\n        <>\n            \n            <section className=\"telaConsole\">\n            <TimelineCadastro current={3} />\n                <div className=\"consoles\">\n                    <h3 className=\"titleH3\">Insira a Tagname de suas plataformas</h3>\n                    <form onSubmit={handleSubmit} className=\"dadosConsole\">\n                        {consoles.length > 0 ?\n                            consoles.map((platform, index) => (\n                                <fieldset key={index}>\n                                    <input onChange={handleChangeInput} id={platform.entity_id} type=\"text\" name={platform.name} />\n                                    <label className=\"label\" htmlFor={platform.name}>Tagname do {platform.name}</label>\n                                </fieldset>\n                            )) : <div></div>\n                        }\n                        <button\n                            className=\"continuar\"\n                            type=\"submit\"\n                            style={atv()}\n                            disabled={!isValid}\n                        >Continuar\n                        </button>\n                    </form>\n                </div>\n            </section>\n        </>\n    )\n\n    function atv() {\n        const x = isValid;\n        if (x === true) { return ({ background: `#000` }) } else { return ({ background: `#BBB` }) }\n    };\n}\n\n\nexport default withRouter(ConsoleComponent);"]},"metadata":{},"sourceType":"module"}