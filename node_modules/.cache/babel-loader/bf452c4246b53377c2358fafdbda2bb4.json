{"ast":null,"code":"import _slicedToArray from \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/EditarPerfil/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { withAlert } from 'react-alert';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport MaskedInput from 'react-text-mask';\nimport { API } from \"aws-amplify\";\nimport config from '../../config/constants';\nimport PageContainer from \"../../components/features/PageContainer\";\nimport AlertMessage from '../../components/elements/AlertMessage';\nimport { setUserImage } from \"../../store/actions/user.action\";\nimport moment from 'moment';\nimport avatarDefault from \"../../assets/icons/avatar-preto-header.svg\";\nimport iconremove from '../../assets/images/icon-remove-profile.png';\nimport iconedit from '../../assets/images/editar-perfil-profile.png';\nimport './styles.scss';\n\nconst convertBase64 = image => {\n  return new Promise((resolve, reject) => {\n    let reader = new FileReader();\n    reader.readAsDataURL(image);\n\n    reader.onloadend = () => {\n      resolve(reader.result);\n    };\n  });\n};\n\nfunction EditarPerfil(props) {\n  const dispatch = useDispatch();\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        thumbnailFile = _useState2[0],\n        setThumbnailFile = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        preview = _useState4[0],\n        setPreview = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        user = _useState6[0],\n        setUser = _useState6[1];\n\n  const userOld = useSelector(state => state.user.data.user);\n  const profile_image = userOld.profile_image ? userOld.profile_image : avatarDefault;\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        change = _useState8[0],\n        setChange = _useState8[1];\n\n  useEffect(() => {\n    setPreview(thumbnailFile ? URL.createObjectURL(thumbnailFile) : profile_image);\n  }, [thumbnailFile, profile_image]);\n  useEffect(() => {\n    API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile').then(response => {\n      setUser(response.data.player.user);\n    }).catch(error => {\n      console.log(\"ERRO NO GET: \", error);\n    });\n  }, []);\n  console.log(user);\n  useEffect(() => {\n    props.setValues(userOld); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [userOld]);\n\n  const onChangeFile = async e => {\n    setChange(true);\n    setThumbnailFile(e.target.files[0]);\n\n    if (e.target.files[0] !== \"\") {\n      const imgBase64 = await convertBase64(e.target.files[0]);\n      console.log(\"::::::::BASE64::\", imgBase64);\n      props.setFieldValue(\"profile_image\", imgBase64);\n    }\n  };\n\n  const removePreview = () => {\n    setChange(true);\n    setThumbnailFile(\"\");\n    dispatch(setUserImage(\"\"));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(PageContainer, {\n    public: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"containerEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"contentEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"titleEditProfile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Editar Perfil\"), React.createElement(\"div\", {\n    className: \"containerEditAvatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"containerAvatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: \"url(\".concat(preview || avatarDefault, \")\")\n    },\n    className: \"thumbnail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"containerEditRemove\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"containerPutAvatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"iconEdit\",\n    src: iconedit,\n    alt: \"Icon editar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"textEdit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Alterar imagem\"), React.createElement(\"input\", {\n    className: \"inputAvatar\",\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: onChangeFile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"containerPutAvatar\",\n    onClick: removePreview,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"iconEdit\",\n    src: iconremove,\n    alt: \"Icon remover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"textEdit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Excluir\")))), EditForm(user, change)))));\n}\n\nfunction EditForm(user, change) {\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        redirect = _useState10[0],\n        setRedirect = _useState10[1];\n\n  const _useState11 = useState(\"#bbb\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        btn_color = _useState12[0],\n        setBtn_color = _useState12[1];\n\n  const dateMax = moment(Date.now() - 567648000000).format('YYYY-MM-DD');\n  const dateMin = moment(Date.now() - 2838240000000).format('YYYY-MM-DD');\n  return React.createElement(React.Fragment, null, redirect && React.createElement(Redirect, {\n    to: \"/perfil\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(Form, {\n    className: \"dadosPessoais\",\n    onChange: () => setBtn_color('#000'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"blocoDadosPessoais\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"titleH3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Dados pessoais\"), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"nome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"nome\",\n    type: \"text\",\n    name: \"name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"nome\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Nome completo\")), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"email\",\n    type: \"text\",\n    name: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"E-mail\")), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"nascimento\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    className: \"error\",\n    component: \"span\",\n    name: \"nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"doisCampos\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"date_birth\",\n    id: \"nascimento\",\n    type: \"date\",\n    max: dateMax,\n    min: dateMin,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"nascimento\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Nascimento\")), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"cpf\",\n    render: ({\n      field\n    }) => {\n      return React.createElement(MaskedInput, Object.assign({\n        mask: [/[0-9]/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/]\n      }, field, {\n        id: \"cpf\",\n        type: \"text\",\n        name: \"cpf\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"cpf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"CPF\"))), React.createElement(\"fieldset\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Field, {\n    id: \"nickname\",\n    type: \"text\",\n    name: \"nickname\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"label\",\n    htmlFor: \"nickname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Nickname\"))), React.createElement(\"div\", {\n    className: \"containerBtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btnCancel\",\n    type: \"button\",\n    onClick: () => setRedirect(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Cancelar\"), React.createElement(\"button\", {\n    className: \"btnSave\",\n    type: \"submit\",\n    style: {\n      background: \"\".concat(change ? '#000' : btn_color)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Salvar altera\\xE7\\xF5es\"))));\n}\n\nconst SaveEdit = withRouter(withFormik({\n  mapPropsToValues({\n    name,\n    date_birth,\n    nickname,\n    profile_image\n  }) {\n    return {\n      name: name || '',\n      date_birth: date_birth || '',\n      nickname: nickname || '',\n      profile_image: profile_image || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required('Digite seu nome completo!'),\n    date_birth: Yup.date().required('Digite sua data de nascimento!'),\n    nickname: Yup.string().required('Digite seu nickname!')\n  }),\n\n  handleSubmit(values, {\n    props,\n    setValues\n  }) {\n    const options = {\n      body: {\n        user: {\n          name: values.name,\n          email: values.email,\n          date_birth: values.date_birth,\n          street: values.street,\n          street_number: values.street_number,\n          street_complement: values.street_complement,\n          neighborhood: values.neighborhood,\n          city: values.city,\n          state: values.state,\n          country: \"Brasil\",\n          postal_code: values.postal_code,\n          phone_number: values.phone_number,\n          cpf: values.cpf,\n          nickname: values.nickname,\n          profile_image: values.profile_image\n        }\n      }\n    };\n    API.put(config.APIS.PLAYERSTARS, '/player', options).then(response => {\n      console.log(\":::::::OPTIONS:::::::\", options);\n      window.location.href = '/perfil';\n    }).catch(error => {\n      console.log(\":::::::OPTIONS:::::::\", options);\n      props.alert.error(AlertMessage.erroEditDataUser);\n    });\n  }\n\n})(EditarPerfil));\nexport default withAlert()(SaveEdit);","map":{"version":3,"sources":["/Users/luciano/Desktop/Projetos/PlayerStars/frontend/src/pages/EditarPerfil/index.js"],"names":["React","useState","useEffect","withRouter","Redirect","withAlert","useSelector","useDispatch","withFormik","Form","Field","ErrorMessage","Yup","MaskedInput","API","config","PageContainer","AlertMessage","setUserImage","moment","iconremove","iconedit","convertBase64","image","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","result","EditarPerfil","props","dispatch","thumbnailFile","setThumbnailFile","preview","setPreview","user","setUser","userOld","state","data","profile_image","avatarDefault","change","setChange","URL","createObjectURL","get","APIS","PLAYERSTARS","then","response","player","catch","error","console","log","setValues","onChangeFile","e","target","files","imgBase64","setFieldValue","removePreview","backgroundImage","EditForm","redirect","setRedirect","btn_color","setBtn_color","dateMax","Date","now","format","dateMin","field","background","SaveEdit","mapPropsToValues","name","date_birth","nickname","validationSchema","object","shape","string","required","date","handleSubmit","values","options","body","email","street","street_number","street_complement","neighborhood","city","country","postal_code","phone_number","cpf","put","window","location","href","alert","erroEditDataUser"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,YAAlC,QAAsD,QAAtD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAAQC,YAAR,QAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,OAAOC,UAAP,MAAuB,6CAAvB;AACA,OAAOC,QAAP,MAAqB,+CAArB;AAEA,OAAO,eAAP;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,aAAP,CAAqBN,KAArB;;AACAI,IAAAA,MAAM,CAACG,SAAP,GAAmB,MAAM;AACrBL,MAAAA,OAAO,CAACE,MAAM,CAACI,MAAR,CAAP;AACH,KAFD;AAGH,GANM,CAAP;AAOH,CARD;;AAUA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAMC,QAAQ,GAAG3B,WAAW,EAA5B;;AADyB,oBAEiBN,QAAQ,CAAC,EAAD,CAFzB;AAAA;AAAA,QAElBkC,aAFkB;AAAA,QAEHC,gBAFG;;AAAA,qBAGKnC,QAAQ,CAAC,EAAD,CAHb;AAAA;AAAA,QAGlBoC,OAHkB;AAAA,QAGTC,UAHS;;AAAA,qBAIDrC,QAAQ,CAAC,EAAD,CAJP;AAAA;AAAA,QAIlBsC,IAJkB;AAAA,QAIZC,OAJY;;AAKzB,QAAMC,OAAO,GAAGnC,WAAW,CAACoC,KAAK,IAAIA,KAAK,CAACH,IAAN,CAAWI,IAAX,CAAgBJ,IAA1B,CAA3B;AACA,QAAMK,aAAa,GAAGH,OAAO,CAACG,aAAR,GAAwBH,OAAO,CAACG,aAAhC,GAAgDC,aAAtE;;AANyB,qBAOG5C,QAAQ,CAAC,KAAD,CAPX;AAAA;AAAA,QAOlB6C,MAPkB;AAAA,QAOVC,SAPU;;AASzB7C,EAAAA,SAAS,CAAC,MAAM;AACZoC,IAAAA,UAAU,CAACH,aAAa,GAAGa,GAAG,CAACC,eAAJ,CAAoBd,aAApB,CAAH,GAAwCS,aAAtD,CAAV;AACH,GAFQ,EAEN,CAACT,aAAD,EAAgBS,aAAhB,CAFM,CAAT;AAIA1C,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,GAAG,CAACoC,GAAJ,CAAQnC,MAAM,CAACoC,IAAP,CAAYC,WAApB,EAAiC,wBAAjC,EACKC,IADL,CACUC,QAAQ,IAAI;AACdd,MAAAA,OAAO,CAACc,QAAQ,CAACX,IAAT,CAAcY,MAAd,CAAqBhB,IAAtB,CAAP;AACH,KAHL,EAIKiB,KAJL,CAIWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,KAA7B;AACH,KANL;AAOH,GARQ,EAQN,EARM,CAAT;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AAEArC,EAAAA,SAAS,CAAC,MAAM;AACZ+B,IAAAA,KAAK,CAAC2B,SAAN,CAAgBnB,OAAhB,EADY,CAEX;AACJ,GAHQ,EAGN,CAACA,OAAD,CAHM,CAAT;;AAMA,QAAMoB,YAAY,GAAG,MAAOC,CAAP,IAAa;AAC9Bf,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAX,IAAAA,gBAAgB,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAhB;;AACA,QAAIF,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,MAAsB,EAA1B,EAA8B;AAC1B,YAAMC,SAAS,GAAG,MAAM3C,aAAa,CAACwC,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAArC;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCM,SAAhC;AACAhC,MAAAA,KAAK,CAACiC,aAAN,CAAoB,eAApB,EAAqCD,SAArC;AACH;AACJ,GARD;;AAUA,QAAME,aAAa,GAAG,MAAM;AACxBpB,IAAAA,SAAS,CAAC,IAAD,CAAT;AACAX,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAF,IAAAA,QAAQ,CAAChB,YAAY,CAAC,EAAD,CAAb,CAAR;AACH,GAJD;;AAMA,SACI,0CACA,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAS,IAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,EAAE,EAAC,WAAR;AACI,IAAA,KAAK,EAAE;AAAEkD,MAAAA,eAAe,gBAAS/B,OAAO,IAAIQ,aAApB;AAAjB,KADX;AAEI,IAAA,SAAS,EAAC,WAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAExB,QAA/B;AAAyC,IAAA,GAAG,EAAC,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAO,IAAA,SAAS,EAAC,aAAjB;AAA+B,IAAA,IAAI,EAAC,MAApC;AAA2C,IAAA,MAAM,EAAC,SAAlD;AAA4D,IAAA,QAAQ,EAAEwC,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAMI;AAAO,IAAA,SAAS,EAAC,oBAAjB;AAAsC,IAAA,OAAO,EAAEM,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAE/C,UAA/B;AAA2C,IAAA,GAAG,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,CANJ,CAPJ,CAFJ,EAqBKiD,QAAQ,CAAC9B,IAAD,EAAOO,MAAP,CArBb,CADJ,CADJ,CADA,CADJ;AA+BH;;AAED,SAASuB,QAAT,CAAkB9B,IAAlB,EAAwBO,MAAxB,EAAgC;AAAA,qBACI7C,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,QACrBqE,QADqB;AAAA,QACXC,WADW;;AAAA,sBAEMtE,QAAQ,CAAC,MAAD,CAFd;AAAA;AAAA,QAErBuE,SAFqB;AAAA,QAEVC,YAFU;;AAG5B,QAAMC,OAAO,GAAGvD,MAAM,CAACwD,IAAI,CAACC,GAAL,KAAa,YAAd,CAAN,CAAkCC,MAAlC,CAAyC,YAAzC,CAAhB;AACA,QAAMC,OAAO,GAAG3D,MAAM,CAACwD,IAAI,CAACC,GAAL,KAAa,aAAd,CAAN,CAAmCC,MAAnC,CAA0C,YAA1C,CAAhB;AAEA,SACI,0CACKP,QAAQ,IAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjB,EAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,QAAQ,EAAE,MAAMG,YAAY,CAAC,MAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAiD,IAAA,IAAI,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,IAAI,EAAC,MAAlC;AAAyC,IAAA,QAAQ,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CAHJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,OAAV;AAAkB,IAAA,IAAI,EAAC,MAAvB;AAA8B,IAAA,IAAI,EAAC,OAAnC;AAA2C,IAAA,QAAQ,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAPJ,EAWI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAiD,IAAA,IAAI,EAAC,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAiD,IAAA,IAAI,EAAC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAaI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,YADT;AAEI,IAAA,EAAE,EAAC,YAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,GAAG,EAAEC,OAJT;AAKI,IAAA,GAAG,EAAEI,OALT;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,CADJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,KAAZ;AAAkB,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAe;AACrC,aAAO,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAE,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,GAAtB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,IAAvC,EAA4C,GAA5C,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D,IAA7D,EAAkE,GAAlE,EAAuE,IAAvE,EAA6E,IAA7E;AAAnB,SACHA,KADG;AAEP,QAAA,EAAE,EAAC,KAFI;AAGP,QAAA,IAAI,EAAC,MAHE;AAIP,QAAA,IAAI,EAAC,KAJE;AAKP,QAAA,QAAQ,MALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAMC,KAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,CAZJ,CAbJ,EAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,QAAQ,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,OAAO,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CArCJ,CADJ,EA2CI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAA4C,IAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,IAAD,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,IAAI,EAAC,QAAjC;AAA0C,IAAA,KAAK,EAAE;AAAES,MAAAA,UAAU,YAAKlC,MAAM,GAAG,MAAH,GAAY0B,SAAvB;AAAZ,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFJ,CA3CJ,CAFJ,CADJ;AAqDH;;AAED,MAAMS,QAAQ,GAAG9E,UAAU,CAACK,UAAU,CAAC;AACnC0E,EAAAA,gBAAgB,CAAC;AACbC,IAAAA,IADa;AAEbC,IAAAA,UAFa;AAGbC,IAAAA,QAHa;AAIbzC,IAAAA;AAJa,GAAD,EAKb;AACC,WAAO;AACHuC,MAAAA,IAAI,EAAEA,IAAI,IAAI,EADX;AAEHC,MAAAA,UAAU,EAAEA,UAAU,IAAI,EAFvB;AAGHC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EAHnB;AAIHzC,MAAAA,aAAa,EAAEA,aAAa,IAAI;AAJ7B,KAAP;AAMH,GAbkC;;AAcnC0C,EAAAA,gBAAgB,EAAE1E,GAAG,CAAC2E,MAAJ,GAAaC,KAAb,CAAmB;AACjCL,IAAAA,IAAI,EAAEvE,GAAG,CAAC6E,MAAJ,GAAaC,QAAb,CAAsB,2BAAtB,CAD2B;AAEjCN,IAAAA,UAAU,EAAExE,GAAG,CAAC+E,IAAJ,GAAWD,QAAX,CAAoB,gCAApB,CAFqB;AAGjCL,IAAAA,QAAQ,EAAEzE,GAAG,CAAC6E,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB;AAHuB,GAAnB,CAdiB;;AAmBnCE,EAAAA,YAAY,CAACC,MAAD,EAAS;AAAE5D,IAAAA,KAAF;AAAS2B,IAAAA;AAAT,GAAT,EAA+B;AACvC,UAAMkC,OAAO,GAAG;AACZC,MAAAA,IAAI,EAAE;AACFxD,QAAAA,IAAI,EAAE;AACF4C,UAAAA,IAAI,EAAEU,MAAM,CAACV,IADX;AAEFa,UAAAA,KAAK,EAAEH,MAAM,CAACG,KAFZ;AAGFZ,UAAAA,UAAU,EAAES,MAAM,CAACT,UAHjB;AAIFa,UAAAA,MAAM,EAAEJ,MAAM,CAACI,MAJb;AAKFC,UAAAA,aAAa,EAAEL,MAAM,CAACK,aALpB;AAMFC,UAAAA,iBAAiB,EAAEN,MAAM,CAACM,iBANxB;AAOFC,UAAAA,YAAY,EAAEP,MAAM,CAACO,YAPnB;AAQFC,UAAAA,IAAI,EAAER,MAAM,CAACQ,IARX;AASF3D,UAAAA,KAAK,EAAEmD,MAAM,CAACnD,KATZ;AAUF4D,UAAAA,OAAO,EAAE,QAVP;AAWFC,UAAAA,WAAW,EAAEV,MAAM,CAACU,WAXlB;AAYFC,UAAAA,YAAY,EAAEX,MAAM,CAACW,YAZnB;AAaFC,UAAAA,GAAG,EAAEZ,MAAM,CAACY,GAbV;AAcFpB,UAAAA,QAAQ,EAAEQ,MAAM,CAACR,QAdf;AAeFzC,UAAAA,aAAa,EAAEiD,MAAM,CAACjD;AAfpB;AADJ;AADM,KAAhB;AAqBA9B,IAAAA,GAAG,CAAC4F,GAAJ,CAAQ3F,MAAM,CAACoC,IAAP,CAAYC,WAApB,EAAiC,SAAjC,EAA4C0C,OAA5C,EACKzC,IADL,CACUC,QAAQ,IAAI;AACdI,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCmC,OAArC;AACAa,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACH,KAJL,EAKKrD,KALL,CAKWC,KAAK,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCmC,OAArC;AACA7D,MAAAA,KAAK,CAAC6E,KAAN,CAAYrD,KAAZ,CAAkBxC,YAAY,CAAC8F,gBAA/B;AACH,KARL;AASH;;AAlDkC,CAAD,CAAV,CAmDzB/E,YAnDyB,CAAD,CAA3B;AAqDA,eAAe3B,SAAS,GAAG4E,QAAH,CAAxB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter, Redirect } from \"react-router-dom\";\nimport { withAlert } from 'react-alert';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withFormik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport MaskedInput from 'react-text-mask';\nimport { API } from \"aws-amplify\";\nimport config from '../../config/constants';\nimport PageContainer from \"../../components/features/PageContainer\";\nimport AlertMessage from '../../components/elements/AlertMessage';\nimport {setUserImage} from \"../../store/actions/user.action\";\nimport moment from 'moment';\nimport avatarDefault from \"../../assets/icons/avatar-preto-header.svg\";\nimport iconremove from '../../assets/images/icon-remove-profile.png';\nimport iconedit from '../../assets/images/editar-perfil-profile.png';\n\nimport './styles.scss';\n\nconst convertBase64 = (image) => {\n    return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n        reader.readAsDataURL(image);\n        reader.onloadend = () => {\n            resolve(reader.result)\n        };\n    })\n};\n\nfunction EditarPerfil(props) {\n    const dispatch = useDispatch()\n    const [thumbnailFile, setThumbnailFile] = useState(\"\");\n    const [preview, setPreview] = useState(\"\")\n    const [user, setUser] = useState([]);\n    const userOld = useSelector(state => state.user.data.user);\n    const profile_image = userOld.profile_image ? userOld.profile_image : avatarDefault;\n    const [change, setChange] = useState(false);\n\n    useEffect(() => {\n        setPreview(thumbnailFile ? URL.createObjectURL(thumbnailFile) : profile_image);\n    }, [thumbnailFile, profile_image])\n\n    useEffect(() => {\n        API.get(config.APIS.PLAYERSTARS, '/player/get-my-profile')\n            .then(response => {\n                setUser(response.data.player.user);\n            })\n            .catch(error => {\n                console.log(\"ERRO NO GET: \", error)\n            })\n    }, []);\n\n    console.log(user)\n\n    useEffect(() => {\n        props.setValues(userOld)\n         // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userOld])\n\n\n    const onChangeFile = async (e) => {\n        setChange(true)\n        setThumbnailFile(e.target.files[0])\n        if (e.target.files[0] !== \"\") {\n            const imgBase64 = await convertBase64(e.target.files[0])\n            console.log(\"::::::::BASE64::\", imgBase64)\n            props.setFieldValue(\"profile_image\", imgBase64)\n        }   \n    }\n\n    const removePreview = () => {\n        setChange(true)\n        setThumbnailFile(\"\")\n        dispatch(setUserImage(\"\"))\n    }\n\n    return (\n        <>\n        <PageContainer public={false}>\n            <section className=\"containerEditProfile\">\n                <div className=\"contentEditProfile\">\n                    <h2 className=\"titleEditProfile\">Editar Perfil</h2>\n                    <div className=\"containerEditAvatar\">\n                        <div className=\"containerAvatar\">\n                            <div id=\"thumbnail\"\n                                style={{ backgroundImage: `url(${preview || avatarDefault})`}}\n                                className=\"thumbnail\"\n                            ></div>\n                        </div>\n                        <div className=\"containerEditRemove\">\n                            <label className=\"containerPutAvatar\">\n                                <img className=\"iconEdit\" src={iconedit} alt=\"Icon editar\" />\n                                <span className=\"textEdit\">Alterar imagem</span>\n                                <input className=\"inputAvatar\" type=\"file\" accept=\"image/*\" onChange={onChangeFile} />\n                            </label>\n                            <label className=\"containerPutAvatar\" onClick={removePreview}>\n                                <img className=\"iconEdit\" src={iconremove} alt=\"Icon remover\" />\n                                <span className=\"textEdit\">Excluir</span>\n                            </label>\n                        </div>\n                    </div>\n                    {EditForm(user, change)}\n                </div>\n            </section>\n            </PageContainer>\n        </>\n    )\n}\n\nfunction EditForm(user, change) {\n    const [redirect, setRedirect] = useState(false);\n    const [btn_color, setBtn_color] = useState(\"#bbb\");\n    const dateMax = moment(Date.now() - 567648000000).format('YYYY-MM-DD');\n    const dateMin = moment(Date.now() - 2838240000000).format('YYYY-MM-DD');\n    \n    return (\n        <>\n            {redirect && <Redirect to='/perfil' />}\n            <Form className=\"dadosPessoais\" onChange={() => setBtn_color('#000')}>\n                <div className=\"blocoDadosPessoais\">\n                    <h3 className=\"titleH3\">Dados pessoais</h3>\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"nome\" />\n                    <fieldset>\n                        <Field id=\"nome\" type=\"text\" name=\"name\" required />\n                        <label className=\"label\" htmlFor=\"nome\" >Nome completo</label>\n                    </fieldset>\n                    <fieldset>\n                        <Field id=\"email\" type=\"text\" name=\"email\" required />\n                        <label className=\"label\" htmlFor=\"email\" >E-mail</label>\n                    </fieldset>\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"nascimento\" />\n                    <ErrorMessage className=\"error\" component=\"span\" name=\"nickname\" />\n                    <div className=\"doisCampos\">\n                        <fieldset>\n                            <Field \n                                name=\"date_birth\" \n                                id=\"nascimento\" \n                                type=\"date\"\n                                max={dateMax}\n                                min={dateMin}\n                                required \n                            />\n                            <label className=\"label\" htmlFor=\"nascimento\">Nascimento</label>\n                        </fieldset>\n                        <fieldset> \n                            <Field name=\"cpf\" render={({ field }) => {\n                                return <MaskedInput mask={[/[0-9]/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/,'.', /\\d/, /\\d/, /\\d/,'-', /\\d/, /\\d/]}\n                                {...field}\n                                id=\"cpf\" \n                                type=\"text\" \n                                name=\"cpf\" \n                                required />\n                                }} /> \n                            <label className=\"label\" htmlFor=\"cpf\">CPF</label>\n                        </fieldset>\n                    </div>\n                    <fieldset>\n                        <Field id=\"nickname\" type=\"text\" name=\"nickname\" required />\n                        <label className=\"label\" htmlFor=\"nickname\" >Nickname</label>\n                    </fieldset>\n                </div>\n                <div className=\"containerBtn\">\n                    <button className=\"btnCancel\" type=\"button\" onClick={() => setRedirect(true)}>Cancelar</button>\n                    <button className=\"btnSave\" type=\"submit\" style={{ background: `${change ? '#000' : btn_color}` }}>Salvar alterações</button>\n                </div>\n            </Form>\n        </>\n    )\n}\n\nconst SaveEdit = withRouter(withFormik({\n    mapPropsToValues({\n        name,\n        date_birth,\n        nickname,\n        profile_image\n    }) {\n        return {\n            name: name || '',\n            date_birth: date_birth || '',\n            nickname: nickname || '',\n            profile_image: profile_image || ''\n        }\n    },\n    validationSchema: Yup.object().shape({\n        name: Yup.string().required('Digite seu nome completo!'),\n        date_birth: Yup.date().required('Digite sua data de nascimento!'),\n        nickname: Yup.string().required('Digite seu nickname!')\n    }),\n    handleSubmit(values, { props, setValues }) {\n        const options = {\n            body: {\n                user: {\n                    name: values.name,\n                    email: values.email,\n                    date_birth: values.date_birth,\n                    street: values.street,\n                    street_number: values.street_number,\n                    street_complement: values.street_complement,\n                    neighborhood: values.neighborhood,\n                    city: values.city,\n                    state: values.state,\n                    country: \"Brasil\",\n                    postal_code: values.postal_code,\n                    phone_number: values.phone_number,\n                    cpf: values.cpf,\n                    nickname: values.nickname,\n                    profile_image: values.profile_image\n                }\n            }\n        }\n        API.put(config.APIS.PLAYERSTARS, '/player', options)\n            .then(response => {\n                console.log(\":::::::OPTIONS:::::::\", options)\n                window.location.href = '/perfil'\n            })\n            .catch(error => {\n                console.log(\":::::::OPTIONS:::::::\", options)\n                props.alert.error(AlertMessage.erroEditDataUser);\n            })\n    }\n})(EditarPerfil));\n\nexport default withAlert()(SaveEdit)"]},"metadata":{},"sourceType":"module"}